{
  "nodes": [
    {
      "data": {
        "id": "continue.dev",
        "label": "Continue",
        "type": "Product",
        "properties": {
          "url": "https://www.continue.dev/",
          "github": "https://github.com/continuedev/continue",
          "description": "Continue enables developers to create, share, and use custom AI code assistants with our open-source VS Code and JetBrains extensions and hub of models, rules, prompts, docs, and other building blocks.",
          "github_description": "‚è© Create, share, and use custom AI code assistants with our open-source IDE extensions and hub of models, rules, prompts, docs, and other building blocks",
          "github_creation": "2023-05-24T03:39:39Z",
          "stars": 27241,
          "forks": 3013,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "witsyai",
        "label": "Witsy",
        "type": "Product",
        "properties": {
          "url": "https://www.witsyai.com/",
          "github": "https://github.com/nbonamy/witsy",
          "description": "Witsy: desktop AI assistant / universal MCP client.",
          "github_description": "Witsy: desktop AI assistant / universal MCP client",
          "github_creation": "2024-04-25T03:55:22Z",
          "stars": 1221,
          "forks": 90,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "trae",
        "label": "Trae",
        "type": "Product",
        "properties": {
          "url": "https://www.trae.ai/"
        }
      }
    },
    {
      "data": {
        "id": "cline",
        "label": "Cline",
        "type": "Product",
        "properties": {
          "url": "https://cline.bot/"
        }
      }
    },
    {
      "data": {
        "id": "databutton",
        "label": "Databutton",
        "type": "Product",
        "properties": {
          "url": "https://databutton.com/"
        }
      }
    },
    {
      "data": {
        "id": "base44",
        "label": "Base44",
        "type": "Product",
        "properties": {
          "url": "https://base44.com/",
          "description": "The first all-in-one AI platform to easily build fully functioning apps - without coding."
        }
      }
    },
    {
      "data": {
        "id": "cursor",
        "label": "Cursor",
        "type": "Product",
        "properties": {
          "url": "https://cursor.com/"
        }
      }
    },
    {
      "data": {
        "id": "Windsurf",
        "label": "Windsurf",
        "type": "Product",
        "properties": {
          "url": "https://windsurf.com/"
        }
      }
    },
    {
      "data": {
        "id": "bolt",
        "label": "Bolt",
        "type": "Product",
        "properties": {
          "url": "https://bolt.new"
        }
      }
    },
    {
      "data": {
        "id": "lovable",
        "label": "Lovable",
        "type": "Product",
        "properties": {
          "url": "https://lovable.dev/"
        }
      }
    },
    {
      "data": {
        "id": "v0",
        "label": "v0",
        "type": "Product",
        "properties": {
          "url": "https://v0.dev/"
        }
      }
    },
    {
      "data": {
        "id": "augmentcode",
        "label": "Augment Code",
        "type": "Product",
        "properties": {
          "url": "https://www.augmentcode.com/"
        }
      }
    },
    {
      "data": {
        "id": "Mocha",
        "label": "Mocha",
        "type": "Product",
        "properties": {
          "url": "https://getmocha.com/"
        }
      }
    },
    {
      "data": {
        "id": "GithubCopilot",
        "label": "GitHub Copilot",
        "type": "Product",
        "properties": {
          "url": "https://github.com/features/copilot"
        }
      }
    },
    {
      "data": {
        "id": "RorkApp",
        "label": "Rork",
        "type": "Product",
        "properties": {
          "url": "https://rork.com/"
        }
      }
    },
    {
      "data": {
        "id": "FirebaseStudio",
        "label": "Firebase Studio",
        "type": "Product",
        "properties": {
          "url": "https://firebase.studio/"
        }
      }
    },
    {
      "data": {
        "id": "GrokStudio",
        "label": "Grok Studio",
        "type": "Product",
        "properties": {
          "url": "https://grokai.studio/"
        }
      }
    },
    {
      "data": {
        "id": "CanvaCode",
        "label": "Canva Code",
        "type": "Product",
        "properties": {
          "url": "https://www.canva.com/ai-code-generator/"
        }
      }
    },
    {
      "data": {
        "id": "a0dev",
        "label": "a0.dev",
        "type": "Product",
        "properties": {
          "url": "https://a0.dev/"
        }
      }
    },
    {
      "data": {
        "id": "AutoGPT",
        "label": "AutoGPT",
        "type": "Product",
        "properties": {
          "url": ""
        }
      }
    },
    {
      "data": {
        "id": "LangChain",
        "label": "LangChain",
        "type": "Product",
        "properties": {
          "url": "https://www.langchain.com/",
          "github": "https://github.com/langchain-ai/langchain",
          "license": "MIT License",
          "github_description": "ü¶úüîó Build context-aware reasoning applications",
          "github_creation": "2022-10-17T02:58:36Z",
          "stars": 109914,
          "forks": 17883
        }
      }
    },
    {
      "data": {
        "id": "dify",
        "label": "Dify",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/langgenius/dify",
          "license": "Other",
          "github_description": "Production-ready platform for agentic workflow development.",
          "github_creation": "2023-04-12T07:40:24Z",
          "stars": 104196,
          "forks": 15673
        }
      }
    },
    {
      "data": {
        "id": "screenshot-to-code",
        "label": "screenshot-to-code",
        "type": "Product",
        "properties": {
          "url": "https://screenshottocode.com/",
          "github": "https://github.com/abi/screenshot-to-code",
          "license": "MIT License",
          "github_description": "Drop in a screenshot and convert it to clean code (HTML/Tailwind/React/Vue)",
          "github_creation": "2023-11-14T17:53:32Z",
          "stars": 70221,
          "forks": 8672
        }
      }
    },
    {
      "data": {
        "id": "open-interpreter",
        "label": "open-interpreter",
        "type": "Product",
        "properties": {
          "url": "https://www.openinterpreter.com/",
          "github": "https://github.com/OpenInterpreter/open-interpreter",
          "license": "GNU Affero General Public License v3.0",
          "github_description": "A natural language interface for computers",
          "github_creation": "2023-07-14T07:10:44Z",
          "stars": 59731,
          "forks": 5084
        }
      }
    },
    {
      "data": {
        "id": "MetaGPT",
        "label": "MetaGPT",
        "type": "Product",
        "properties": {
          "url": "https://mgx.dev/",
          "github": "https://github.com/FoundationAgents/MetaGPT",
          "github_description": "üåü The Multi-Agent Framework: First AI Software Company, Towards Natural Language Programming",
          "github_creation": "2023-06-30T09:04:55Z",
          "stars": 56607,
          "forks": 6788,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "OpenHands",
        "label": "OpenHands",
        "type": "Product",
        "properties": {
          "url": "https://www.all-hands.dev/",
          "github": "https://github.com/All-Hands-AI/OpenHands",
          "license": "MIT License",
          "github_description": "üôå OpenHands: Code Less, Make More",
          "github_creation": "2024-03-13T03:33:31Z",
          "stars": 58984,
          "forks": 6808
        }
      }
    },
    {
      "data": {
        "id": "AutoGen",
        "label": "AutoGen",
        "type": "Product",
        "properties": {
          "url": "https://microsoft.github.io/autogen/stable/",
          "github": "https://github.com/microsoft/autogen",
          "license": "Creative Commons Attribution 4.0 International",
          "description": "AutoGen is a framework for creating multi-agent AI applications that can act autonomously or work alongside humans.",
          "github_description": "A programming framework for agentic AI ü§ñ PyPi: autogen-agentchat Discord: https://aka.ms/autogen-discord Office Hour: https://aka.ms/autogen-officehour",
          "github_creation": "2023-08-18T11:43:45Z",
          "stars": 46307,
          "forks": 7023
        }
      }
    },
    {
      "data": {
        "id": "llama-index",
        "label": "Llama Index",
        "type": "Product",
        "properties": {
          "url": "https://www.llamaindex.ai/",
          "github": "https://github.com/run-llama/llama_index",
          "license": "MIT License",
          "github_description": "LlamaIndex is the leading framework for building LLM-powered agents over your data.",
          "github_creation": "2022-11-02T04:24:54Z",
          "stars": 42506,
          "forks": 6091
        }
      }
    },
    {
      "data": {
        "id": "colossal-ai",
        "label": "ColossalAI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/hpcaitech/ColossalAI",
          "github_description": "Making large AI models cheaper, faster and more accessible",
          "github_creation": "2021-10-28T16:19:44Z",
          "stars": 40989,
          "forks": 4521,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "Flowise",
        "label": "Flowise",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/FlowiseAI/Flowise",
          "license": "Other",
          "github_description": "Build AI Agents, Visually",
          "github_creation": "2023-03-31T12:23:09Z",
          "stars": 40463,
          "forks": 20727
        }
      }
    },
    {
      "data": {
        "id": "AgentGPT",
        "label": "AgentGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/reworkd/AgentGPT",
          "license": "GNU General Public License v3.0",
          "github_description": "ü§ñ Assemble, configure, and deploy autonomous AI Agents in your browser.",
          "github_creation": "2023-04-07T02:29:19Z",
          "stars": 34385,
          "forks": 9444
        }
      }
    },
    {
      "data": {
        "id": "aider",
        "label": "aider",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Aider-AI/aider",
          "license": "Apache License 2.0",
          "github_description": "aider is AI pair programming in your terminal",
          "github_creation": "2023-05-09T18:57:49Z",
          "stars": 34635,
          "forks": 3180
        }
      }
    },
    {
      "data": {
        "id": "CrewAI",
        "label": "CrewAI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/joaomdmoura/crewai",
          "github_description": "Framework for orchestrating role-playing, autonomous AI agents. By fostering collaborative intelligence, CrewAI empowers agents to work together seamlessly, tackling complex tasks.",
          "github_creation": "2023-10-27T03:26:59Z",
          "stars": 33229,
          "forks": 4469,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ChatDev",
        "label": "ChatDev",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/OpenBMB/ChatDev",
          "github_description": "Create Customized Software using Natural Language Idea (through LLM-powered Multi-Agent Collaboration)",
          "github_creation": "2023-08-28T02:18:13Z",
          "stars": 27056,
          "forks": 3403,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "phidata",
        "label": "phidata",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/phidatahq/phidata",
          "license": "Mozilla Public License 2.0",
          "github_description": "Full-stack framework for building Multi-Agent Systems with memory, knowledge and reasoning.",
          "github_creation": "2022-05-04T15:23:02Z",
          "stars": 28639,
          "forks": 3644
        }
      }
    },
    {
      "data": {
        "id": "composio",
        "label": "composio",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/ComposioHQ/composio",
          "license": "Other",
          "github_description": "Composio equips your AI agents & LLMs with 100+ high-quality integrations via function calling",
          "github_creation": "2024-02-23T13:58:27Z",
          "stars": 25538,
          "forks": 4422
        }
      }
    },
    {
      "data": {
        "id": "SemanticKernel",
        "label": "Semantic Kernel",
        "type": "Product",
        "properties": {
          "url": "https://learn.microsoft.com/en-us/semantic-kernel/",
          "github": "https://github.com/microsoft/semantic-kernel",
          "license": "MIT License",
          "description": "Semantic Kernel is a lightweight, open-source development kit that lets you easily build AI agents and integrate the latest AI models into your C#, Python, or Java codebase. It serves as an efficient middleware that enables rapid delivery of enterprise-grade solutions.",
          "github_description": "Integrate cutting-edge LLM technology quickly and easily into your apps",
          "github_creation": "2023-02-27T17:39:42Z",
          "stars": 25131,
          "forks": 3974
        }
      }
    },
    {
      "data": {
        "id": "storm",
        "label": "storm",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/stanford-oval/storm",
          "license": "MIT License",
          "github_description": "An LLM-powered knowledge curation system that researches a topic and generates a full-length report with citations.",
          "github_creation": "2024-03-24T16:23:39Z",
          "stars": 24621,
          "forks": 2210
        }
      }
    },
    {
      "data": {
        "id": "dspy",
        "label": "DsPy",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/stanfordnlp/dspy",
          "license": "MIT License",
          "github_description": "DSPy: The framework for programming‚Äînot prompting‚Äîlanguage models",
          "github_creation": "2023-01-09T21:01:51Z",
          "stars": 25694,
          "forks": 1973
        }
      }
    },
    {
      "data": {
        "id": "gpt-researcher",
        "label": "GPT Researcher",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/assafelovic/gpt-researcher",
          "license": "Apache License 2.0",
          "github_description": "LLM based autonomous agent that conducts deep local and web research on any topic and generates a long report with citations.",
          "github_creation": "2023-05-12T10:33:54Z",
          "stars": 22022,
          "forks": 2894
        }
      }
    },
    {
      "data": {
        "id": "Haystack",
        "label": "Haystack",
        "type": "Product",
        "properties": {
          "url": "https://haystack.deepset.ai/",
          "github": "https://github.com/deepset-ai/haystack",
          "license": "Apache License 2.0",
          "github_description": "AI orchestration framework to build customizable, production-ready LLM applications. Connect components (models, vector DBs, file converters) to pipelines or agents that can interact with your data. With advanced retrieval methods, it's best suited for building RAG, question answering, semantic search or conversational agent chatbots.",
          "github_creation": "2019-11-14T09:05:28Z",
          "stars": 21239,
          "forks": 2227
        }
      }
    },
    {
      "data": {
        "id": "vanna",
        "label": "vanna",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/vanna-ai/vanna",
          "license": "MIT License",
          "github_description": "ü§ñ Chat with your SQL database üìä. Accurate Text-to-SQL Generation via LLMs using RAG üîÑ.",
          "github_creation": "2023-05-13T17:26:28Z",
          "stars": 18302,
          "forks": 1651
        }
      }
    },
    {
      "data": {
        "id": "letta",
        "label": "letta",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/letta-ai/letta",
          "license": "Apache License 2.0",
          "github_description": "Letta (formerly MemGPT) is the stateful agents framework with memory, reasoning, and context management.",
          "github_creation": "2023-10-11T07:38:37Z",
          "stars": 16985,
          "forks": 1763
        }
      }
    },
    {
      "data": {
        "id": "DB-GPT",
        "label": "DB-GPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/csunny/DB-GPT",
          "license": "MIT License",
          "github_description": "AI Native Data App Development framework with AWEL(Agentic Workflow Expression Language) and Agents",
          "github_creation": "2023-04-13T14:52:43Z",
          "stars": 16816,
          "forks": 2316
        }
      }
    },
    {
      "data": {
        "id": "eliza",
        "label": "eliza",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/elizaOS/eliza",
          "license": "MIT License",
          "github_description": "Autonomous agents for everyone",
          "github_creation": "2024-07-09T07:55:40Z",
          "stars": 16114,
          "forks": 5244
        }
      }
    },
    {
      "data": {
        "id": "swe-agent",
        "label": "swe-agent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/princeton-nlp/swe-agent",
          "license": "MIT License",
          "github_description": "SWE-agent takes a GitHub issue and tries to automatically fix it, using your LM of choice. It can also be employed for offensive cybersecurity or competitive coding challenges. [NeurIPS 2024] ",
          "github_creation": "2024-04-02T04:09:47Z",
          "stars": 16392,
          "forks": 1685
        }
      }
    },
    {
      "data": {
        "id": "botpress",
        "label": "botpress",
        "type": "Product",
        "properties": {
          "url": "https://botpress.com/",
          "github": "https://github.com/botpress/botpress",
          "license": "MIT License",
          "github_description": "The open-source hub to build & deploy GPT/LLM Agents ‚ö°Ô∏è",
          "github_creation": "2016-11-16T21:57:59Z",
          "stars": 13840,
          "forks": 2032
        }
      }
    },
    {
      "data": {
        "id": "plandex",
        "label": "plandex",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/plandex-ai/plandex",
          "license": "MIT License",
          "github_description": "Open source AI coding agent. Designed for large projects and real world tasks.",
          "github_creation": "2023-10-24T22:11:43Z",
          "stars": 13843,
          "forks": 971
        }
      }
    },
    {
      "data": {
        "id": "LangGraph",
        "label": "LangGraph",
        "type": "Product",
        "properties": {
          "url": "https://www.langchain.com/langgraph",
          "github": "https://github.com/langchain-ai/langgraph",
          "license": "MIT License",
          "github_description": "Build resilient language agents as graphs.",
          "github_creation": "2023-08-09T18:33:12Z",
          "stars": 14577,
          "forks": 2465
        }
      }
    },
    {
      "data": {
        "id": "AI-Scientist",
        "label": "AI-Scientist",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/SakanaAI/AI-Scientist",
          "license": "Apache License 2.0",
          "github_description": "The AI Scientist: Towards Fully Automated Open-Ended Scientific Discovery üßë‚Äçüî¨",
          "github_creation": "2024-08-12T09:32:55Z",
          "stars": 11157,
          "forks": 1628
        }
      }
    },
    {
      "data": {
        "id": "e2b",
        "label": "e2b",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/e2b-dev/e2b",
          "license": "Apache License 2.0",
          "github_description": "Secure open source cloud runtime for AI apps & AI agents",
          "github_creation": "2023-03-04T13:41:18Z",
          "stars": 8690,
          "forks": 592
        }
      }
    },
    {
      "data": {
        "id": "WrenAI",
        "label": "WrenAI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Canner/WrenAI",
          "license": "GNU Affero General Public License v3.0",
          "github_description": "‚ö°Ô∏èWren AI is your GenBI Agent, that you can query any database with natural language ‚Üí get accurate SQL(Text-to-SQL), charts(Text-to-Charts) & AI-generated insights in seconds. ",
          "github_creation": "2024-03-13T06:18:20Z",
          "stars": 8334,
          "forks": 820
        }
      }
    },
    {
      "data": {
        "id": "agentscope",
        "label": "agentscope",
        "type": "Product",
        "properties": {
          "url": "https://doc.agentscope.io/",
          "github": "https://github.com/modelscope/agentscope",
          "license": "Apache License 2.0",
          "description": "Start building LLM-empowered multi-agent applications in an easier way.",
          "github_description": "Start building LLM-empowered multi-agent applications in an easier way.",
          "github_creation": "2024-01-12T03:41:59Z",
          "stars": 7520,
          "forks": 444
        }
      }
    },
    {
      "data": {
        "id": "AlibabaCompany",
        "label": "Alibaba",
        "type": "Company",
        "properties": {
          "url": "",
          "github": "",
          "license": "",
          "description": ""
        }
      }
    },
    {
      "data": {
        "id": "agent-zero",
        "label": "Agent Zero",
        "type": "Product",
        "properties": {
          "url": "https://agent-zero.ai/",
          "github": "https://github.com/frdel/agent-zero",
          "license": "Other",
          "github_description": "Agent Zero AI framework",
          "github_creation": "2024-06-10T09:10:45Z",
          "stars": 10186,
          "forks": 2002
        }
      }
    },
    {
      "data": {
        "id": "superagent",
        "label": "SuperAgent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/homanp/superagent",
          "license": "MIT License",
          "github_description": "ü•∑ Run AI-agents with an API",
          "github_creation": "2023-05-10T18:50:39Z",
          "stars": 5953,
          "forks": 898
        }
      }
    },
    {
      "data": {
        "id": "TaskWeaver",
        "label": "TaskWeaver",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/microsoft/TaskWeaver",
          "license": "MIT License",
          "github_description": "A code-first agent framework for seamlessly planning and executing data analytics tasks. ",
          "github_creation": "2023-09-11T03:17:38Z",
          "stars": 5770,
          "forks": 741
        }
      }
    },
    {
      "data": {
        "id": "multi-agent-orchestrator",
        "label": "multi-agent-orchestrator",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/awslabs/multi-agent-orchestrator",
          "license": "Apache License 2.0",
          "github_description": "Flexible and powerful framework for managing multiple AI agents and handling complex conversations",
          "github_creation": "2024-07-23T12:48:30Z",
          "stars": 6056,
          "forks": 516
        }
      }
    },
    {
      "data": {
        "id": "vision-agent",
        "label": "vision-agent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/landing-ai/vision-agent",
          "license": "Apache License 2.0",
          "github_description": "Vision agent",
          "github_creation": "2024-02-13T02:06:20Z",
          "stars": 4874,
          "forks": 546
        }
      }
    },
    {
      "data": {
        "id": "gptme",
        "label": "gptme",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/ErikBjare/gptme",
          "license": "MIT License",
          "github_description": "Your agent in your terminal, equipped with local tools: writes code, uses the terminal, browses the web, vision.",
          "github_creation": "2023-03-24T16:25:01Z",
          "stars": 3870,
          "forks": 320
        }
      }
    },
    {
      "data": {
        "id": "agency-swarm",
        "label": "agency-swarm",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/VRSEN/agency-swarm",
          "license": "MIT License",
          "github_description": "Reliable agent framework built on top of OpenAI Assistants API. (Responses API soon)",
          "github_creation": "2023-11-16T02:29:26Z",
          "stars": 3701,
          "forks": 948
        }
      }
    },
    {
      "data": {
        "id": "cody",
        "label": "cody",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/sourcegraph/cody",
          "license": "Apache License 2.0",
          "github_description": "Type less, code more: Cody is an AI code assistant that uses advanced search and codebase context to help you write and fix code.",
          "github_creation": "2023-07-10T10:13:55Z",
          "stars": 3716,
          "forks": 430
        }
      }
    },
    {
      "data": {
        "id": "langdroid",
        "label": "langdroid",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/langroid/langroid",
          "license": "MIT License",
          "github_description": "Harness LLMs with Multi-Agent Programming",
          "github_creation": "2023-04-16T20:47:28Z",
          "stars": 3419,
          "forks": 324
        }
      }
    },
    {
      "data": {
        "id": "AGiXT",
        "label": "AGiXT",
        "type": "Product",
        "properties": {
          "url": "https://agixt.com/",
          "github": "https://github.com/Josh-XT/AGiXT",
          "license": "MIT License",
          "github_description": "AGiXT is a dynamic AI Agent Automation Platform that seamlessly orchestrates instruction management and complex task execution across diverse AI providers. Combining adaptive memory, smart features, and a versatile plugin system, AGiXT delivers efficient and comprehensive AI solutions.",
          "github_creation": "2023-04-17T19:35:00Z",
          "stars": 3030,
          "forks": 413
        }
      }
    },
    {
      "data": {
        "id": "lagent",
        "label": "lagent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/InternLM/lagent",
          "license": "Apache License 2.0",
          "github_description": "A lightweight framework for building LLM-based agents",
          "github_creation": "2023-08-20T12:45:45Z",
          "stars": 2150,
          "forks": 221
        }
      }
    },
    {
      "data": {
        "id": "DemoGPT",
        "label": "DemoGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/melih-unsal/DemoGPT",
          "license": "MIT License",
          "github_description": "ü§ñ Everything you need to create an LLM Agent‚Äîtools, prompts, frameworks, and models‚Äîall in one place.",
          "github_creation": "2023-06-07T09:56:20Z",
          "stars": 1837,
          "forks": 213
        }
      }
    },
    {
      "data": {
        "id": "uAgents",
        "label": "uAgents",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/fetchai/uAgents",
          "license": "Apache License 2.0",
          "github_description": "A fast and lightweight framework for creating decentralized agents with ease.",
          "github_creation": "2022-09-28T17:31:19Z",
          "stars": 1445,
          "forks": 312
        }
      }
    },
    {
      "data": {
        "id": "Adala",
        "label": "Adala",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/HumanSignal/Adala",
          "license": "Apache License 2.0",
          "github_description": "Adala: Autonomous DAta (Labeling) Agent framework",
          "github_creation": "2023-08-30T12:06:57Z",
          "stars": 1198,
          "forks": 98
        }
      }
    },
    {
      "data": {
        "id": "AIlice",
        "label": "AIlice",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/myshell-ai/AIlice",
          "license": "MIT License",
          "github_description": "AIlice is a fully autonomous, general-purpose AI agent.",
          "github_creation": "2023-10-16T01:51:14Z",
          "stars": 1200,
          "forks": 179
        }
      }
    },
    {
      "data": {
        "id": "dust",
        "label": "dust",
        "type": "Product",
        "properties": {
          "url": "https://dust.tt/",
          "github": "https://github.com/dust-tt/dust",
          "license": "MIT License",
          "github_description": "Custom AI assistant platform to speed up your work.",
          "github_creation": "2022-08-19T07:57:29Z",
          "stars": 1144,
          "forks": 149
        }
      }
    },
    {
      "data": {
        "id": "nous",
        "label": "nous",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/TrafficGuard/nous",
          "license": "MIT License",
          "github_description": "TypeScript AI platform with AI chat, Autonomous agents, Software developer agents, chatbots and more",
          "github_creation": "2024-04-10T06:27:09Z",
          "stars": 1084,
          "forks": 75
        }
      }
    },
    {
      "data": {
        "id": "aideml",
        "label": "aideml",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/WecoAI/aideml",
          "license": "MIT License",
          "github_description": "AIDE: AI-Driven Exploration in the Space of Code. State of the Art machine Learning engineering agents that automates AI R&D.",
          "github_creation": "2024-04-03T14:45:49Z",
          "stars": 930,
          "forks": 131
        }
      }
    },
    {
      "data": {
        "id": "AgentForge",
        "label": "Agent Forge",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/DataBassGit/AgentForge",
          "license": "GNU General Public License v3.0",
          "github_description": "Extensible AGI Framework",
          "github_creation": "2023-04-08T17:16:39Z",
          "stars": 668,
          "forks": 125
        }
      }
    },
    {
      "data": {
        "id": "data-to-paper",
        "label": "data-to-paper",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Technion-Kishony-lab/data-to-paper",
          "license": "MIT License",
          "github_description": "data-to-paper: Backward-traceable AI-driven scientific research",
          "github_creation": "2023-06-17T09:31:27Z",
          "stars": 663,
          "forks": 77
        }
      }
    },
    {
      "data": {
        "id": "pearai-app",
        "label": "pearai-app",
        "type": "Product",
        "properties": {
          "url": "https://trypear.ai/",
          "github": "https://github.com/trypear/pearai-app",
          "license": "MIT License",
          "github_description": "PearAI: Open Source AI Code Editor (Fork of VSCode). The PearAI Submodule (https://github.com/trypear/pearai-submodule) is a fork of Continue.",
          "github_creation": "2024-10-03T17:30:05Z",
          "stars": 609,
          "forks": 177
        }
      }
    },
    {
      "data": {
        "id": "fastagency",
        "label": "fastagency",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/airtai/fastagency",
          "license": "Apache License 2.0",
          "github_description": "The fastest way to bring multi-agent workflows to production.",
          "github_creation": "2024-07-17T04:34:02Z",
          "stars": 480,
          "forks": 50
        }
      }
    },
    {
      "data": {
        "id": "taskgen",
        "label": "taskgen",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/simbianai/taskgen",
          "license": "MIT License",
          "github_description": "Task-based Agentic Framework using StrictJSON as the core",
          "github_creation": "2024-02-17T02:57:53Z",
          "stars": 452,
          "forks": 44
        }
      }
    },
    {
      "data": {
        "id": "agentjo",
        "label": "agentjo",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/tanchongmin/agentjo",
          "license": "MIT License",
          "github_description": "Towards Human-Friendly, Fast Learning and Adaptable Agent Communities",
          "github_creation": "2024-10-16T23:38:07Z",
          "stars": 143,
          "forks": 13
        }
      }
    },
    {
      "data": {
        "id": "Manus",
        "label": "Manus",
        "type": "Product",
        "properties": {
          "url": "https://manus.im/"
        }
      }
    },
    {
      "data": {
        "id": "Devin",
        "label": "Devin",
        "type": "Product",
        "properties": {
          "url": "https://devin.ai/"
        }
      }
    },
    {
      "data": {
        "id": "OpenManus",
        "label": "OpenManus",
        "type": "Product",
        "properties": {
          "url": ""
        }
      }
    },
    {
      "data": {
        "id": "browser-use",
        "label": "browser-use",
        "type": "Product",
        "properties": {
          "url": ""
        }
      }
    },
    {
      "data": {
        "id": "Goose",
        "label": "Goose",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/block/goose",
          "github_description": "an open source, extensible AI agent that goes beyond code suggestions - install, execute, edit, and test with any LLM",
          "github_creation": "2024-08-23T19:03:36Z",
          "stars": 15043,
          "forks": 1225,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "Rowboat",
        "label": "Rowboat",
        "type": "Product",
        "properties": {
          "url": "https://www.rowboatlabs.com/",
          "github": "https://github.com/rowboatlabs/rowboat",
          "github_description": "AI-powered multi-agent builder",
          "github_creation": "2025-01-13T09:30:40Z",
          "stars": 3242,
          "forks": 278,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "Ollama",
        "label": "Ollama",
        "type": "Product",
        "properties": {
          "url": "https://ollama.com/",
          "github": "https://github.com/ollama/ollama",
          "license": "MIT License",
          "github_description": "Get up and running with Llama 3.3, DeepSeek-R1, Phi-4, Gemma 3, Mistral Small 3.1 and other large language models.",
          "github_creation": "2023-06-26T19:39:32Z",
          "stars": 144478,
          "forks": 12166
        }
      }
    },
    {
      "data": {
        "id": "LangFlow",
        "label": "LangFlow",
        "type": "Product",
        "properties": {
          "url": "https://www.langflow.org/",
          "github": "https://github.com/langflow-ai/langflow",
          "license": "MIT License",
          "github_description": "Langflow is a powerful tool for building and deploying AI-powered agents and workflows.",
          "github_creation": "2023-02-08T22:28:03Z",
          "stars": 76823,
          "forks": 6875
        }
      }
    },
    {
      "data": {
        "id": "vLLM",
        "label": "vLLM",
        "type": "Product",
        "properties": {
          "url": "https://docs.vllm.ai/",
          "github": "https://github.com/vllm-project/vllm",
          "github_description": "A high-throughput and memory-efficient inference and serving engine for LLMs",
          "github_creation": "2023-02-09T11:23:20Z",
          "stars": 50452,
          "forks": 8250,
          "license": "Apache License 2.0"
        },
        "license": "Apache-2.0 License"
      }
    },
    {
      "data": {
        "id": "DockerModelRunner",
        "label": "Docker Model Runner",
        "type": "Product",
        "properties": {
          "url": "https://www.docker.com/"
        }
      }
    },
    {
      "data": {
        "id": "LlamaCpp",
        "label": "llama.cpp",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/ggml-org/llama.cpp",
          "license": "MIT License",
          "description": "Inference of Meta's LLaMA model (and others) in pure C/C++",
          "github_description": "LLM inference in C/C++",
          "github_creation": "2023-03-10T18:58:00Z",
          "stars": 82065,
          "forks": 12161
        }
      }
    },
    {
      "data": {
        "id": "BitnetCpp",
        "label": "bitnet.cpp",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/microsoft/BitNet",
          "license": "MIT License",
          "description": "bitnet.cpp is the official inference framework for 1-bit LLMs (e.g., BitNet b1.58). It offers a suite of optimized kernels, that support fast and lossless inference of 1.58-bit models on CPU and GPU (NPU support will coming next).",
          "github_description": "Official inference framework for 1-bit LLMs",
          "github_creation": "2024-08-05T09:07:38Z",
          "stars": 20245,
          "forks": 1517
        }
      }
    },
    {
      "data": {
        "id": "ChatWise",
        "label": "ChatWise",
        "type": "Product",
        "properties": {
          "url": "https://chatwise.app/",
          "github": ""
        }
      }
    },
    {
      "data": {
        "id": "VisualStudioCode",
        "label": "Visual Studio Code",
        "type": "Product",
        "properties": {
          "url": "https://code.visualstudio.com/",
          "github": "https://github.com/microsoft/vscode",
          "description": "Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages and runtimes (such as C++, C#, Java, Python, PHP, Go, .NET).",
          "license": "MIT License",
          "github_description": "Visual Studio Code",
          "github_creation": "2015-09-03T20:23:38Z",
          "stars": 173767,
          "forks": 33253
        }
      }
    },
    {
      "data": {
        "id": "TransformersAgents",
        "label": "Transformers Agents",
        "type": "Product",
        "properties": {
          "url": "https://huggingface.co/docs/transformers/agents",
          "github": "https://github.com/huggingface/transformers",
          "license": "Apache License 2.0",
          "github_description": "ü§ó Transformers: the model-definition framework for state-of-the-art machine learning models in text, vision, audio, and multimodal models, for both inference and training. ",
          "github_creation": "2018-10-29T13:56:00Z",
          "stars": 145947,
          "forks": 29430
        }
      }
    },
    {
      "data": {
        "id": "Deepsite",
        "label": "Deepsite",
        "type": "Product",
        "properties": {
          "url": "https://deepsite.site/",
          "github": ""
        }
      }
    },
    {
      "data": {
        "id": "Smolagents",
        "label": "Smolagents",
        "type": "Product",
        "properties": {
          "url": "https://huggingface.co/docs/smolagents/index",
          "github": "https://github.com/huggingface/smolagents",
          "license": "Apache License 2.0",
          "github_description": "ü§ó smolagents: a barebones library for agents that think in code.",
          "github_creation": "2024-12-05T11:28:04Z",
          "stars": 20441,
          "forks": 1768
        }
      }
    },
    {
      "data": {
        "id": "Deepchat",
        "label": "Deepchat",
        "type": "Product",
        "properties": {
          "url": "https://deepchat.dev/",
          "github": "https://github.com/OvidijusParsiunas/deep-chat",
          "github_description": "Fully customizable AI chatbot component for your website",
          "github_creation": "2023-02-19T19:44:18Z",
          "stars": 2438,
          "forks": 334,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "YGUI",
        "label": "Y GUI",
        "type": "Product",
        "properties": {
          "url": "https://yovy.app",
          "github": "https://github.com/luohy15/y-gui",
          "license": "MIT License",
          "github_description": "A Tiny Web Chat App for AI Models with MCP Client Support",
          "github_creation": "2025-03-06T05:18:22Z",
          "stars": 145,
          "forks": 28
        }
      }
    },
    {
      "data": {
        "id": "YCLI",
        "label": "Y CLI",
        "type": "Product",
        "properties": {
          "github": "https://github.com/luohy15/y-cli",
          "license": "MIT License",
          "github_description": "A Tiny Terminal Chat App for AI Models with MCP Client Support",
          "github_creation": "2025-02-04T15:59:44Z",
          "stars": 165,
          "forks": 20
        }
      }
    },
    {
      "data": {
        "id": "CherryStudio",
        "label": "Cherry Studio",
        "type": "Product",
        "properties": {
          "url": "https://www.cherry-ai.com/",
          "github": "https://github.com/CherryHQ/cherry-studio",
          "license": "Other",
          "github_description": "üçí Cherry Studio is a desktop client that supports for multiple LLM providers.",
          "github_creation": "2024-05-24T01:56:26Z",
          "stars": 28839,
          "forks": 2501
        }
      }
    },
    {
      "data": {
        "id": "HyperChat",
        "label": "HyperChat",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/BigSweetPotatoStudio/HyperChat",
          "license": "Other",
          "github_description": "HyperChat is a Chat client that strives for openness, utilizing APIs from various LLMs to achieve the best Chat experience, as well as implementing productivity tools through the MCP protocol.",
          "github_creation": "2024-12-14T06:46:41Z",
          "stars": 617,
          "forks": 63
        }
      }
    },
    {
      "data": {
        "id": "RooCode",
        "label": "Roo Code",
        "type": "Product",
        "properties": {
          "url": "https://roocode.com/",
          "github": "https://github.com/RooCodeInc/Roo-Code",
          "license": "Apache License 2.0",
          "github_description": "Roo Code (prev. Roo Cline) gives you a whole dev team of AI agents in your code editor.",
          "github_creation": "2024-10-31T17:56:50Z",
          "stars": 15870,
          "forks": 1692
        }
      }
    },
    {
      "data": {
        "id": "5ire",
        "label": "5ire",
        "type": "Product",
        "properties": {
          "url": "https://5ire.app/",
          "github": "https://github.com/nanbingxyz/5ire",
          "license": "Other",
          "github_description": "5ire is a cross-platform desktop AI assistant, MCP client. It compatible with major service providers,  supports local knowledge base and  tools via model context protocol servers .",
          "github_creation": "2024-01-06T06:57:15Z",
          "stars": 3959,
          "forks": 281
        }
      }
    },
    {
      "data": {
        "id": "Lutra",
        "label": "Lutra",
        "type": "Product",
        "properties": {
          "url": "https://lutra.ai/"
        }
      }
    },
    {
      "data": {
        "id": "Refact",
        "label": "Refact.ai",
        "type": "Product",
        "properties": {
          "url": "https://refact.ai/",
          "github": "https://github.com/smallcloudai/refact",
          "license": "BSD 3-Clause \"New\" or \"Revised\" License",
          "github_description": "AI Agent that handles engineering tasks end-to-end: integrates with developers‚Äô tools, plans, executes, and iterates until it achieves a successful result.",
          "github_creation": "2023-04-19T06:43:51Z",
          "stars": 2219,
          "forks": 175
        }
      }
    },
    {
      "data": {
        "id": "Zed",
        "label": "Zed",
        "type": "Product",
        "properties": {
          "url": "https://zed.dev/",
          "github": "https://github.com/zed-industries/zed",
          "github_description": "Code at the speed of thought ‚Äì Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.",
          "github_creation": "2021-02-20T03:01:06Z",
          "stars": 61740,
          "forks": 4541,
          "license": "Other"
        }
      }
    },
    {
      "data": {
        "id": "MCPConnect",
        "label": "MCP Connect",
        "type": "Product",
        "properties": {
          "github": "https://github.com/EvalsOne/mcp-connect",
          "license": "MIT License",
          "github_description": "Enables cloud-based AI services to access local Stdio based MCP servers via HTTP requests",
          "github_creation": "2024-12-21T03:45:33Z",
          "stars": 199,
          "forks": 29
        }
      }
    },
    {
      "data": {
        "id": "ChatMCP",
        "label": "ChatMCP",
        "type": "Product",
        "properties": {
          "github": "https://github.com/daodao97/chatmcp",
          "license": "Apache License 2.0",
          "github_description": "ChatMCP is an AI chat client implementing the Model Context Protocol (MCP).",
          "github_creation": "2024-12-08T06:36:35Z",
          "stars": 1745,
          "forks": 143
        }
      }
    },
    {
      "data": {
        "id": "ClaudeCode",
        "label": "Claude Code",
        "type": "Product",
        "properties": {
          "url": "https://www.anthropic.com/claude-code"
        }
      }
    },
    {
      "data": {
        "id": "ChatGPT",
        "label": "ChatGPT",
        "type": "Product",
        "properties": {
          "url": "https://chatgpt.com/",
          "license": "Proprietary"
        }
      }
    },
    {
      "data": {
        "id": "Claude",
        "label": "Claude",
        "type": "Product",
        "properties": {
          "url": "https://claude.ai/",
          "license": "Proprietary"
        }
      }
    },
    {
      "data": {
        "id": "Langfuse",
        "label": "Langfuse",
        "type": "Product",
        "properties": {
          "url": "https://langfuse.com/",
          "github": "https://github.com/langfuse/langfuse",
          "license": "Other",
          "github_description": "ü™¢ Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. üçäYC W23 ",
          "github_creation": "2023-05-18T17:47:09Z",
          "stars": 12916,
          "forks": 1177
        }
      }
    },
    {
      "data": {
        "id": "LangSmith",
        "label": "LangSmith",
        "type": "Product",
        "properties": {
          "url": "https://smith.langchain.com/",
          "github": "https://github.com/langchain-ai/langsmith-sdk",
          "license": "MIT License",
          "description": "LangSmith is a unified observability & evals platform where teams can debug, test, and monitor AI app performance ‚Äî whether building with LangChain or not.",
          "github_description": "LangSmith Client SDK Implementations",
          "github_creation": "2023-05-30T19:03:00Z",
          "stars": 577,
          "forks": 123
        }
      }
    },
    {
      "data": {
        "id": "vectara-agentic",
        "label": "vectara-agentic",
        "type": "Product",
        "properties": {
          "url": "https://www.vectara.com/",
          "github": "https://github.com/vectara/py-vectara-agentic",
          "license": "Apache License 2.0",
          "github_description": "A python library for creating AI assistants with Vectara, using Agentic RAG",
          "github_creation": "2024-08-12T17:51:14Z",
          "stars": 103,
          "forks": 10
        }
      }
    },
    {
      "data": {
        "id": "Clark",
        "label": "Clark",
        "type": "Product",
        "properties": {
          "url": "https://www.superblocks.com/",
          "about": "AI Agent for building internal enterprise apps."
        }
      }
    },
    {
      "data": {
        "id": "ADK",
        "label": "Agent Development Kit",
        "type": "Product",
        "properties": {
          "url": "https://google.github.io/adk-docs/",
          "github": "https://github.com/google/adk-python",
          "license": "Apache License 2.0",
          "github_description": "An open-source, code-first Python toolkit for building, evaluating, and deploying sophisticated AI agents with flexibility and control.",
          "github_creation": "2025-04-01T20:44:40Z",
          "stars": 10335,
          "forks": 1321
        }
      }
    },
    {
      "data": {
        "id": "HRunner",
        "label": "HRunner",
        "type": "Product",
        "properties": {
          "url": "https://runner.hcompany.ai/"
        }
      }
    },
    {
      "data": {
        "id": "n8n",
        "label": "n8n",
        "type": "Product",
        "properties": {
          "url": "https://n8n.io/",
          "github": "https://github.com/n8n-io/n8n",
          "license": "Other",
          "github_description": "Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.",
          "github_creation": "2019-06-22T09:24:21Z",
          "stars": 110714,
          "forks": 31931
        }
      }
    },
    {
      "data": {
        "id": "Rivet",
        "label": "Rivet",
        "type": "Product",
        "properties": {
          "url": "https://rivet.ironcladapp.com/",
          "github": "https://github.com/Ironclad/rivet",
          "license": "MIT License",
          "github_description": "The open-source visual AI programming environment and TypeScript library",
          "github_creation": "2023-04-22T06:41:01Z",
          "stars": 3951,
          "forks": 328
        }
      }
    },
    {
      "data": {
        "id": "Jurist",
        "label": "Jurist",
        "type": "Product",
        "properties": {
          "url": "https://ironcladapp.com/product/jurist/"
        }
      }
    },
    {
      "data": {
        "id": "IroncladCLM",
        "label": "Ironclad CLM",
        "type": "Product",
        "properties": {
          "url": "https://ironcladapp.com/product/"
        }
      }
    },
    {
      "data": {
        "id": "SuperAGI",
        "label": "SuperAGI",
        "type": "Product",
        "properties": {
          "url": "https://superagi.com/"
        }
      }
    },
    {
      "data": {
        "id": "UFO",
        "label": "UFO",
        "type": "Product",
        "properties": {
          "github": "https://github.com/microsoft/UFO",
          "license": "MIT License",
          "github_description": "The Desktop AgentOS.",
          "github_creation": "2024-01-08T05:07:52Z",
          "stars": 7423,
          "forks": 913
        }
      }
    },
    {
      "data": {
        "id": "LiveKit",
        "label": "LiveKit Agents",
        "type": "Product",
        "properties": {
          "url": "https://livekit.io/",
          "github": "https://github.com/livekit/agents",
          "license": "Apache License 2.0",
          "github_description": "A powerful framework for building realtime voice AI agents ü§ñüéôÔ∏èüìπ ",
          "github_creation": "2023-10-19T23:00:55Z",
          "stars": 6425,
          "forks": 989
        }
      }
    },
    {
      "data": {
        "id": "llm_agents",
        "label": "llm_agents",
        "type": "Product",
        "properties": {
          "github": "https://github.com/mpaepper/llm_agents",
          "license": "MIT License",
          "github_description": "Build agents which are controlled by LLMs",
          "github_creation": "2023-04-04T21:25:35Z",
          "stars": 989,
          "forks": 82
        }
      }
    },
    {
      "data": {
        "id": "AgentFlow",
        "label": "AgentFlow",
        "type": "Product",
        "properties": {
          "github": "https://github.com/simonmesmith/agentflow",
          "license": "MIT License",
          "github_description": "Complex LLM Workflows from Simple JSON.",
          "github_creation": "2023-08-02T20:57:16Z",
          "stars": 304,
          "forks": 29
        }
      }
    },
    {
      "data": {
        "id": "llama-stack-apps",
        "label": "Llama Stack Apps",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/meta-llama/llama-stack-apps",
          "license": "MIT License",
          "github_description": "Agentic components of the Llama Stack APIs",
          "github_creation": "2024-06-25T22:29:07Z",
          "stars": 4263,
          "forks": 627
        }
      }
    },
    {
      "data": {
        "id": "llama-stack",
        "label": "Llama Stack",
        "type": "Product",
        "properties": {
          "url": "https://llama-stack.readthedocs.io/",
          "github": "https://github.com/meta-llama/llama-stack",
          "license": "MIT License",
          "github_description": "Composable building blocks to build Llama Apps",
          "github_creation": "2024-06-25T22:32:26Z",
          "stars": 7861,
          "forks": 1069
        }
      }
    },
    {
      "data": {
        "id": "AgentVerse",
        "label": "AgentVerse",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/openbmb/agentverse",
          "license": "Apache License 2.0",
          "github_description": "ü§ñ AgentVerse ü™ê is designed to facilitate the deployment of multiple LLM-based agents in various applications, which primarily provides two frameworks: task-solving and simulation",
          "github_creation": "2023-05-06T01:43:19Z",
          "stars": 4628,
          "forks": 450
        }
      }
    },
    {
      "data": {
        "id": "MaestroFramework",
        "label": "Maestro",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Doriandarko/maestro",
          "license": "",
          "github_description": "A framework for Claude Opus to intelligently orchestrate subagents.",
          "github_creation": "2024-03-19T20:48:29Z",
          "stars": 4236,
          "forks": 655
        }
      }
    },
    {
      "data": {
        "id": "Upsonic",
        "label": "Upsonic",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/upsonic/upsonic",
          "license": "MIT License",
          "github_description": "The most reliable AI agent framework that supports MCP.",
          "github_creation": "2024-05-26T16:23:38Z",
          "stars": 7543,
          "forks": 704
        }
      }
    },
    {
      "data": {
        "id": "Mastra",
        "label": "Mastra",
        "type": "Product",
        "properties": {
          "url": "https://mastra.ai/",
          "github": "https://github.com/mastra-ai/mastra",
          "license": "Other",
          "description": "The TypeScript AI agent framework. Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama.",
          "github_description": "The TypeScript AI agent framework. ‚ö° Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama.",
          "github_creation": "2024-08-06T20:44:31Z",
          "stars": 14430,
          "forks": 870
        }
      }
    },
    {
      "data": {
        "id": "PortiaAI",
        "label": "Portia AI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/portiaAI/portia-sdk-python",
          "license": "MIT License",
          "github_description": "Portia Labs Python SDK for building agentic workflows.",
          "github_creation": "2024-12-12T09:29:57Z",
          "stars": 191,
          "forks": 9
        }
      }
    },
    {
      "data": {
        "id": "Swarm",
        "label": "Swarm",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/openai/swarm",
          "license": "MIT License",
          "github_description": "Educational framework exploring ergonomic, lightweight multi-agent orchestration. Managed by OpenAI Solution team.",
          "github_creation": "2024-02-22T20:53:54Z",
          "stars": 19973,
          "forks": 2119
        }
      }
    },
    {
      "data": {
        "id": "GPTPilot",
        "label": "GPT Pilot",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Pythagora-io/gpt-pilot",
          "license": "Other",
          "github_description": "The first real AI developer",
          "github_creation": "2023-08-16T11:56:07Z",
          "stars": 32848,
          "forks": 3352
        }
      }
    },
    {
      "data": {
        "id": "Devika",
        "label": "Devika",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/stitionai/devika",
          "license": "MIT License",
          "description": "Devika is an Agentic AI Software Engineer that can understand high-level human instructions, break them down into steps, research relevant information, and write code to achieve the given objective. Devika aims to be a competitive open-source alternative to Devin by Cognition AI.",
          "github_description": "Devika is an Agentic AI Software Engineer that can understand high-level human instructions, break them down into steps, research relevant information, and write code to achieve the given objective. Devika aims to be a competitive open-source alternative to Devin by Cognition AI. [‚ö†Ô∏è DEVIKA DOES NOT HAVE AN OFFICIAL WEBSITE ‚ö†Ô∏è]",
          "github_creation": "2024-03-21T03:03:21Z",
          "stars": 19348,
          "forks": 2566
        }
      }
    },
    {
      "data": {
        "id": "RepoAgent",
        "label": "RepoAgent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/OpenBMB/RepoAgent",
          "license": "Apache License 2.0",
          "description": "An LLM-powered repository agent designed to assist developers and teams in generating documentation and understanding repositories quickly.",
          "github_description": "An LLM-powered repository agent designed to assist developers and teams in generating documentation and understanding repositories quickly.",
          "github_creation": "2023-11-28T10:41:28Z",
          "stars": 703,
          "forks": 107
        }
      }
    },
    {
      "data": {
        "id": "Codel",
        "label": "Codel",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/semanser/codel",
          "license": "GNU Affero General Public License v3.0",
          "github_description": "‚ú® Fully autonomous AI Agent that can perform complicated tasks and projects using terminal, browser, and editor.",
          "github_creation": "2024-03-18T17:21:32Z",
          "stars": 2351,
          "forks": 190
        }
      }
    },
    {
      "data": {
        "id": "MicroAgent",
        "label": "MicroAgent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/aymenfurter/microagents",
          "license": "MIT License",
          "github_description": "Agents Capable of Self-Editing Their Prompts / Python Code",
          "github_creation": "2023-12-11T08:17:09Z",
          "stars": 768,
          "forks": 32
        }
      }
    },
    {
      "data": {
        "id": "AgentRun",
        "label": "AgentRun",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Jonathan-Adly/AgentRun",
          "license": "Apache License 2.0",
          "github_description": "The easiest, and fastest way to run AI-generated Python code safely",
          "github_creation": "2024-04-11T17:45:46Z",
          "stars": 321,
          "forks": 35
        }
      }
    },
    {
      "data": {
        "id": "ClaudeEngineer",
        "label": "Claude Engineer",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Doriandarko/claude-engineer",
          "license": "",
          "github_description": "Claude Engineer is an interactive command-line interface (CLI) that leverages the power of Anthropic's Claude-3.5-Sonnet model to assist with software development tasks.This framework enables Claude to generate and manage its own tools, continuously expanding its capabilities through conversation. Available both as a CLI and a modern web interface",
          "github_creation": "2024-06-24T16:52:12Z",
          "stars": 11033,
          "forks": 1158
        }
      }
    },
    {
      "data": {
        "id": "BlockAGI",
        "label": "BlockAGI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/blockpipe/blockagi",
          "license": "Apache License 2.0",
          "github_description": "Your Self-Hosted, Hackable Research Agent Inspired by AutoGPT",
          "github_creation": "2023-06-26T10:43:18Z",
          "stars": 310,
          "forks": 50
        }
      }
    },
    {
      "data": {
        "id": "LLocalSearch",
        "label": "LLocalSearch",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/nilsherzig/LLocalSearch",
          "license": "Apache License 2.0",
          "github_description": "LLocalSearch is a completely locally running search aggregator using LLM Agents. The user can ask a question and the system will use a chain of LLMs to find the answer. The user can see the progress of the agents and the final answer. No OpenAI or Google API keys are needed.",
          "github_creation": "2024-03-23T08:53:25Z",
          "stars": 5926,
          "forks": 376
        }
      }
    },
    {
      "data": {
        "id": "RasaGPT",
        "label": "RasaGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/paulpierre/RasaGPT",
          "license": "MIT License",
          "github_description": "üí¨ RasaGPT is the first headless LLM chatbot platform built on top of Rasa and Langchain. Built w/ Rasa, FastAPI, Langchain, LlamaIndex, SQLModel, pgvector, ngrok, telegram",
          "github_creation": "2023-04-25T14:33:51Z",
          "stars": 2424,
          "forks": 248
        }
      }
    },
    {
      "data": {
        "id": "BabyAGI-UI",
        "label": "BabyAGI UI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/miurla/babyagi-ui",
          "license": "MIT License",
          "github_description": "BabyAGI UI is designed to make it easier to run and develop with babyagi in a web app, like a ChatGPT.",
          "github_creation": "2023-04-20T05:26:13Z",
          "stars": 1327,
          "forks": 281
        }
      }
    },
    {
      "data": {
        "id": "ix",
        "label": "ix",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/kreneskyp/ix",
          "license": "MIT License",
          "github_description": "Autonomous GPT-4 agent platform",
          "github_creation": "2023-04-05T03:05:22Z",
          "stars": 1030,
          "forks": 129
        }
      }
    },
    {
      "data": {
        "id": "DuetGPT",
        "label": "DuetGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/kristoferlund/duet-gpt",
          "license": "MIT License",
          "github_description": "A conversational semi-autonomous developer assistant. AI pair programming without the copypasta.",
          "github_creation": "2023-05-25T08:27:01Z",
          "stars": 169,
          "forks": 12
        }
      }
    },
    {
      "data": {
        "id": "Memgpt",
        "label": "Memgpt",
        "type": "Product",
        "properties": {
          "url": "https://memgpt.ai",
          "github": "https://github.com/cpacker/memgpt",
          "license": "Apache License 2.0",
          "github_description": "Letta (formerly MemGPT) is the stateful agents framework with memory, reasoning, and context management.",
          "github_creation": "2023-10-11T07:38:37Z",
          "stars": 16985,
          "forks": 1763
        }
      }
    },
    {
      "data": {
        "id": "CamelAutoGPT",
        "label": "Camel-AutoGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/SamurAIGPT/Camel-AutoGPT",
          "license": "MIT License",
          "github_description": "üöÄ Introducing üê™ CAMEL: a game-changing role-playing approach for LLMs and auto-agents like BabyAGI & AutoGPT! Watch two agents ü§ù collaborate and solve tasks together, unlocking endless possibilities in #ConversationalAI, üéÆ gaming, üìö education, and more! üî•",
          "github_creation": "2023-04-21T08:31:00Z",
          "stars": 1179,
          "forks": 113
        }
      }
    },
    {
      "data": {
        "id": "SkyAGI",
        "label": "SkyAGI",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/litanlitudan/skyagi",
          "license": "Apache License 2.0",
          "github_description": "SkyAGI: Emerging human-behavior simulation capability in LLM",
          "github_creation": "2023-04-11T04:28:00Z",
          "stars": 781,
          "forks": 55
        }
      }
    },
    {
      "data": {
        "id": "Voyager",
        "label": "Voyager",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/MineDojo/Voyager",
          "license": "MIT License",
          "github_description": "An Open-Ended Embodied Agent with Large Language Models",
          "github_creation": "2023-05-25T18:20:15Z",
          "stars": 6190,
          "forks": 585
        }
      }
    },
    {
      "data": {
        "id": "PrivateGPT",
        "label": "Private GPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/imartinez/privateGPT",
          "license": "Apache License 2.0",
          "github_description": "Interact with your documents using the power of GPT, 100% privately, no data leaks",
          "github_creation": "2023-05-02T09:15:31Z",
          "stars": 56081,
          "forks": 7513
        }
      }
    },
    {
      "data": {
        "id": "LocalGPT",
        "label": "Local GPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/PromtEngineer/localGPT",
          "license": "Apache License 2.0",
          "github_description": "Chat with your documents on your local device using GPT models. No data leaves your device and 100% private. ",
          "github_creation": "2023-05-24T05:32:40Z",
          "stars": 20697,
          "forks": 2289
        }
      }
    },
    {
      "data": {
        "id": "SecondBrainAgent",
        "label": "Second Brain AI Agent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/flepied/second-brain-agent",
          "license": "GNU General Public License v3.0",
          "github_description": "üß† Second Brain AI agent",
          "github_creation": "2023-06-18T10:58:37Z",
          "stars": 228,
          "forks": 17
        }
      }
    },
    {
      "data": {
        "id": "RestGPT",
        "label": "RestGPT",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/Yifan-Song793/RestGPT",
          "license": "MIT License",
          "github_description": "An LLM-based autonomous agent controlling real-world applications via RESTful APIs",
          "github_creation": "2023-08-26T09:46:40Z",
          "stars": 1371,
          "forks": 104
        }
      }
    },
    {
      "data": {
        "id": "XAgent",
        "label": "XAgent",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/OpenBMB/XAgent",
          "license": "Apache License 2.0",
          "github_description": "An Autonomous LLM Agent for Complex Task Solving",
          "github_creation": "2023-10-16T03:44:57Z",
          "stars": 8371,
          "forks": 884
        }
      }
    },
    {
      "data": {
        "id": "llama-agents",
        "label": "llama-agents",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/run-llama/llama-agents",
          "license": "MIT License",
          "github_description": "Deploy your agentic worfklows to production",
          "github_creation": "2024-05-29T16:52:16Z",
          "stars": 2028,
          "forks": 228
        }
      }
    },
    {
      "data": {
        "id": "AgentK",
        "label": "AgentK",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/mikekelly/AgentK",
          "license": "MIT License",
          "github_description": "An autoagentic AGI that is self-evolving and modular.",
          "github_creation": "2024-08-04T09:48:08Z",
          "stars": 955,
          "forks": 143
        }
      }
    },
    {
      "data": {
        "id": "ADAS",
        "label": "ADAS",
        "type": "Product",
        "properties": {
          "url": "https://www.shengranhu.com/ADAS/",
          "github": "https://github.com/ShengranHu/ADAS",
          "license": "Apache License 2.0",
          "github_description": "[ICLR 2025] Automated Design of Agentic Systems",
          "github_creation": "2024-07-31T16:08:55Z",
          "stars": 1344,
          "forks": 212
        }
      }
    },
    {
      "data": {
        "id": "Giselle",
        "label": "Giselle",
        "type": "Product",
        "properties": {
          "url": "https://giselles.ai/",
          "github": "https://github.com/giselles-ai/giselle",
          "license": "Apache License 2.0",
          "github_description": "Giselle: AI App Builder. Open Source.",
          "github_creation": "2024-08-21T02:40:46Z",
          "stars": 137,
          "forks": 35
        }
      }
    },
    {
      "data": {
        "id": "Pipecat",
        "label": "Pipecat",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/pipecat-ai/pipecat",
          "license": "BSD 2-Clause \"Simplified\" License",
          "github_description": "Open Source framework for voice and multimodal conversational AI",
          "github_creation": "2023-12-27T12:59:00Z",
          "stars": 6536,
          "forks": 965
        }
      }
    },
    {
      "data": {
        "id": "VoiceLab",
        "label": "Voice Lab",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/saharmor/voice-lab",
          "license": "Apache License 2.0",
          "github_description": "Testing and evaluation framework for voice agents ",
          "github_creation": "2024-10-31T22:03:27Z",
          "stars": 124,
          "forks": 9
        }
      }
    },
    {
      "data": {
        "id": "OpenRAGEval",
        "label": "Open-RAG-Eval",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/vectara/open-rag-eval",
          "license": "Apache License 2.0",
          "github_description": "Open source RAG evaluation package",
          "github_creation": "2024-11-26T19:32:17Z",
          "stars": 243,
          "forks": 13
        }
      }
    },
    {
      "data": {
        "id": "Codex",
        "label": "Codex",
        "type": "Product",
        "properties": {
          "url": "https://openai.com/codex/",
          "github": "https://github.com/openai/codex",
          "license": "Apache License 2.0",
          "github_description": "Lightweight coding agent that runs in your terminal",
          "github_creation": "2025-04-13T05:37:54Z",
          "stars": 29455,
          "forks": 3283
        }
      }
    },
    {
      "data": {
        "id": "openai-agents",
        "label": "OpenAI Agents SDK",
        "type": "Product",
        "properties": {
          "url": "https://openai.github.io/openai-agents-python/",
          "github": "https://github.com/openai/openai-agents-python",
          "license": "MIT License",
          "github_description": "A lightweight, powerful framework for multi-agent workflows",
          "github_creation": "2025-03-11T03:42:36Z",
          "stars": 11767,
          "forks": 1741
        }
      }
    },
    {
      "data": {
        "id": "LiteLLM",
        "label": "LiteLLM",
        "type": "Product",
        "properties": {
          "url": "https://www.litellm.ai/",
          "github": "https://github.com/BerriAI/litellm",
          "license": "Other",
          "github_description": "Python SDK, Proxy Server (LLM Gateway) to call 100+ LLM APIs in OpenAI format - [Bedrock, Azure, OpenAI, VertexAI, Cohere, Anthropic, Sagemaker, HuggingFace, Replicate, Groq]",
          "github_creation": "2023-07-27T00:09:52Z",
          "stars": 24422,
          "forks": 3276
        }
      }
    },
    {
      "data": {
        "id": "PurpleLlama",
        "label": "PurpleLlama",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/meta-llama/PurpleLlama",
          "license": "Other",
          "github_description": "Set of tools to assess and improve LLM security.",
          "github_creation": "2023-12-06T21:29:41Z",
          "stars": 3508,
          "forks": 578
        }
      }
    },
    {
      "data": {
        "id": "MistralAgentsAPI",
        "label": "Mistral Agents API",
        "type": "Product",
        "properties": {
          "url": "https://mistral.ai/news/agents-api"
        }
      }
    },
    {
      "data": {
        "id": "LeChat",
        "label": "Le Chat",
        "type": "Product",
        "properties": {
          "url": "https://chat.mistral.ai/"
        }
      }
    },
    {
      "data": {
        "id": "MistralCode",
        "label": "Mistral Code",
        "type": "Product",
        "properties": {
          "url": "https://mistral.ai/products/mistral-code"
        }
      }
    },
    {
      "data": {
        "id": "MistralAPI",
        "label": "Mistral API",
        "type": "Product",
        "properties": {
          "url": "https://docs.mistral.ai/api/"
        }
      }
    },
    {
      "data": {
        "id": "OpenAI-API",
        "label": "OpenAI API",
        "type": "Product",
        "properties": {
          "url": "https://openai.com/api/"
        }
      }
    },
    {
      "data": {
        "id": "AnthropicAPI",
        "label": "Anthropic API",
        "type": "Product",
        "properties": {
          "url": "https://www.anthropic.com/api"
        }
      }
    },
    {
      "data": {
        "id": "Glean",
        "label": "Glean",
        "type": "Product",
        "properties": {
          "url": "https://www.glean.com/"
        }
      }
    },
    {
      "data": {
        "id": "Perplexity",
        "label": "Perplexity",
        "type": "Product",
        "properties": {
          "url": "https://www.perplexity.ai/"
        }
      }
    },
    {
      "data": {
        "id": "Liner",
        "label": "Liner",
        "type": "Product",
        "properties": {
          "url": "https://getliner.com/"
        }
      }
    },
    {
      "data": {
        "id": "GoogleAIMode",
        "label": "Google AI Mode in Search",
        "type": "Product",
        "properties": {
          "url": "https://google.com/"
        }
      }
    },
    {
      "data": {
        "id": "Athenic",
        "label": "Athenic",
        "type": "Product",
        "properties": {
          "url": "https://www.athenic.com/"
        }
      }
    },
    {
      "data": {
        "id": "Graphiti",
        "label": "Graphiti",
        "type": "Product",
        "properties": {
          "github": "https://github.com/getzep/graphiti",
          "url": "https://help.getzep.com/graphiti/graphiti/overview",
          "license": "Apache License 2.0",
          "github_description": "Build Real-Time Knowledge Graphs for AI Agents",
          "github_creation": "2024-08-08T22:08:30Z",
          "stars": 11548,
          "forks": 924
        }
      }
    },
    {
      "data": {
        "id": "OpenAgentPlatform",
        "label": "Open Agent Platform",
        "type": "Product",
        "properties": {
          "url": "https://docs.oap.langchain.com/",
          "github": "https://github.com/langchain-ai/open-agent-platform",
          "license": "MIT License",
          "github_description": "An open-source, no-code agent building platform.",
          "github_creation": "2025-04-16T00:45:17Z",
          "stars": 1305,
          "forks": 247
        }
      }
    },
    {
      "data": {
        "id": "Langtrace",
        "label": "Langtrace",
        "type": "Product",
        "properties": {
          "url": "https://www.langtrace.ai/",
          "github": "https://github.com/Scale3-Labs/langtrace",
          "license": "GNU Affero General Public License v3.0",
          "github_description": "Langtrace üîç is an open-source,  Open Telemetry based end-to-end observability tool for LLM applications, providing real-time tracing, evaluations and metrics for popular LLMs, LLM frameworks, vectorDBs and more.. Integrate using Typescript, Python. üöÄüíªüìä",
          "github_creation": "2024-03-30T23:49:41Z",
          "stars": 957,
          "forks": 89
        }
      }
    },
    {
      "data": {
        "id": "YCombinator",
        "label": "Y Combinator",
        "type": "Investor",
        "properties": {
          "url": "https://www.ycombinator.com/"
        }
      }
    },
    {
      "data": {
        "id": "KleinerPerkins",
        "label": "Kleiner Perkins",
        "type": "Investor",
        "properties": {
          "url": "https://www.kleinerperkins.com/"
        }
      }
    },
    {
      "data": {
        "id": "GeneralCatalyst",
        "label": "General Catalyst",
        "type": "Investor",
        "properties": {
          "url": "https://www.generalcatalyst.com/"
        }
      }
    },
    {
      "data": {
        "id": "GreenOaks",
        "label": "Green Oaks",
        "type": "Investor",
        "properties": {
          "url": "https://greenoaks.com/"
        }
      }
    },
    {
      "data": {
        "id": "FoundersFund",
        "label": "Founders Fund",
        "type": "Investor",
        "properties": {
          "url": "https://foundersfund.com/"
        }
      }
    },
    {
      "data": {
        "id": "SparkCapital",
        "label": "Spark Capital",
        "type": "Investor",
        "properties": {
          "url": "https://www.sparkcapital.com/"
        }
      }
    },
    {
      "data": {
        "id": "Meritech",
        "label": "Meritech",
        "type": "Investor",
        "properties": {
          "url": "https://www.meritechcapital.com/"
        }
      }
    },
    {
      "data": {
        "id": "UIPath",
        "label": "UI Path Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.uipath.com/blog/product-and-updates/introducing-uipath-ventures"
        }
      }
    },
    {
      "data": {
        "id": "Accel",
        "label": "Meritech",
        "type": "Investor",
        "properties": {
          "url": "https://www.accel.com/"
        }
      }
    },
    {
      "data": {
        "id": "InsightPartners",
        "label": "Insight Partners",
        "type": "Investor",
        "properties": {
          "url": "https://www.insightpartners.com/"
        }
      }
    },
    {
      "data": {
        "id": "CraftVentures",
        "label": "Craft Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.craftventures.com/"
        }
      }
    },
    {
      "data": {
        "id": "EarlGrey",
        "label": "Earl Grey",
        "type": "Investor",
        "properties": {
          "url": "https://earlgrey.capital/"
        }
      }
    },
    {
      "data": {
        "id": "FirsthandVentures",
        "label": "Firsthand Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.firsthand.vc/"
        }
      }
    },
    {
      "data": {
        "id": "Newlands",
        "label": "Newlands",
        "type": "Investor",
        "properties": {
          "url": "https://www.thenewlands.com/"
        }
      }
    },
    {
      "data": {
        "id": "KeaCapital",
        "label": "Kea Capital",
        "type": "Investor",
        "properties": {
          "url": "https://kae-capital.com/"
        }
      }
    },
    {
      "data": {
        "id": "Better",
        "label": "Better",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "Redpoint",
        "label": "Redpoint",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "Altimeter",
        "label": "Altimeter",
        "type": "Investor",
        "properties": {
          "url": "https://www.altimeter.com/"
        }
      }
    },
    {
      "data": {
        "id": "Decibel",
        "label": "Decibel",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "Inovia",
        "label": "Inovia",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "PanacheVentures",
        "label": "Panache Ventures",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "RealVentures",
        "label": "Real Ventures",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "HikeVentures",
        "label": "Hike Ventures",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "OneWay",
        "label": "One Way",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "FondsInnovexport",
        "label": "Fonds Innovexport",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "BoxOne",
        "label": "BoxOne",
        "type": "Investor"
      }
    },
    {
      "data": {
        "id": "Sequoia",
        "label": "Sequoia Capital",
        "type": "Investor",
        "properties": {
          "url": "https://www.sequoiacap.com/"
        }
      }
    },
    {
      "data": {
        "id": "XYZ",
        "label": "XYZ Venture Capital",
        "type": "Investor",
        "properties": {
          "url": "https://xyz.vc/"
        }
      }
    },
    {
      "data": {
        "id": "ConnectVentures",
        "label": "Connect Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.connectventures.co/"
        }
      }
    },
    {
      "data": {
        "id": "GravityFund",
        "label": "Gravity Fund",
        "type": "Investor",
        "properties": {
          "url": "https://gravityfund.vc/"
        }
      }
    },
    {
      "data": {
        "id": "PioneerFund",
        "label": "Pioneer Fund",
        "type": "Investor",
        "properties": {
          "url": "https://www.pioneerfund.vc/"
        }
      }
    },
    {
      "data": {
        "id": "WellingtonManagement",
        "label": "Wellington Management",
        "type": "Investor",
        "properties": {
          "url": "https://www.wellington.com/"
        }
      }
    },
    {
      "data": {
        "id": "KhoslaVentures",
        "label": "Khosla Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.khoslaventures.com/"
        }
      }
    },
    {
      "data": {
        "id": "BicycleCapital",
        "label": "Bicycle Capital",
        "type": "Investor",
        "properties": {
          "url": "https://bicycle.capital/"
        }
      }
    },
    {
      "data": {
        "id": "GeodesicCapital",
        "label": "Geodesic Capital",
        "type": "Investor",
        "properties": {
          "url": "https://geodesiccap.com/"
        }
      }
    },
    {
      "data": {
        "id": "ArchermanCapital",
        "label": "Archerman Capital",
        "type": "Investor",
        "properties": {
          "url": "https://www.archermancap.com/"
        }
      }
    },
    {
      "data": {
        "id": "CapitalOneVentures",
        "label": "Capital One Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://capitaloneventures.com/"
        }
      }
    },
    {
      "data": {
        "id": "CitiVentures",
        "label": "Citi Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://www.citi.com/ventures/"
        }
      }
    },
    {
      "data": {
        "id": "Coatue",
        "label": "Coatue",
        "type": "Investor",
        "properties": {
          "url": "https://www.coatue.com/"
        }
      }
    },
    {
      "data": {
        "id": "DSTGlobal",
        "label": "DST Global",
        "type": "Investor",
        "properties": {
          "url": "https://dst-global.com/"
        }
      }
    },
    {
      "data": {
        "id": "Iconiq",
        "label": "Iconiq",
        "type": "Investor",
        "properties": {
          "url": "https://www.iconiqcapital.com/"
        }
      }
    },
    {
      "data": {
        "id": "IVP",
        "label": "IVP",
        "type": "Investor",
        "properties": {
          "url": "https://www.ivp.com/"
        }
      }
    },
    {
      "data": {
        "id": "LatitudeCapital",
        "label": "Latitude Capital",
        "type": "Investor",
        "properties": {
          "url": "https://www.latitudecp.com/"
        }
      }
    },
    {
      "data": {
        "id": "Lightspeed",
        "label": "Lightspeed",
        "type": "Investor",
        "properties": {
          "url": "https://lsvp.com/"
        }
      }
    },
    {
      "data": {
        "id": "SapphireVentures",
        "label": "Sapphire Ventures",
        "type": "Investor",
        "properties": {
          "url": "https://sapphireventures.com/"
        }
      }
    },
    {
      "data": {
        "id": "BMWiVentures",
        "label": "BMW iVentures",
        "type": "Investor",
        "properties": {
          "url": "https://www.bmwiventures.com/"
        }
      }
    },
    {
      "data": {
        "id": "ByteDance",
        "label": "ByteDance",
        "type": "Company",
        "properties": {
          "url": "https://www.bytedance.com/en/",
          "country": "CN"
        }
      }
    },
    {
      "data": {
        "id": "ContinueInc",
        "label": "Continue, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://www.continue.dev/"
        }
      }
    },
    {
      "data": {
        "id": "ClineBotInc",
        "label": "Cline Bot, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://cline.bot/"
        }
      }
    },
    {
      "data": {
        "id": "DatabuttonCompany",
        "label": "Databutton",
        "type": "Company",
        "properties": {
          "url": "https://databutton.com/",
          "country": "Norway"
        }
      }
    },
    {
      "data": {
        "id": "Base44Company",
        "label": "Base44 Inc",
        "type": "Company",
        "properties": {
          "url": "https://base44.com/"
        }
      }
    },
    {
      "data": {
        "id": "AnysphereCompany",
        "label": "Anysphere",
        "type": "Company",
        "properties": {
          "url": "https://www.anysphere.inc/"
        }
      }
    },
    {
      "data": {
        "id": "WindsurfCompany",
        "label": "Windsurf (Codeium)",
        "type": "Company",
        "properties": {
          "url": "https://windsurf.com/"
        }
      }
    },
    {
      "data": {
        "id": "StackBlitz",
        "label": "StackBlitz, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://stackblitz.com/"
        }
      }
    },
    {
      "data": {
        "id": "lovableCompany",
        "label": "Lovable.",
        "type": "Company",
        "properties": {
          "url": "https://lovable.dev/",
          "country": "Sweden"
        }
      }
    },
    {
      "data": {
        "id": "vercel",
        "label": "Vercel",
        "type": "Company",
        "properties": {
          "url": "https://vercel.com/"
        }
      }
    },
    {
      "data": {
        "id": "Replit",
        "label": "Replit",
        "type": "Company",
        "properties": {
          "url": "https://replit.com/"
        }
      }
    },
    {
      "data": {
        "id": "Axilla",
        "label": "Axilla, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://getmocha.com/"
        }
      }
    },
    {
      "data": {
        "id": "Github",
        "label": "GitHub, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://github.com"
        }
      }
    },
    {
      "data": {
        "id": "RorkCompany",
        "label": "Rork, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://rork.com/"
        }
      }
    },
    {
      "data": {
        "id": "Superblocks",
        "label": "Superblocks",
        "type": "Company",
        "properties": {
          "url": "https://www.superblocks.com"
        }
      }
    },
    {
      "data": {
        "id": "Google",
        "label": "Google",
        "type": "Company",
        "properties": {
          "url": "https://google.com"
        }
      }
    },
    {
      "data": {
        "id": "xAI",
        "label": "xAI",
        "type": "Company",
        "properties": {
          "url": "https://x.ai"
        }
      }
    },
    {
      "data": {
        "id": "Code",
        "label": "Canva",
        "type": "Company",
        "properties": {
          "url": "https://www.canva.com/"
        }
      }
    },
    {
      "data": {
        "id": "a0devCompany",
        "label": "a0.dev",
        "type": "Company",
        "properties": {
          "url": "https://a0.dev/"
        }
      }
    },
    {
      "data": {
        "id": "openai",
        "label": "OpenAI",
        "type": "Company",
        "properties": {
          "url": "https://openai.com/"
        }
      }
    },
    {
      "data": {
        "id": "RowboatLabs",
        "label": "Rowboat Labs",
        "type": "Company",
        "properties": {
          "url": "https://www.rowboatlabs.com/"
        }
      }
    },
    {
      "data": {
        "id": "PearAI",
        "label": "PearAI",
        "type": "Company",
        "properties": {
          "url": "https://trypear.ai/",
          "github": "https://github.com/trypear/pearai-master",
          "github_description": "Master Repo For PearAI",
          "github_creation": "2024-10-09T23:09:32Z",
          "stars": 636,
          "forks": 73,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "BrowserUseCompany",
        "label": "Browser Use",
        "type": "Company",
        "properties": {
          "url": "https://browser-use.com/"
        }
      }
    },
    {
      "data": {
        "id": "OllamaCompany",
        "label": "Ollama",
        "type": "Company",
        "properties": {
          "url": "https://ollama.com/"
        }
      }
    },
    {
      "data": {
        "id": "CognitionCompany",
        "label": "Cognition",
        "type": "Company",
        "properties": {
          "url": "https://cognition.ai/"
        }
      }
    },
    {
      "data": {
        "id": "WhimsyWorks",
        "label": "WhimsyWorks, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://getwhimsyworks.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "CrewAICompany",
        "label": "CrewAI, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://crewai.com/",
          "github": "https://github.com/crewaiinc/crewai",
          "github_description": "Framework for orchestrating role-playing, autonomous AI agents. By fostering collaborative intelligence, CrewAI empowers agents to work together seamlessly, tackling complex tasks.",
          "github_creation": "2023-10-27T03:26:59Z",
          "stars": 33229,
          "forks": 4469,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "Microsoft",
        "label": "Microsoft",
        "type": "Company",
        "properties": {
          "url": "https://microsoft.com"
        }
      }
    },
    {
      "data": {
        "id": "LlamaIndexCompany",
        "label": "LlamaIndex",
        "type": "Company",
        "properties": {
          "url": "https://www.llamaindex.ai/",
          "linkedin": "https://www.linkedin.com/company/llamaindex"
        }
      }
    },
    {
      "data": {
        "id": "DeepsetCompany",
        "label": "Deepset GmbH",
        "type": "Company",
        "properties": {
          "url": "https://haystack.deepset.ai/",
          "country": "Germany",
          "github": "https://github.com/deepset-ai"
        }
      }
    },
    {
      "data": {
        "id": "Amazon",
        "label": "Amazon",
        "type": "Company",
        "properties": {
          "url": "https://amazon.com/"
        }
      }
    },
    {
      "data": {
        "id": "HuggingFace",
        "label": "Hugging Face",
        "type": "Company",
        "properties": {
          "url": "https://huggingface.co/"
        }
      }
    },
    {
      "data": {
        "id": "DeepsiteAi",
        "label": "Deepsite.ai",
        "type": "Company",
        "properties": {
          "url": "https://deepsite.ai/"
        }
      }
    },
    {
      "data": {
        "id": "DockerCompany",
        "label": "Docker Inc.",
        "type": "Company",
        "properties": {
          "url": "https://docker.com/"
        }
      }
    },
    {
      "data": {
        "id": "SmallCloud",
        "label": "Small Magellanic Cloud Ai Ltd.",
        "type": "Company",
        "properties": {
          "url": "https://refact.ai/"
        }
      }
    },
    {
      "data": {
        "id": "ZedIndustries",
        "label": "Zed Industries",
        "type": "Company",
        "properties": {
          "url": "https://zed.dev/"
        }
      }
    },
    {
      "data": {
        "id": "Anthropic",
        "label": "Anthropic",
        "type": "Company",
        "properties": {
          "url": "https://www.anthropic.com/"
        }
      }
    },
    {
      "data": {
        "id": "IBM",
        "label": "IBM",
        "type": "Company",
        "properties": {
          "url": "https://ibm.com/"
        }
      }
    },
    {
      "data": {
        "id": "MaitaiCompany",
        "label": "Maitai, Inc",
        "type": "Company",
        "properties": {
          "url": "https://trymaitai.ai/"
        }
      }
    },
    {
      "data": {
        "id": "Groq",
        "label": "Groq, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://groq.com/"
        }
      }
    },
    {
      "data": {
        "id": "LangfuseCompany",
        "label": "Langfuse GmbH",
        "type": "Company",
        "properties": {
          "url": "https://langfuse.com/",
          "country": "Germany",
          "github": "https://github.com/langfuse"
        }
      }
    },
    {
      "data": {
        "id": "LangChainCompany",
        "label": "LangChain, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://langchain.com/"
        }
      }
    },
    {
      "data": {
        "id": "LangflowCompany",
        "label": "LangFlow",
        "type": "Company",
        "properties": {
          "url": "https://www.langflow.org/",
          "github": "https://github.com/langflow-ai/"
        }
      }
    },
    {
      "data": {
        "id": "IO",
        "label": "IO",
        "type": "Company",
        "properties": {
          "url": "https://www.lovefrom.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "HCompany",
        "label": "H Company",
        "type": "Company",
        "properties": {
          "url": "https://www.hcompany.ai/",
          "country": "France"
        }
      }
    },
    {
      "data": {
        "id": "n8nCompany",
        "label": "n8n",
        "type": "Company",
        "properties": {
          "url": "https://n8n.io/",
          "country": "Germany"
        }
      }
    },
    {
      "data": {
        "id": "FlowiseCompany",
        "label": "FlowiseAI Inc.",
        "type": "Company",
        "properties": {
          "url": "https://flowiseai.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "Ironclad",
        "label": "Ironclad, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://ironcladapp.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "SuperAGICompany",
        "label": "SuperAGI",
        "type": "Company",
        "properties": {
          "url": "https://superagi.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "LiveKitCompany",
        "label": "LiveKit",
        "type": "Company",
        "properties": {
          "url": "https://livekit.io/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "BotpressCompany",
        "label": "Botpress",
        "type": "Company",
        "properties": {
          "url": "https://botpress.com/",
          "country": "Canada",
          "github": "https://github.com/botpress"
        }
      }
    },
    {
      "data": {
        "id": "FoundryLabs",
        "label": "FoundryLabs, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://e2b.dev",
          "country": "US",
          "github": "https://github.com/e2b-dev"
        }
      }
    },
    {
      "data": {
        "id": "DustCompany",
        "label": "Dust",
        "type": "Company",
        "properties": {
          "url": "https://dust.tt/",
          "country": "France",
          "github": "https://github.com/dust-tt"
        }
      }
    },
    {
      "data": {
        "id": "MetaGPTCompany",
        "label": "MetaGPT",
        "type": "Company",
        "properties": {
          "url": "https://www.deepwisdom.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "MetaCompany",
        "label": "Meta",
        "type": "Company",
        "properties": {
          "url": "https://meta.com",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PythagoraCompany",
        "label": "Pythagora",
        "type": "Company",
        "properties": {
          "url": "https://pythagora.io",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "StitionAI",
        "label": "Stition AI",
        "type": "Company",
        "properties": {
          "url": "",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PipecatAI",
        "label": "Pipecat AI",
        "type": "Company",
        "properties": {
          "url": "",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PortiaAICompany",
        "label": "Portia AI",
        "type": "Company",
        "properties": {
          "url": "",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "GiselleAI",
        "label": "Giselle AI",
        "type": "Company",
        "properties": {
          "url": "https://giselles.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "MemGPTCompany",
        "label": "MemGPT",
        "type": "Company",
        "properties": {
          "url": "https://memgpt.ai",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "OpenBMB",
        "label": "OpenBMB",
        "type": "Company",
        "properties": {
          "url": "https://www.openbmb.cn/en/home",
          "country": "China",
          "github": "https://github.com/OpenBMB"
        }
      }
    },
    {
      "data": {
        "id": "MineDojo",
        "label": "MineDojo",
        "type": "Company",
        "properties": {
          "url": "",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "LiteLLMCompany",
        "label": "LiteLLM",
        "type": "Company",
        "properties": {
          "url": "https://www.litellm.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "MistralAI",
        "label": "Mistral AI",
        "type": "Company",
        "properties": {
          "url": "https://mistral.ai/",
          "country": "France"
        }
      }
    },
    {
      "data": {
        "id": "GleanCompany",
        "label": "Glean Technologies, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://www.glean.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PerplexityAI",
        "label": "Perplexity AI",
        "type": "Company",
        "properties": {
          "url": "https://www.perplexity.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "LinerCompany",
        "label": "Liner",
        "type": "Company",
        "properties": {
          "url": "https://getliner.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "AthenicAICompany",
        "label": "Athenic AI Inc.",
        "type": "Company",
        "properties": {
          "url": "https://www.athenic.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "CohereCompany",
        "label": "Cohere",
        "type": "Company",
        "properties": {
          "url": "https://cohere.com/",
          "country": "Canada"
        }
      }
    },
    {
      "data": {
        "id": "MindsDBCompany",
        "label": "MindsDB",
        "type": "Company",
        "properties": {
          "url": "https://mindsdb.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PipedreamCompany",
        "label": "Pipedream, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://pipedream.com/",
          "country": "US",
          "github": "https://github.com/PipedreamHQ"
        }
      }
    },
    {
      "data": {
        "id": "ZepCompany",
        "label": "Zep AI",
        "type": "Company",
        "properties": {
          "url": "https://www.getzep.com/",
          "country": "US",
          "github": "https://github.com/getzep"
        }
      }
    },
    {
      "data": {
        "id": "LangtraceAICompany",
        "label": "Langtrace AI",
        "type": "Company",
        "properties": {
          "url": "https://www.langtrace.ai/",
          "country": "US",
          "github": "https://github.com/Scale3-Labs"
        }
      }
    },
    {
      "data": {
        "id": "AICoding",
        "label": "AI Coding",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "GenPurposeAgent",
        "label": "General Purpose Agent",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AgentFramework",
        "label": "Agent Framework",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "InfEngine",
        "label": "Inference Engine",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "OperationsResearch",
        "label": "Operations Research",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "ComputerUse",
        "label": "Computer Use",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "RAG",
        "label": "Retrieval Augmented Generation",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "Research",
        "label": "Research",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "VectorDB",
        "label": "Vector Database",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "GraphDB",
        "label": "Graph Database",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "DataAnalysis",
        "label": "Data Analysis",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "Runtime",
        "label": "Runtime platform",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "Automation",
        "label": "Automation",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "LLMClient",
        "label": "LLM Client",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "ChipDesign",
        "label": "Chip Design",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "ModelServing",
        "label": "Model Serving",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "PromptEngineering",
        "label": "Prompt Engineering",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AgentPlatform",
        "label": "Agent Platform",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "Observability",
        "label": "Agent/Model Observability",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AILegal",
        "label": "AI in Law",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AICLM",
        "label": "Contract Lifecycle Management",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "VoiceAgents",
        "label": "Voice Agents",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "GameSimulation",
        "label": "Game Simulation",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "KnowledgeManagement",
        "label": "Knowledge Management",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "MultimodalAgents",
        "label": "Multimodal Agents",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "TestingEvaluation",
        "label": "Testing and Evaluation",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "LLMSecurity",
        "label": "LLM Security",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AISearch",
        "label": "AI Search",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "AgentInfrastructure",
        "label": "Agent Infrastructure",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "MCP",
        "label": "Model Context Protocol",
        "type": "Protocol",
        "properties": {
          "url": "https://modelcontextprotocol.io/",
          "github": "https://github.com/modelcontextprotocol",
          "license": "MIT License",
          "description": "MCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools."
        }
      }
    },
    {
      "data": {
        "id": "ACP",
        "label": "Agent Communication Protocol",
        "type": "Protocol",
        "properties": {
          "url": "https://agentcommunicationprotocol.dev/",
          "github": "https://github.com/i-am-bee/acp",
          "license": "Apache License 2.0",
          "description": "The Agent Communication Protocol (ACP) is an open standard with open governance for agent interoperability. It defines a standardized RESTful API supporting synchronous, asynchronous, and streaming interactions. In ACP, agents are services that exchange multimodal messages, with the protocol remaining agnostic to their internal implementations and requiring only minimal specifications for compatibility.",
          "github_description": "Open protocol for communication between AI agents, applications, and humans.",
          "github_creation": "2025-04-03T08:40:43Z",
          "stars": 283,
          "forks": 39
        }
      }
    },
    {
      "data": {
        "id": "A2A",
        "label": "Agent2Agent",
        "type": "Protocol",
        "properties": {
          "url": "https://google-a2a.github.io/A2A/"
        }
      }
    },
    {
      "data": {
        "id": "OpenMCP",
        "label": "OpenMCP",
        "type": "Service",
        "properties": {
          "url": "https://www.open-mcp.org/",
          "github": "https://github.com/wegotdocs/open-mcp",
          "license": "",
          "github_description": "",
          "github_creation": "2025-03-27T14:40:31Z",
          "stars": 179,
          "forks": 18
        }
      }
    },
    {
      "data": {
        "id": "MetaMCP",
        "label": "MetaMCP",
        "type": "Service",
        "properties": {
          "url": "https://metamcp.com/",
          "github": "https://github.com/metatool-ai/metatool-app",
          "license": "GNU Affero General Public License v3.0",
          "github_description": "Unified middleware MCP to manage all your MCPs",
          "github_creation": "2025-01-22T11:58:52Z",
          "stars": 515,
          "forks": 80
        }
      }
    },
    {
      "data": {
        "id": "Waystation",
        "label": "Waystation",
        "type": "Service",
        "properties": {
          "url": "https://waystation.ai/",
          "github": "https://github.com/waystation-ai/mcp",
          "license": "",
          "github_description": "The only MCP Server you need. Connect any MCP host with the tools you use daily through our no-code, secure integration hub.",
          "github_creation": "2025-02-27T17:51:56Z",
          "stars": 17,
          "forks": 3
        }
      }
    },
    {
      "data": {
        "id": "mcp-access-point",
        "label": "mcp-access-point",
        "type": "Service",
        "properties": {
          "url": "https://deepwiki.com/OpenAgentX/mcp-access-point",
          "github": "https://github.com/sxhxliang/mcp-access-point",
          "license": "MIT License",
          "github_description": "Turn a web server into an MCP server in one click without making any code changes.",
          "github_creation": "2025-04-06T15:35:00Z",
          "stars": 49,
          "forks": 11
        }
      }
    },
    {
      "data": {
        "id": "mindsdb",
        "label": "mindsdb",
        "type": "Service",
        "properties": {
          "url": "https://mindsdb.com/",
          "github": "https://github.com/mindsdb/mindsdb",
          "license": "Other",
          "github_description": "AI's query engine - Platform for building AI that can answer questions over large scale federated data. - The only MCP Server you'll ever need",
          "github_creation": "2018-08-02T17:56:45Z",
          "stars": 32574,
          "forks": 5345
        }
      }
    },
    {
      "data": {
        "id": "pipedream-mcp",
        "label": "Pipedream MCP",
        "type": "Service",
        "properties": {
          "url": "https://pipedream.com/",
          "github": "https://github.com/PipedreamHQ/pipedream",
          "license": "Other",
          "github_description": "Connect APIs, remarkably fast.  Free for developers.",
          "github_creation": "2020-01-22T00:28:31Z",
          "stars": 10039,
          "forks": 5374
        }
      }
    },
    {
      "data": {
        "id": "pipedream-connect",
        "label": "Pipedream Connect",
        "type": "Product",
        "properties": {
          "url": "https://pipedream.com/",
          "github": "https://github.com/PipedreamHQ/pipedream",
          "license": "Other",
          "github_description": "Connect APIs, remarkably fast.  Free for developers.",
          "github_creation": "2020-01-22T00:28:31Z",
          "stars": 10039,
          "forks": 5374
        }
      }
    },
    {
      "data": {
        "id": "WeightAndBiases",
        "label": "Weight & Biases",
        "type": "Product",
        "properties": {
          "url": "https://wandb.ai/site/",
          "github": ""
        }
      }
    },
    {
      "data": {
        "id": "Phoeniz",
        "label": "Weight & Biases",
        "type": "Product",
        "properties": {
          "url": "https://arize.com/docs/phoenix",
          "github": "https://github.com/Arize-ai/phoenix",
          "license": "Other",
          "github_description": "AI Observability & Evaluation",
          "github_creation": "2022-11-09T23:44:35Z",
          "stars": 6032,
          "forks": 465
        }
      }
    },
    {
      "data": {
        "id": "FutureAGI",
        "label": "Future AGI",
        "type": "Product",
        "properties": {
          "url": "https://docs.futureagi.com/future-agi/home",
          "github": "https://github.com/future-agi/futureagi-sdk",
          "license": "BSD 3-Clause \"New\" or \"Revised\" License",
          "github_description": "We help GenAI teams maintain high-accuracy for their Models in production. Purpose Built, Scalable & 10X faster than traditional methods to help them Align AI models to their users .",
          "github_creation": "2024-08-03T13:22:28Z",
          "stars": 16,
          "forks": 0
        }
      }
    },
    {
      "data": {
        "id": "MLFlow",
        "label": "MLFlow",
        "type": "Product",
        "properties": {
          "url": "https://mlflow.org/",
          "github": "https://github.com/mlflow/mlflow",
          "license": "Apache License 2.0",
          "github_description": "Open source platform for the machine learning lifecycle",
          "github_creation": "2018-06-05T16:05:58Z",
          "stars": 20962,
          "forks": 4613
        }
      }
    },
    {
      "data": {
        "id": "Braintrust",
        "label": "Braintrust",
        "type": "Product",
        "properties": {
          "url": "https://www.braintrust.dev/",
          "github": "https://github.com/braintrustdata/braintrust-sdk",
          "license": "Apache License 2.0",
          "github_description": "",
          "github_creation": "2023-07-17T20:01:33Z",
          "stars": 72,
          "forks": 33
        }
      }
    },
    {
      "data": {
        "id": "AgentOps",
        "label": "AgentOps",
        "type": "Product",
        "properties": {
          "url": "https://www.agentops.ai/",
          "github": "https://github.com/AgentOps-AI/agentops",
          "license": "MIT License",
          "github_description": "Python SDK for AI agent monitoring, LLM cost tracking, benchmarking, and more. Integrates with most LLMs and agent frameworks including OpenAI Agents SDK, CrewAI, Langchain, Autogen, AG2, and CamelAI",
          "github_creation": "2023-08-15T23:26:23Z",
          "stars": 4586,
          "forks": 423
        }
      }
    },
    {
      "data": {
        "id": "Scorecard",
        "label": "Scorecard",
        "type": "Product",
        "properties": {
          "url": "https://www.scorecard.io/",
          "github": "https://github.com/scorecard-ai/scorecard-python",
          "license": "Apache License 2.0",
          "github_description": "The official Python library for the Scorecard.io",
          "github_creation": "2025-04-26T04:04:24Z",
          "stars": 0,
          "forks": 0
        }
      }
    },
    {
      "data": {
        "id": "KeywordsAI",
        "label": "KeywordsAI",
        "type": "Product",
        "properties": {
          "url": "https://www.keywordsai.co/",
          "github": "",
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "MaximAI",
        "label": "MaximAI",
        "type": "Product",
        "properties": {
          "url": "https://www.getmaxim.ai/",
          "github": "",
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "Opik",
        "label": "Opik",
        "type": "Product",
        "properties": {
          "url": "https://www.comet.com/site/products/opik/",
          "github": "https://github.com/comet-ml/opik",
          "license": "Apache License 2.0",
          "github_description": "Debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards.",
          "github_creation": "2023-05-10T12:57:13Z",
          "stars": 10126,
          "forks": 692
        }
      }
    },
    {
      "data": {
        "id": "monocle",
        "label": "monocle",
        "type": "Product",
        "properties": {
          "url": "http://monocle2ai.org/",
          "github": "https://github.com/monocle2ai/monocle",
          "license": "Apache License 2.0",
          "github_description": "Monocle is a framework for tracing GenAI app code. This repo contains implementation of Monocle for GenAI apps written in Python.   ",
          "github_creation": "2024-06-15T18:27:03Z",
          "stars": 27,
          "forks": 19
        }
      }
    },
    {
      "data": {
        "id": "Galileo",
        "label": "Galileo",
        "type": "Product",
        "properties": {
          "url": "https://galileo.ai/",
          "github": "",
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "portkey",
        "label": "portkey",
        "type": "Product",
        "properties": {
          "url": "https://portkey.ai/",
          "github": "https://github.com/Portkey-AI/portkey-python-sdk",
          "license": "MIT License",
          "github_description": "Build reliable, secure, and production-ready AI apps easily.",
          "github_creation": "2023-08-28T06:49:48Z",
          "stars": 73,
          "forks": 20
        }
      }
    },
    {
      "data": {
        "id": "gateway",
        "label": "gateway",
        "type": "Product",
        "properties": {
          "url": "https://portkey.ai/features/ai-gateway",
          "github": "https://github.com/Portkey-AI/gateway",
          "license": "MIT License",
          "github_description": "A blazing fast AI Gateway with integrated guardrails. Route to 200+ LLMs, 50+ AI Guardrails with 1 fast & friendly API.",
          "github_creation": "2023-08-23T11:52:47Z",
          "stars": 8106,
          "forks": 608
        }
      }
    },
    {
      "data": {
        "id": "PydanticAI",
        "label": "Pydantic AI",
        "type": "Product",
        "properties": {
          "url": "https://ai.pydantic.dev/",
          "github": "https://github.com/pydantic/pydantic-ai",
          "license": "MIT License",
          "github_description": "Agent Framework / shim to use Pydantic with LLMs",
          "github_creation": "2024-06-21T15:55:04Z",
          "stars": 10379,
          "forks": 961
        }
      }
    },
    {
      "data": {
        "id": "KeywordsAICompany",
        "label": "KeywordsAI",
        "type": "Company",
        "properties": {
          "url": "https://www.keywordsai.co/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "MaximAICompany",
        "label": "MaximAI",
        "type": "Company",
        "properties": {
          "url": "https://www.getmaxim.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "CometMLCompany",
        "label": "Comet ML, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://www.comet.com/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "GalileoCompany",
        "label": "Galileo",
        "type": "Company",
        "properties": {
          "url": "https://galileo.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "PortkeyCompany",
        "label": "Portkey, Inc",
        "type": "Company",
        "properties": {
          "url": "https://portkey.ai/",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "pinecone",
        "label": "Pinecone",
        "type": "Product",
        "properties": {
          "url": "https://www.pinecone.io/",
          "github": "https://github.com/pinecone-io/pinecone-python-client",
          "license": "Apache License 2.0",
          "github_description": "The Pinecone Python client ",
          "github_creation": "2021-09-16T00:07:17Z",
          "stars": 374,
          "forks": 94
        }
      }
    },
    {
      "data": {
        "id": "milvus",
        "label": "Milvus",
        "type": "Product",
        "properties": {
          "url": "https://milvus.io/",
          "github": "https://github.com/milvus-io/milvus",
          "license": "Apache License 2.0",
          "github_description": "Milvus is a high-performance, cloud-native vector database built for scalable vector ANN search",
          "github_creation": "2019-09-16T06:43:43Z",
          "stars": 35524,
          "forks": 3264
        }
      }
    },
    {
      "data": {
        "id": "weaviate",
        "label": "Weaviate",
        "type": "Product",
        "properties": {
          "url": "https://weaviate.io/",
          "github": "https://github.com/weaviate/weaviate",
          "license": "BSD 3-Clause \"New\" or \"Revised\" License",
          "github_description": "Weaviate is an open-source vector database that stores both objects and vectors, allowing for the combination of vector search with structured filtering with the fault tolerance and scalability of a cloud-native database‚Äã.",
          "github_creation": "2016-03-30T15:03:17Z",
          "stars": 13702,
          "forks": 976
        }
      }
    },
    {
      "data": {
        "id": "qdrant",
        "label": "Qdrant",
        "type": "Product",
        "properties": {
          "url": "https://qdrant.tech/",
          "github": "https://github.com/qdrant/qdrant",
          "license": "Apache License 2.0",
          "github_description": "Qdrant - High-performance, massive-scale Vector Database and Vector Search Engine for the next generation of AI. Also available in the cloud https://cloud.qdrant.io/",
          "github_creation": "2020-05-30T21:37:01Z",
          "stars": 24283,
          "forks": 1665
        }
      }
    },
    {
      "data": {
        "id": "chroma",
        "label": "Chroma",
        "type": "Product",
        "properties": {
          "url": "https://www.trychroma.com/",
          "github": "https://github.com/chroma-core/chroma",
          "license": "Apache License 2.0",
          "github_description": "the AI-native open-source embedding database",
          "github_creation": "2022-10-05T17:58:44Z",
          "stars": 20610,
          "forks": 1652
        }
      }
    },
    {
      "data": {
        "id": "faiss",
        "label": "FAISS",
        "type": "Product",
        "properties": {
          "url": "https://faiss.ai/",
          "github": "https://github.com/facebookresearch/faiss",
          "license": "MIT License",
          "github_description": "A library for efficient similarity search and clustering of dense vectors.",
          "github_creation": "2017-02-07T16:07:05Z",
          "stars": 35652,
          "forks": 3920
        }
      }
    },
    {
      "data": {
        "id": "vespa",
        "label": "Vespa",
        "type": "Product",
        "properties": {
          "url": "https://vespa.ai/",
          "github": "https://github.com/vespa-engine/vespa",
          "license": "Apache License 2.0",
          "github_description": "AI + Data, online. https://vespa.ai",
          "github_creation": "2016-06-03T20:54:20Z",
          "stars": 6223,
          "forks": 643
        }
      }
    },
    {
      "data": {
        "id": "pgvector",
        "label": "pgvector",
        "type": "Product",
        "properties": {
          "url": "https://github.com/pgvector/pgvector",
          "github": "https://github.com/pgvector/pgvector",
          "license": "Other",
          "github_description": "Open-source vector similarity search for Postgres",
          "github_creation": "2021-04-20T21:13:52Z",
          "stars": 16206,
          "forks": 788
        }
      }
    },
    {
      "data": {
        "id": "elasticsearch",
        "label": "Elasticsearch",
        "type": "Product",
        "properties": {
          "url": "https://www.elastic.co/elasticsearch/",
          "github": "https://github.com/elastic/elasticsearch",
          "license": "Other",
          "github_description": "Free and Open Source, Distributed, RESTful Search Engine",
          "github_creation": "2010-02-08T13:20:56Z",
          "stars": 73030,
          "forks": 25285
        }
      }
    },
    {
      "data": {
        "id": "opensearch",
        "label": "OpenSearch",
        "type": "Product",
        "properties": {
          "url": "https://opensearch.org/",
          "github": "https://github.com/opensearch-project/OpenSearch",
          "license": "Apache License 2.0",
          "github_description": "üîé Open source distributed and RESTful search engine.",
          "github_creation": "2021-01-29T22:10:00Z",
          "stars": 10992,
          "forks": 2266
        }
      }
    },
    {
      "data": {
        "id": "vald",
        "label": "Vald",
        "type": "Product",
        "properties": {
          "url": "https://vald.vdaas.org/",
          "github": "https://github.com/vdaas/vald",
          "license": "Apache License 2.0",
          "github_description": "Vald.  A Highly Scalable Distributed Vector Search Engine",
          "github_creation": "2019-07-07T06:42:22Z",
          "stars": 1609,
          "forks": 86
        }
      }
    },
    {
      "data": {
        "id": "marqo",
        "label": "Marqo",
        "type": "Product",
        "properties": {
          "url": "https://www.marqo.ai/",
          "github": "https://github.com/marqo-ai/marqo",
          "license": "Apache License 2.0",
          "github_description": "Unified embedding generation and search engine. Also available on cloud - cloud.marqo.ai",
          "github_creation": "2022-08-01T12:12:51Z",
          "stars": 4893,
          "forks": 209
        }
      }
    },
    {
      "data": {
        "id": "redis",
        "label": "Redis Vector Search",
        "type": "Product",
        "properties": {
          "url": "https://redis.io/docs/stack/search/reference/vectors/",
          "github": "https://github.com/RediSearch/RediSearch",
          "license": "Other",
          "github_description": "A query and indexing engine for Redis, providing secondary indexing, full-text search, vector similarity search and aggregations.",
          "github_creation": "2016-05-05T13:25:43Z",
          "stars": 5849,
          "forks": 552
        }
      }
    },
    {
      "data": {
        "id": "typesense",
        "label": "Typesense",
        "type": "Product",
        "properties": {
          "url": "https://typesense.org/",
          "github": "https://github.com/typesense/typesense",
          "license": "GNU General Public License v3.0",
          "github_description": "Open Source alternative to Algolia + Pinecone and an Easier-to-Use alternative to ElasticSearch ‚ö° üîç ‚ú® Fast, typo tolerant, in-memory fuzzy Search Engine for building delightful search experiences",
          "github_creation": "2017-01-18T08:01:47Z",
          "stars": 23563,
          "forks": 771
        }
      }
    },
    {
      "data": {
        "id": "vectorchord",
        "label": "VectorChord",
        "type": "Product",
        "properties": {
          "url": "https://docs.vectorchord.ai/",
          "github": "https://github.com/tensorchord/vectorchord/",
          "license": "Other",
          "github_description": "Scalable, fast, and disk-friendly vector search in Postgres, the successor of pgvecto.rs.",
          "github_creation": "2024-09-03T07:39:46Z",
          "stars": 866,
          "forks": 30
        }
      }
    },
    {
      "data": {
        "id": "lance",
        "label": "LanceDB",
        "type": "Product",
        "properties": {
          "url": "https://lancedb.com/",
          "github": "https://github.com/lancedb/lancedb",
          "license": "Apache License 2.0",
          "github_description": "Developer-friendly, embedded retrieval engine for multimodal AI. Search More; Manage Less.",
          "github_creation": "2023-02-28T01:15:17Z",
          "stars": 6701,
          "forks": 506
        }
      }
    },
    {
      "data": {
        "id": "annoy",
        "label": "Annoy",
        "type": "Product",
        "properties": {
          "url": "https://github.com/spotify/annoy",
          "github": "https://github.com/spotify/annoy",
          "license": "Apache License 2.0",
          "github_description": "Approximate Nearest Neighbors in C++/Python optimized for memory usage and loading/saving to disk",
          "github_creation": "2013-04-01T20:29:40Z",
          "stars": 13815,
          "forks": 1200
        }
      }
    },
    {
      "data": {
        "id": "nmslib",
        "label": "NMSLIB",
        "type": "Product",
        "properties": {
          "url": "https://github.com/nmslib/nmslib",
          "github": "https://github.com/nmslib/nmslib",
          "license": "Apache License 2.0",
          "github_description": "Non-Metric Space Library (NMSLIB): An efficient similarity search library and a toolkit for evaluation of k-NN methods for generic non-metric spaces.",
          "github_creation": "2013-07-10T11:06:06Z",
          "stars": 3503,
          "forks": 461
        }
      }
    },
    {
      "data": {
        "id": "hnsw",
        "label": "HNSW",
        "type": "Product",
        "properties": {
          "url": "https://github.com/nmslib/hnswlib",
          "github": "https://github.com/nmslib/hnswlib",
          "license": "Apache License 2.0",
          "github_description": "Header-only C++/python library for fast approximate nearest neighbors",
          "github_creation": "2017-07-06T13:08:46Z",
          "stars": 4760,
          "forks": 712
        }
      }
    },
    {
      "data": {
        "id": "docarray",
        "label": "DocArray",
        "type": "Product",
        "properties": {
          "url": "https://docarray.jina.ai/",
          "github": "https://github.com/jina-ai/docarray",
          "license": "Apache License 2.0",
          "github_description": "Represent, send, store and search multimodal data",
          "github_creation": "2021-12-14T15:26:24Z",
          "stars": 3076,
          "forks": 233
        }
      }
    },
    {
      "data": {
        "id": "vectorize",
        "label": "Vectorize",
        "type": "Product",
        "properties": {
          "url": "https://www.vectorize.io/",
          "github": null,
          "license": "Proprietary (SaaS)"
        }
      }
    },
    {
      "data": {
        "id": "zilliz",
        "label": "Zilliz Cloud",
        "type": "Product",
        "properties": {
          "url": "https://zilliz.com/",
          "github": "https://github.com/zilliztech",
          "license": "Proprietary (SaaS)"
        }
      }
    },
    {
      "data": {
        "id": "singlestore",
        "label": "SingleStore",
        "type": "Product",
        "properties": {
          "url": "https://www.singlestore.com/",
          "github": "https://github.com/singlestore-labs",
          "license": "Proprietary with Free Tier"
        }
      }
    },
    {
      "data": {
        "id": "clickhouse",
        "label": "ClickHouse",
        "type": "Product",
        "properties": {
          "url": "https://clickhouse.com/",
          "github": "https://github.com/ClickHouse/ClickHouse",
          "license": "Apache License 2.0",
          "github_description": "ClickHouse¬Æ is a real-time analytics database management system",
          "github_creation": "2016-06-02T08:28:18Z",
          "stars": 41337,
          "forks": 7410
        }
      }
    },
    {
      "data": {
        "id": "julien040-anyquery",
        "label": "AnyQuery",
        "type": "Service",
        "properties": {
          "url": "https://anyquery.dev/",
          "github": "https://github.com/julien040/anyquery",
          "license": "Other",
          "description": "Query more than 40 apps with one binary using SQL. It can also connect to your PostgreSQL, MySQL, or SQLite compatible database. Local-first and private by design.",
          "github_description": "Query anything (GitHub, Notion, +40 more) with SQL and let LLMs (ChatGPT, Claude) connect to using MCP",
          "github_creation": "2024-04-06T17:17:25Z",
          "stars": 945,
          "forks": 49
        }
      }
    },
    {
      "data": {
        "id": "metatool-ai-metatool-app",
        "label": "MetaMCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/metatool-ai/metatool-app",
          "description": "The one unified middleware MCP server that manages your MCP connections with GUI.",
          "github_description": "Unified middleware MCP to manage all your MCPs",
          "github_creation": "2025-01-22T11:58:52Z",
          "stars": 515,
          "forks": 80,
          "license": "GNU Affero General Public License v3.0"
        }
      }
    },
    {
      "data": {
        "id": "mindsdb-mindsdb",
        "label": "MindsDB",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/mindsdb/mindsdb",
          "description": "Connect and unify data across various platforms and databases with MindsDB as a single MCP server.",
          "github_description": "AI's query engine - Platform for building AI that can answer questions over large scale federated data. - The only MCP Server you'll ever need",
          "github_creation": "2018-08-02T17:56:45Z",
          "stars": 32574,
          "forks": 5345,
          "license": "Other"
        }
      }
    },
    {
      "data": {
        "id": "glenngillen-mcpmcp-server",
        "label": "MCPMCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/glenngillen/mcpmcp-server",
          "description": "A list of MCP servers so you can ask your client which servers you can use to improve your daily workflow.",
          "github_description": "Discover, setup, and integrate MCP servers with your favorite clients. Unlock the full potential of AI in your daily workflow.",
          "github_creation": "2025-04-24T04:49:10Z",
          "stars": 4,
          "forks": 3,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "wegotdocs-open-mcp",
        "label": "Open MCP",
        "type": "Service",
        "properties": {
          "url": "https://open-mcp.org",
          "github": "https://github.com/wegotdocs/open-mcp",
          "description": "Turn a web API into an MCP server in 10 seconds and add it to the open source registry.",
          "github_description": "",
          "github_creation": "2025-03-27T14:40:31Z",
          "stars": 179,
          "forks": 18,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "pipedreamhq-pipedream",
        "label": "Pipedream MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/PipedreamHQ/pipedream/tree/master/modelcontextprotocol",
          "description": "Connect with 2,500 APIs with 8,000+ prebuilt tools, and manage servers for your users, in your own app.",
          "github_description": "Connect APIs, remarkably fast.  Free for developers.",
          "github_creation": "2020-01-22T00:28:31Z",
          "stars": 10039,
          "forks": 5374,
          "license": "Other"
        }
      }
    },
    {
      "data": {
        "id": "veritenik-pluggedin-mcp-proxy",
        "label": "PluggedIn MCP Proxy",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/VeriTeknik/pluggedin-mcp-proxy",
          "description": "A comprehensive proxy server that combines multiple MCP servers into a single interface with extensive visibility features.",
          "github_description": "Plugged.in MCP Server manages all your other MCPs in one MCP.",
          "github_creation": "2025-04-07T12:26:50Z",
          "stars": 45,
          "forks": 6,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "tigranbs-mcgravity",
        "label": "MCGravity",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/tigranbs/mcgravity",
          "description": "A proxy tool for composing multiple MCP servers into one unified endpoint. Scale your AI tools by load balancing requests across multiple MCP servers.",
          "github_description": "A proxy tool for composing multiple MCP servers into one unified endpoint. Scale your AI tools by load balancing requests across multiple MCP servers, similar to how Nginx works for web servers.",
          "github_creation": "2025-04-13T00:02:41Z",
          "stars": 56,
          "forks": 4,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "waystation-ai-mcp",
        "label": "WayStation MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/waystation-ai/mcp",
          "description": "Seamlessly and securely connect Claude Desktop and other MCP hosts to your favorite apps (Notion, Slack, Monday, Airtable, etc.). Takes less than 90 secs.",
          "github_description": "The only MCP Server you need. Connect any MCP host with the tools you use daily through our no-code, secure integration hub.",
          "github_creation": "2025-02-27T17:51:56Z",
          "stars": 17,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "sxhxliang-mcp-access-point",
        "label": "MCP Access Point",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/sxhxliang/mcp-access-point",
          "description": "Turn a web service into an MCP server in one click without making any code changes.",
          "github_description": "Turn a web server into an MCP server in one click without making any code changes.",
          "github_creation": "2025-04-06T15:35:00Z",
          "stars": 49,
          "forks": 11,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "hamflx-imagen3-mcp",
        "label": "Imagen3 MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/hamflx/imagen3-mcp",
          "description": "A powerful image generation tool using Google's Imagen 3.0 API through MCP. Generate high-quality images from text prompts with advanced controls.",
          "github_description": "",
          "github_creation": "2025-04-26T06:41:39Z",
          "stars": 28,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "surescaleai-openai-gpt-image-mcp",
        "label": "OpenAI GPT Image MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/SureScaleAI/openai-gpt-image-mcp",
          "description": "OpenAI GPT image generation/editing MCP server.",
          "github_description": "A Model Context Protocol (MCP) tool server for OpenAI's GPT-4o/gpt-image-1 image generation and editing APIs.",
          "github_creation": "2025-04-27T07:54:28Z",
          "stars": 37,
          "forks": 13,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "xspadex-bilibili-mcp",
        "label": "Bilibili MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/xspadex/bilibili-mcp.git",
          "description": "A FastMCP-based tool that fetches Bilibili's trending videos and exposes them via a standard MCP interface.",
          "github_description": "",
          "github_creation": "2025-04-23T03:13:48Z",
          "stars": 7,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "34892002-bilibili-mcp-js",
        "label": "Bilibili MCP JS",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/34892002/bilibili-mcp-js",
          "description": "A MCP server that supports searching for Bilibili content. Provides LangChain integration examples and test scripts.",
          "github_description": "",
          "github_creation": "2025-03-24T10:27:50Z",
          "stars": 101,
          "forks": 16,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "aircodelabs-grasp",
        "label": "Grasp",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/aircodelabs/grasp",
          "description": "Self-hosted browser using agent with built-in MCP and A2A support."
        }
      }
    },
    {
      "data": {
        "id": "automatalabs-mcp-server-playwright",
        "label": "Automata Labs Playwright MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/Automata-Labs-team/MCP-Server-Playwright",
          "description": "An MCP server for browser automation using Playwright",
          "github_description": "MCP server for browser automation using Playwright",
          "github_creation": "2024-12-02T08:15:20Z",
          "stars": 210,
          "forks": 27,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "blackwhite084-playwright-plus-python-mcp",
        "label": "Playwright Plus Python MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/blackwhite084/playwright-plus-python-mcp",
          "description": "An MCP python server using Playwright for browser automation, more suitable for LLM",
          "github_description": "",
          "github_creation": "2025-01-04T08:23:58Z",
          "stars": 119,
          "forks": 17,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "browserbase-mcp-server-browserbase",
        "label": "BrowserBase MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/browserbase/mcp-server-browserbase",
          "description": "Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)",
          "github_description": "Allow LLMs to control a browser with Browserbase and Stagehand",
          "github_creation": "2024-12-05T19:20:40Z",
          "stars": 1979,
          "forks": 202,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "browsermcp-mcp",
        "label": "Browser MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/browsermcp/mcp",
          "description": "Automate your local Chrome browser",
          "github_description": "Browser MCP is a Model Context Provider (MCP) server that allows AI applications to control your browser",
          "github_creation": "2025-03-28T02:01:22Z",
          "stars": 2450,
          "forks": 161,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "co-browser-browser-use-mcp-server",
        "label": "Browser Use MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/co-browser/browser-use-mcp-server",
          "description": "browser-use packaged as an MCP server with SSE transport. includes a dockerfile to run chromium in docker + a vnc server.",
          "github_description": "Browse the web, directly from Cursor etc.",
          "github_creation": "2025-03-06T09:47:03Z",
          "stars": 578,
          "forks": 74,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "executeautomation-playwright-mcp-server",
        "label": "Execute Automation Playwright MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/executeautomation/mcp-playwright",
          "description": "An MCP server using Playwright for browser automation and webscrapping",
          "github_description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More üîå",
          "github_creation": "2024-12-03T18:43:20Z",
          "stars": 3980,
          "forks": 330,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "eyalzh-browser-control-mcp",
        "label": "Browser Control MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/eyalzh/browser-control-mcp",
          "description": "An MCP server paired with a browser extension that enables LLM clients to control the user's browser (Firefox).",
          "github_description": "MCP server paired with a browser extension that enables AI agents to control the user's browser.",
          "github_creation": "2025-03-27T16:16:33Z",
          "stars": 58,
          "forks": 13,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "fradser-mcp-server-apple-reminders",
        "label": "Apple Reminders MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/FradSer/mcp-server-apple-reminders",
          "description": "An MCP server for interacting with Apple Reminders on macOS",
          "github_description": "",
          "github_creation": "2025-02-14T18:03:02Z",
          "stars": 72,
          "forks": 10,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "getrupt-ashra-mcp",
        "label": "Ashra MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/getrupt/ashra-mcp",
          "description": "Extract structured data from any website. Just prompt and get JSON.",
          "github_description": "A Model Context Protocol server for Ashra",
          "github_creation": "2025-03-20T17:47:50Z",
          "stars": 26,
          "forks": 5,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "kimtaeyoon83-mcp-server-youtube-transcript",
        "label": "YouTube Transcript MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/kimtaeyoon83/mcp-server-youtube-transcript",
          "description": "Fetch YouTube subtitles and transcripts for AI analysis",
          "github_description": "This is an MCP server that allows you to directly download transcripts of YouTube videos.",
          "github_creation": "2024-11-29T04:53:05Z",
          "stars": 237,
          "forks": 39,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "kimtth-mcp-aoai-web-browsing",
        "label": "Azure OpenAI Web Browsing MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/kimtth/mcp-aoai-web-browsing",
          "description": "A minimal server/client MCP implementation using Azure OpenAI and Playwright.",
          "github_description": "A minimal Model Context Protocol üñ•Ô∏è server/clientüßë‚Äçüíªwith Azure OpenAI and üåê web browser control via Playwright.",
          "github_creation": "2024-12-13T12:12:08Z",
          "stars": 23,
          "forks": 8,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "microsoft-playwright-mcp",
        "label": "Microsoft Playwright MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/microsoft/playwright-mcp",
          "description": "Official Microsoft Playwright MCP server, enabling LLMs to interact with web pages through structured accessibility snapshots",
          "github_description": "Playwright MCP server",
          "github_creation": "2025-03-21T17:48:36Z",
          "stars": 12556,
          "forks": 857,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "modelcontextprotocol-server-puppeteer",
        "label": "Puppeteer MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
          "description": "Browser automation for web scraping and interaction",
          "github_description": "Model Context Protocol Servers",
          "github_creation": "2024-11-19T01:10:17Z",
          "stars": 55352,
          "forks": 6360,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ndthanhdev-mcp-browser-kit",
        "label": "MCP Browser Kit",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/ndthanhdev/mcp-browser-kit",
          "description": "An MCP Server for interacting with manifest v2 compatible browsers.",
          "github_description": "An MCP Server that enables AI assistants to interact with your local browsers.",
          "github_creation": "2025-04-01T21:37:58Z",
          "stars": 22,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "pskill9-web-search",
        "label": "Web Search MCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/pskill9/web-search",
          "description": "An MCP server that enables free web searching using Google search results, with no API keys required.",
          "github_description": "Web search using free google search (NO API KEYS REQUIRED)",
          "github_creation": "2024-12-30T02:34:47Z",
          "stars": 193,
          "forks": 35,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "recursechat-mcp-server-apple-shortcuts",
        "label": "Apple Shortcuts MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/recursechat/mcp-server-apple-shortcuts",
          "description": "An MCP Server Integration with Apple Shortcuts",
          "github_description": "",
          "github_creation": "2024-12-11T20:32:57Z",
          "stars": 188,
          "forks": 18,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "oraios-serena",
        "label": "Serena",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/oraios/serena",
          "description": "A fully-featured coding agent that relies on symbolic code operations by using language servers.",
          "github_description": "a powerful coding agent toolkit providing semantic retrieval and editing capabilities (MCP server & Agno integration)",
          "github_creation": "2025-03-23T22:35:24Z",
          "stars": 2298,
          "forks": 177,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ezyang-codemcp",
        "label": "CodeMCP",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/ezyang/codemcp",
          "description": "Coding agent with basic read, write and command line tools.",
          "github_description": "Coding assistant MCP for Claude Desktop",
          "github_creation": "2025-03-09T03:58:34Z",
          "stars": 1444,
          "forks": 116,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "doggybee-mcp-server-leetcode",
        "label": "LeetCode MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/doggybee/mcp-server-leetcode",
          "description": "An MCP server that enables AI models to search, retrieve, and solve LeetCode problems. Supports metadata filtering, user profiles, submissions, and contest data access.",
          "github_description": "A Model Context Protocol (MCP) server for LeetCode that provides access to problems, user data, and contest information through GraphQL",
          "github_creation": "2025-04-02T10:20:48Z",
          "stars": 14,
          "forks": 3,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "jinzcdev-leetcode-mcp-server",
        "label": "LeetCode MCP Server (Global+CN)",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/jinzcdev/leetcode-mcp-server",
          "description": "MCP server enabling automated access to LeetCode's programming problems, solutions, submissions and public data with optional authentication for user-specific features (e.g., notes), supporting both leetcode.com (global) and leetcode.cn (China) sites.",
          "github_description": "An MCP server enabling automated access to LeetCode's problems, solutions, and public data with optional authentication for user-specific features, supporting leetcode.com & leetcode.cn sites.",
          "github_creation": "2025-04-12T18:13:47Z",
          "stars": 25,
          "forks": 6,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "juehang-vscode-mcp-server",
        "label": "VS Code MCP Server",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/juehang/vscode-mcp-server",
          "description": "A MCP Server that allows AI such as Claude to read from the directory structure in a VS Code workspace, see problems picked up by linter(s) and the language server, read code files, and make edits.",
          "github_description": "MCP server to expose VS Code editing features to an LLM for AI coding",
          "github_creation": "2025-04-21T20:46:42Z",
          "stars": 119,
          "forks": 22,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "micl2e2-code-to-tree",
        "label": "Code to Tree",
        "type": "Service",
        "properties": {
          "url": "",
          "github": "https://github.com/micl2e2/code-to-tree",
          "description": "A single-binary MCP server that converts source code into AST, regardless of language.",
          "github_description": "A runtime-free MCP server that converts source code into ASTüå≤, regardless of language.",
          "github_creation": "2025-05-17T09:55:01Z",
          "stars": 10,
          "forks": 1,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ag-ui-protocol",
        "label": "AG-UI",
        "type": "Protocol",
        "properties": {
          "url": "https://ag-ui.com/",
          "github": "https://github.com/ag-ui-protocol/ag-ui",
          "description": "AG-UI is an open, lightweight, event-based protocol that standardizes how AI agents connect to front-end applications.",
          "github_description": "AG-UI: the Agent-User Interaction Protocol. Bring Agents into Frontend Applications.",
          "github_creation": "2025-05-07T12:49:37Z",
          "stars": 4260,
          "forks": 385,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "AG2",
        "label": "AG2",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "",
          "description": ""
        }
      }
    },
    {
      "data": {
        "id": "HumanAILabs",
        "label": "Human AI Labs, Inc.",
        "type": "Company",
        "properties": {
          "url": "https://www.personal.ai/",
          "github": "",
          "description": ""
        }
      }
    },
    {
      "data": {
        "id": "PersonalAI",
        "label": "Personal AI",
        "type": "Product",
        "properties": {
          "url": "https://www.personal.ai/",
          "github": "",
          "description": ""
        }
      }
    },
    {
      "data": {
        "id": "agentle",
        "label": "Agentle",
        "type": "Product",
        "properties": {
          "url": "https://paragon-intelligence.github.io/agentle/",
          "github": "https://github.com/paragon-intelligence/agentle",
          "description": "Build production-ready AI agents in days, not months. Python 3.13+. Save development time with minimal code, deploy anywhere with confidence, and scale from simple assistants to complex multi-agent systems without the headaches.",
          "license": "MIT License",
          "github_description": "Build production-ready AI agents in days, not months. Python 3.13+. Save development time with minimal code, deploy anywhere with confidence, and scale from simple assistants to complex multi-agent systems without the headaches.",
          "github_creation": "2025-04-25T01:56:11Z",
          "stars": 38,
          "forks": 8
        }
      }
    },
    {
      "data": {
        "id": "lmcache",
        "label": "LMCache",
        "type": "Product",
        "properties": {
          "url": "https://lmcache.ai/",
          "github": "https://github.com/LMCache/LMCache",
          "license": "Apache License 2.0",
          "description": "LMCache is an LLM serving engine extension to reduce TTFT and increase throughput, especially under long-context scenarios. By storing the KV caches of reusable texts across various locations, including (GPU, CPU DRAM, Local Disk), LMCache reuses the KV caches of any reused text (not necessarily prefix) in any serving engine instance. Thus, LMCache saves precious GPU cycles and reduces user response delay.",
          "github_description": "Redis for LLMs",
          "github_creation": "2024-05-28T21:06:04Z",
          "stars": 1650,
          "forks": 239
        }
      }
    },
    {
      "data": {
        "id": "ggmlai",
        "label": "ggml.ai",
        "type": "Company",
        "properties": {
          "url": "https://ggml.ai/",
          "github": "https://github.com/ggml-org"
        }
      }
    },
    {
      "data": {
        "id": "WhisperCpp",
        "label": "whisper.cpp",
        "type": "Product",
        "properties": {
          "github": "https://github.com/ggml-org/whisper.cpp",
          "license": "MIT License",
          "description": "Port of OpenAI's Whisper model in C/C++",
          "github_description": "Port of OpenAI's Whisper model in C/C++",
          "github_creation": "2022-09-25T18:26:37Z",
          "stars": 40954,
          "forks": 4367
        }
      }
    },
    {
      "data": {
        "id": "AgentProtocol",
        "label": "Agent Protocol",
        "type": "Protocol",
        "properties": {
          "github": "https://github.com/langchain-ai/agent-protocol",
          "license": "MIT License",
          "description": "Agent Protocol is our attempt at codifying the framework-agnostic APIs that are needed to serve LLM agents in production. This document explains the purpose of the protocol and makes the case for each of the endpoints in the spec. We finish by listing some roadmap items for the future.",
          "github_description": "",
          "github_creation": "2024-11-12T22:41:45Z",
          "stars": 395,
          "forks": 29
        }
      }
    },
    {
      "data": {
        "id": "Agntcy",
        "label": "Agntcy",
        "type": "Protocol",
        "properties": {
          "url": "https://agntcy.org/",
          "github": "https://github.com/agntcy",
          "description": "An open source collective for inter-agent collaboration. The AGNTCY is where we are building the Internet of Agents to be: A diverse, collaborative space to innovate, develop, and maintain software components and services for agentic workflows and multi-agent software."
        }
      }
    },
    {
      "data": {
        "id": "WixCompany",
        "label": "Wix.com, Inc",
        "type": "Company",
        "properties": {
          "url": "https://wix.com/",
          "country": "Israel"
        }
      }
    },
    {
      "data": {
        "id": "WixStudio",
        "label": "Wix Studio",
        "type": "Product",
        "properties": {
          "url": "https://wix.com/",
          "description": "Wix Studio is our intuitive web platform for creative, fast-paced teams at agencies and enterprises to create, develop and manage exceptional web projects, with hyper efficiency. Agencies get advanced design capabilities, extensive AI solutions, flexible dev tools and custom CSS for complete creative control. Combined with an integrated workspace, the platform provides everything needed for a super seamless workflow. And teams in enterprises can work on a whole different scale with advanced multi-site management, account-level analytics, SSO, and shared CMS collections, as well as services like custom development and dedicated success managers."
        }
      }
    },
    {
      "data": {
        "id": "aiven-open-mcp-aiven",
        "label": "Aiven Open MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Aiven-Open/mcp-aiven",
          "github": "https://github.com/Aiven-Open/mcp-aiven",
          "description": "Navigate your Aiven projects and interact with the PostgreSQL¬Æ, Apache Kafka¬Æ, ClickHouse¬Æ and OpenSearch¬Æ services",
          "github_description": "Model Context Protocol server for Aiven",
          "github_creation": "2025-03-13T07:34:49Z",
          "stars": 7,
          "forks": 7,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "alexanderzuev-supabase-mcp-server",
        "label": "Supabase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/alexanderzuev/supabase-mcp-server",
          "github": "https://github.com/alexanderzuev/supabase-mcp-server",
          "description": "Supabase MCP Server with support for SQL query execution and database exploration tools"
        }
      }
    },
    {
      "data": {
        "id": "aliyun-alibabacloud-tablestore-mcp-server",
        "label": "Alibaba Cloud Tablestore MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/aliyun/alibabacloud-tablestore-mcp-server",
          "github": "https://github.com/aliyun/alibabacloud-tablestore-mcp-server",
          "description": "MCP service for Tablestore, features include adding documents, semantic search for documents based on vectors and scalars, RAG-friendly, and serverless",
          "github_description": "",
          "github_creation": "2025-03-19T03:10:51Z",
          "stars": 132,
          "forks": 32,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "benborla29-mcp-server-mysql",
        "label": "MySQL MCP Server (NodeJS)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/benborla29/mcp-server-mysql",
          "github": "https://github.com/benborla29/mcp-server-mysql",
          "description": "MySQL database integration in NodeJS with configurable access controls and schema inspection"
        }
      }
    },
    {
      "data": {
        "id": "bytebase-dbhub",
        "label": "DBHub Universal Database MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/bytebase/dbhub",
          "github": "https://github.com/bytebase/dbhub",
          "description": "Universal database MCP server supporting mainstream databases",
          "github_description": "Universal database MCP server connecting to MySQL, PostgreSQL, SQL Server, MariaDB.",
          "github_creation": "2025-03-09T16:36:38Z",
          "stars": 719,
          "forks": 72,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "c4pt0r-mcp-server-tidb",
        "label": "TiDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/c4pt0r/mcp-server-tidb",
          "github": "https://github.com/c4pt0r/mcp-server-tidb",
          "description": "TiDB database integration with schema inspection and query capabilities",
          "github_description": "mcp server for tidb",
          "github_creation": "2025-03-06T06:53:44Z",
          "stars": 20,
          "forks": 4,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "canner-wren-engine",
        "label": "Wren Engine Semantic MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Canner/wren-engine",
          "github": "https://github.com/Canner/wren-engine",
          "description": "The Semantic Engine for Model Context Protocol(MCP) Clients and AI Agents",
          "github_description": "ü§ñ The Semantic Engine for Model Context Protocol(MCP) Clients and AI¬†Agents üî• ",
          "github_creation": "2022-05-09T07:07:45Z",
          "stars": 349,
          "forks": 92,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "centralmind-gateway",
        "label": "CentralMind Gateway",
        "type": "Service",
        "properties": {
          "url": "https://github.com/centralmind/gateway",
          "github": "https://github.com/centralmind/gateway",
          "description": "MCP and MCP SSE Server that automatically generate API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase",
          "github_description": "Universal MCP-Server for your Databases optimized for LLMs and AI-Agents.",
          "github_creation": "2025-02-10T19:34:14Z",
          "stars": 403,
          "forks": 41,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "christianhinge-dicom-mcp",
        "label": "DICOM MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ChristianHinge/dicom-mcp",
          "github": "https://github.com/ChristianHinge/dicom-mcp",
          "description": "DICOM integration to query, read, and move medical images and reports from PACS and other DICOM compliant systems",
          "github_description": "Model Context Protocol (MCP) for interacting with dicom servers (PACS etc.)",
          "github_creation": "2025-03-11T16:58:30Z",
          "stars": 48,
          "forks": 15,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "chroma-core-chroma-mcp",
        "label": "Chroma MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/chroma-core/chroma-mcp",
          "github": "https://github.com/chroma-core/chroma-mcp",
          "description": "Chroma MCP server to access local and cloud Chroma instances for retrieval capabilities",
          "github_description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma",
          "github_creation": "2025-02-11T00:23:22Z",
          "stars": 200,
          "forks": 35,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "clickhouse-mcp-clickhouse",
        "label": "ClickHouse MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ClickHouse/mcp-clickhouse",
          "github": "https://github.com/ClickHouse/mcp-clickhouse",
          "description": "ClickHouse database integration with schema inspection and query capabilities",
          "github_description": "",
          "github_creation": "2024-12-25T14:15:46Z",
          "stars": 401,
          "forks": 73,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "confluentinc-mcp-confluent",
        "label": "Confluent MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/confluentinc/mcp-confluent",
          "github": "https://github.com/confluentinc/mcp-confluent",
          "description": "Confluent integration to interact with Confluent Kafka and Confluent Cloud REST APIs",
          "github_description": "",
          "github_creation": "2025-01-16T20:07:31Z",
          "stars": 64,
          "forks": 22,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "couchbase-ecosystem-mcp-server-couchbase",
        "label": "Couchbase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
          "github": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
          "description": "Couchbase MCP server provides unfied access to both Capella cloud and self-managed clusters for document operations, SQL++ queries and natural language data analysis",
          "github_description": "MCP Server to interact with data in Couchbase Clusters",
          "github_creation": "2025-03-26T18:04:52Z",
          "stars": 10,
          "forks": 9,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "cr7258-elasticsearch-mcp-server",
        "label": "Elasticsearch MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/cr7258/elasticsearch-mcp-server",
          "github": "https://github.com/cr7258/elasticsearch-mcp-server",
          "description": "MCP Server implementation that provides Elasticsearch interaction",
          "github_description": "A Model Context Protocol (MCP) server implementation that provides Elasticsearch and OpenSearch interaction.",
          "github_creation": "2025-01-09T04:20:03Z",
          "stars": 163,
          "forks": 34,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "crystaldba-postgres-mcp",
        "label": "Postgres MCP (CrystalDBA)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/crystaldba/postgres-mcp",
          "github": "https://github.com/crystaldba/postgres-mcp",
          "description": "All-in-one MCP server for Postgres development and operations, with tools for performance analysis, tuning, and health checks",
          "github_description": "Postgres MCP Pro provides configurable read/write access and performance analysis for you and your AI agents.",
          "github_creation": "2025-03-24T18:28:53Z",
          "stars": 497,
          "forks": 60,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "dataring-engineering-mcp-server-trino",
        "label": "Trino MCP Server (Dataring)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Dataring-engineering/mcp-server-trino",
          "github": "https://github.com/Dataring-engineering/mcp-server-trino",
          "description": "Trino MCP Server to query and access data from Trino Clusters",
          "github_description": "MCP Server for Trino",
          "github_creation": "2025-03-10T10:10:09Z",
          "stars": 15,
          "forks": 7,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "tuannvm-mcp-trino",
        "label": "Trino MCP Server (Go)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/tuannvm/mcp-trino",
          "github": "https://github.com/tuannvm/mcp-trino",
          "description": "A Go implementation of a Model Context Protocol (MCP) server for Trino",
          "github_description": "A high-performance Model Context Protocol (MCP) server for Trino implemented in Go.",
          "github_creation": "2025-04-09T14:10:52Z",
          "stars": 29,
          "forks": 9,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "designcomputer-mysql-mcp-server",
        "label": "MySQL MCP Server (DesignComputer)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/designcomputer/mysql_mcp_server",
          "github": "https://github.com/designcomputer/mysql_mcp_server",
          "description": "MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines",
          "github_description": "A Model Context Protocol (MCP) server that enables secure interaction with MySQL databases",
          "github_creation": "2024-12-03T20:53:52Z",
          "stars": 629,
          "forks": 151,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "wenb1n-dev-mysql-mcp-server-pro",
        "label": "MySQL MCP Server Pro",
        "type": "Service",
        "properties": {
          "url": "https://github.com/wenb1n-dev/mysql_mcp_server_pro",
          "github": "https://github.com/wenb1n-dev/mysql_mcp_server_pro",
          "description": "Supports SSE, STDIO; not only limited to MySQL's CRUD functionality; also includes database exception analysis capabilities; controls database permissions based on roles; and makes it easy for developers to extend tools with customization",
          "github_description": "Model Context Protocol (MCP) server that supports secure interaction with MySQL databases and has anomaly analysis capabilities.Êõ¥Âä†ÁâõÈÄºÔºÅÊõ¥Âä†Â•ΩÁî®ÔºÅ‰∏ç‰ªÖÊ≠¢‰∫émysqlÁöÑÂ¢ûÂà†ÊîπÊü•ÂäüËÉΩÔºõ ËøòÂåÖÂê´‰∫ÜÊï∞ÊçÆÂ∫ìÂºÇÂ∏∏ÂàÜÊûêËÉΩÂäõÔºõ‰∏î‰æø‰∫éÂºÄÂèëËÄÖ‰ª¨ËøõË°å‰∏™ÊÄßÂåñÁöÑÂ∑•ÂÖ∑Êâ©Â±ï ",
          "github_creation": "2025-04-04T07:22:49Z",
          "stars": 191,
          "forks": 24,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "domdomegg-airtable-mcp-server",
        "label": "Airtable MCP Server (DomDomegg)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/domdomegg/airtable-mcp-server",
          "github": "https://github.com/domdomegg/airtable-mcp-server",
          "description": "Airtable database integration with schema inspection, read and write capabilities",
          "github_description": "üóÇÔ∏èü§ñ Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable bases",
          "github_creation": "2024-12-12T17:16:40Z",
          "stars": 177,
          "forks": 47,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "edwinbernadus-nocodb-mcp-server",
        "label": "NocoDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/edwinbernadus/nocodb-mcp-server",
          "github": "https://github.com/edwinbernadus/nocodb-mcp-server",
          "description": "Nocodb database integration, read and write capabilities",
          "github_description": "nocodb mcp server",
          "github_creation": "2025-04-03T16:04:04Z",
          "stars": 26,
          "forks": 7,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "ergut-mcp-bigquery-server",
        "label": "BigQuery MCP Server (Ergut)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ergut/mcp-bigquery-server",
          "github": "https://github.com/ergut/mcp-bigquery-server",
          "description": "Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities",
          "github_description": "A Model Context Protocol (MCP) server that provides secure, read-only access to BigQuery datasets. Enables Large Language Models (LLMs) to safely query and analyze data through a standardized interface.",
          "github_creation": "2024-12-03T19:57:59Z",
          "stars": 91,
          "forks": 25,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "f4ww4z-mcp-mysql-server",
        "label": "MySQL MCP Server (Node.js)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/f4ww4z/mcp-mysql-server",
          "github": "https://github.com/f4ww4z/mcp-mysql-server",
          "description": "Node.js-based MySQL database integration that provides secure MySQL database operations",
          "github_description": "A Model Context Protocol server for MySQL database operations",
          "github_creation": "2024-12-13T09:39:28Z",
          "stars": 80,
          "forks": 17,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "fireproof-storage-mcp-database-server",
        "label": "Fireproof Database MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/fireproof-storage/mcp-database-server",
          "github": "https://github.com/fireproof-storage/mcp-database-server",
          "description": "Fireproof ledger database with multi-user sync",
          "github_description": "Store and load JSON documents from LLM tool use",
          "github_creation": "2024-12-16T21:59:16Z",
          "stars": 20,
          "forks": 7,
          "license": "Other"
        }
      }
    },
    {
      "data": {
        "id": "freepeak-db-mcp-server",
        "label": "DB MCP Server (FreePeak)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/FreePeak/db-mcp-server",
          "github": "https://github.com/FreePeak/db-mcp-server",
          "description": "A high-performance multi-database MCP server built with Golang, supporting MySQL & PostgreSQL (NoSQL coming soon). Includes built-in tools for query execution, transaction management, schema exploration, query building, and performance analysis, with seamless Cursor integration for enhanced database workflows",
          "github_description": "A powerful multi-database server implementing the Model Context Protocol (MCP) to provide AI assistants with structured access to databases.",
          "github_creation": "2025-03-17T20:40:28Z",
          "stars": 210,
          "forks": 19,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "furey-mongodb-lens",
        "label": "MongoDB Lens",
        "type": "Service",
        "properties": {
          "url": "https://github.com/furey/mongodb-lens",
          "github": "https://github.com/furey/mongodb-lens",
          "description": "MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
          "github_description": "üçÉüîé MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
          "github_creation": "2025-03-09T05:39:54Z",
          "stars": 170,
          "forks": 16,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "gannonh-firebase-mcp",
        "label": "Firebase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/gannonh/firebase-mcp",
          "github": "https://github.com/gannonh/firebase-mcp",
          "description": "Firebase services including Auth, Firestore and Storage",
          "github_description": "üî• Model Context Protocol (MCP) server for Firebase.",
          "github_creation": "2025-03-08T21:00:09Z",
          "stars": 170,
          "forks": 33,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "get-convex-convex-backend",
        "label": "Convex Backend MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/get-convex/convex-backend",
          "github": "https://github.com/get-convex/convex-backend",
          "description": "Convex database integration to introspect tables, functions, and run oneoff queries",
          "github_description": "The open-source reactive database for app developers",
          "github_creation": "2024-03-08T07:23:15Z",
          "stars": 5173,
          "forks": 275,
          "license": "Other"
        }
      }
    },
    {
      "data": {
        "id": "googleapis-genai-toolbox",
        "label": "Google GenAI Toolbox",
        "type": "Service",
        "properties": {
          "url": "https://github.com/googleapis/genai-toolbox",
          "github": "https://github.com/googleapis/genai-toolbox",
          "description": "Open source MCP server specializing in easy, fast, and secure tools for Databases",
          "github_description": "MCP Toolbox for Databases is an open source MCP server for databases.",
          "github_creation": "2024-06-07T20:52:54Z",
          "stars": 1483,
          "forks": 160,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "greptimeteam-greptimedb-mcp-server",
        "label": "GreptimeDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
          "github": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
          "description": "MCP Server for querying GreptimeDB",
          "github_description": "A Model Context Protocol (MCP) server implementation for GreptimeDB",
          "github_creation": "2025-03-12T09:11:28Z",
          "stars": 18,
          "forks": 8,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "label": "SQLite Explorer FastMCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server",
          "github": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server",
          "description": "An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation",
          "github_description": "An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation.",
          "github_creation": "2024-12-15T00:08:25Z",
          "stars": 61,
          "forks": 19,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "idoru-influxdb-mcp-server",
        "label": "InfluxDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/idoru/influxdb-mcp-server",
          "github": "https://github.com/idoru/influxdb-mcp-server",
          "description": "Run queries against InfluxDB OSS API v2",
          "github_description": "An MCP Server for querying InfluxDB",
          "github_creation": "2025-03-11T05:24:06Z",
          "stars": 13,
          "forks": 7,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "isaacwasserman-mcp-snowflake-server",
        "label": "Snowflake MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
          "github": "https://github.com/isaacwasserman/mcp-snowflake-server",
          "description": "Snowflake integration implementing read and (optional) write operations as well as insight tracking",
          "github_description": "",
          "github_creation": "2024-12-13T20:30:59Z",
          "stars": 105,
          "forks": 45,
          "license": "GNU General Public License v3.0"
        }
      }
    },
    {
      "data": {
        "id": "joshuarileydev-supabase-mcp-server",
        "label": "Supabase MCP Server (Joshua Riley)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/joshuarileydev/supabase-mcp-server",
          "github": "https://github.com/joshuarileydev/supabase-mcp-server",
          "description": "Supabase MCP Server for managing and creating projects and organisations in Supabase",
          "github_description": "",
          "github_creation": "2024-12-06T19:34:36Z",
          "stars": 41,
          "forks": 10,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "jovezhong-mcp-timeplus",
        "label": "Timeplus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/jovezhong/mcp-timeplus",
          "github": "https://github.com/jovezhong/mcp-timeplus",
          "description": "MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus",
          "github_description": "Execute SQL queries and manage databases seamlessly with Timeplus. Leverage powerful tools to interact with your data, Kafka topics, and Iceberg tables efficiently. Enhance your data workflows with a user-friendly interface and robust backend capabilities.",
          "github_creation": "2025-02-16T22:42:47Z",
          "stars": 9,
          "forks": 2,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "kashiwabyte-vikingdb-mcp-server",
        "label": "VikingDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/KashiwaByte/vikingdb-mcp-server",
          "github": "https://github.com/KashiwaByte/vikingdb-mcp-server",
          "description": "VikingDB integration with collection and index introduction, vector store and search capabilities",
          "github_description": "a mcp server for vikingdb store and search",
          "github_creation": "2024-12-06T10:40:00Z",
          "stars": 3,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "kiliczsh-mcp-mongo-server",
        "label": "MongoDB MCP Server (Kiliczsh)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/kiliczsh/mcp-mongo-server",
          "github": "https://github.com/kiliczsh/mcp-mongo-server",
          "description": "A Model Context Protocol Server for MongoDB",
          "github_description": "A Model Context Protocol Server for MongoDB",
          "github_creation": "2024-12-04T19:30:40Z",
          "stars": 236,
          "forks": 38,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ktanaka101-mcp-server-duckdb",
        "label": "DuckDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ktanaka101/mcp-server-duckdb",
          "github": "https://github.com/ktanaka101/mcp-server-duckdb",
          "description": "DuckDB database integration with schema inspection and query capabilities",
          "github_description": "A Model Context Protocol (MCP) server implementation for DuckDB, providing database interaction capabilities",
          "github_creation": "2024-11-30T14:25:37Z",
          "stars": 120,
          "forks": 14,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "lucashild-mcp-server-bigquery",
        "label": "BigQuery MCP Server (Lucas Hild)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/LucasHild/mcp-server-bigquery",
          "github": "https://github.com/LucasHild/mcp-server-bigquery",
          "description": "BigQuery database integration with schema inspection and query capabilities",
          "github_description": "A Model Context Protocol server that provides access to BigQuery",
          "github_creation": "2024-12-03T18:09:19Z",
          "stars": 100,
          "forks": 26,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "quarkiverse-mcp-server-jdbc",
        "label": "JDBC MCP Server (Quarkiverse)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/quarkiverse/mcp-server-jdbc",
          "github": "https://github.com/quarkiverse/mcp-server-jdbc",
          "description": "Connect to any JDBC-compatible database and query, insert, update, delete, and more"
        }
      }
    },
    {
      "data": {
        "id": "jparkerweb-mcp-sqlite",
        "label": "SQLite MCP Server (JParkerWeb)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/jparkerweb/mcp-sqlite",
          "github": "https://github.com/jparkerweb/mcp-sqlite",
          "description": "Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities",
          "github_description": "üêá Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities",
          "github_creation": "2025-04-05T03:28:31Z",
          "stars": 17,
          "forks": 2,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "memgraph-mcp-memgraph",
        "label": "Memgraph MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/memgraph/mcp-memgraph",
          "github": "https://github.com/memgraph/mcp-memgraph",
          "description": "Memgraph MCP Server - includes a tool to run a query against Memgraph and a schema resource",
          "github_description": "Memgraph MCP Server",
          "github_creation": "2025-03-10T15:34:08Z",
          "stars": 18,
          "forks": 8,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "modelcontextprotocol-server-postgres",
        "label": "PostgreSQL MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/modelcontextprotocol/server-postgres",
          "github": "https://github.com/modelcontextprotocol/server-postgres",
          "description": "PostgreSQL database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "modelcontextprotocol-server-sqlite",
        "label": "SQLite MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/modelcontextprotocol/server-sqlite",
          "github": "https://github.com/modelcontextprotocol/server-sqlite",
          "description": "SQLite database operations with built-in analysis features"
        }
      }
    },
    {
      "data": {
        "id": "neo4j-contrib-mcp-neo4j",
        "label": "Neo4j MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/neo4j-contrib/mcp-neo4j",
          "github": "https://github.com/neo4j-contrib/mcp-neo4j",
          "description": "Model Context Protocol with Neo4j (Run queries, Knowledge Graph Memory, Manaage Neo4j Aura Instances)",
          "github_description": "Model Context Protocol with Neo4j",
          "github_creation": "2024-12-03T15:44:25Z",
          "stars": 437,
          "forks": 114,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "neondatabase-mcp-server-neon",
        "label": "Neon MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/neondatabase/mcp-server-neon",
          "github": "https://github.com/neondatabase/mcp-server-neon",
          "description": "An MCP Server for creating and managing Postgres databases using Neon Serverless Postgres",
          "github_description": "MCP server for interacting with Neon Management API and databases",
          "github_creation": "2024-11-29T19:08:55Z",
          "stars": 328,
          "forks": 53,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "niledatabase-nile-mcp-server",
        "label": "Nile MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/niledatabase/nile-mcp-server",
          "github": "https://github.com/niledatabase/nile-mcp-server",
          "description": "MCP server for Nile's Postgres platform - Manage and query Postgres databases, tenants, users, auth using LLMs",
          "github_description": "MCP server for Nile Database - Manage and query databases, tenants, users, auth using LLMs",
          "github_creation": "2025-02-04T07:55:42Z",
          "stars": 14,
          "forks": 6,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-odbc",
        "label": "ODBC MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/OpenLinkSoftware/mcp-odbc-server",
          "github": "https://github.com/OpenLinkSoftware/mcp-odbc-server",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Open Database Connectivity (ODBC) protocol",
          "github_description": "Typescript based Model Context Procotol (MCP) Server for Open Database Connectivity (ODBC)",
          "github_creation": "2025-03-27T22:06:52Z",
          "stars": 6,
          "forks": 2,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-sqlalchemy",
        "label": "SQLAlchemy MCP Server (OpenLink)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/OpenLinkSoftware/mcp-sqlalchemy-server",
          "github": "https://github.com/OpenLinkSoftware/mcp-sqlalchemy-server",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via SQLAlchemy using Python ODBC (pyodbc)",
          "github_description": "A simple MCP ODBC server using FastAPI, ODBC and SQLAlchemy.",
          "github_creation": "2025-03-21T23:22:23Z",
          "stars": 14,
          "forks": 6,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "pab1it0-adx-mcp-server",
        "label": "Azure Data Explorer MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/pab1it0/adx-mcp-server",
          "github": "https://github.com/pab1it0/adx-mcp-server",
          "description": "Query and analyze Azure Data Explorer databases",
          "github_description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Azure Data Explorer databases through standardized interfaces.",
          "github_creation": "2025-03-10T10:04:07Z",
          "stars": 42,
          "forks": 20,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "pab1it0-prometheus-mcp-server",
        "label": "Prometheus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/pab1it0/prometheus-mcp-server",
          "github": "https://github.com/pab1it0/prometheus-mcp-server",
          "description": "Query and analyze Prometheus, open-source monitoring system",
          "github_description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces.",
          "github_creation": "2025-03-19T16:36:09Z",
          "stars": 120,
          "forks": 23,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "prisma-prisma",
        "label": "Prisma MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/prisma/prisma",
          "github": "https://github.com/prisma/prisma",
          "description": "Gives LLMs the ability to manage Prisma Postgres databases (e.g. spin up new database instances or run schema migrations)",
          "github_description": "Next-generation ORM for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB",
          "github_creation": "2019-06-20T13:33:47Z",
          "stars": 42626,
          "forks": 1767,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "qdrant-mcp-server-qdrant",
        "label": "Qdrant MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/qdrant/mcp-server-qdrant",
          "github": "https://github.com/qdrant/mcp-server-qdrant",
          "description": "A Qdrant MCP server",
          "github_description": "An official Qdrant Model Context Protocol (MCP) server implementation",
          "github_creation": "2024-12-02T12:07:39Z",
          "stars": 711,
          "forks": 101,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "quantgeekdev-mongo-mcp",
        "label": "MongoDB MCP Server (QuantGeekDev)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/QuantGeekDev/mongo-mcp",
          "github": "https://github.com/QuantGeekDev/mongo-mcp",
          "description": "MongoDB integration that enables LLMs to interact directly with databases",
          "github_description": "A mongo db server for the model context protocol (MCP)",
          "github_creation": "2024-12-05T23:12:54Z",
          "stars": 153,
          "forks": 25,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "rashidazarang-airtable-mcp",
        "label": "Airtable MCP Server (Rashid)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/rashidazarang/airtable-mcp",
          "github": "https://github.com/rashidazarang/airtable-mcp",
          "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language. Features include base management, table operations, schema manipulation, record filtering, and data migration through a standardized MCP interface",
          "github_description": "Airtable integration for AI-powered applications via Anthropic's Model Context Protocol (MCP). Connect your AI tools directly to Airtable for seamless data access and management.",
          "github_creation": "2025-03-15T11:16:38Z",
          "stars": 21,
          "forks": 5,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "redis-mcp-redis",
        "label": "Redis MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/redis/mcp-redis",
          "github": "https://github.com/redis/mcp-redis",
          "description": "The Redis official MCP Server offers an interface to manage and search data in Redis",
          "github_description": "The official Redis MCP Server is a natural language interface designed for agentic applications to manage and search data in Redis efficiently",
          "github_creation": "2025-04-02T08:42:13Z",
          "stars": 102,
          "forks": 33,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "runekaagaard-mcp-alchemy",
        "label": "SQLAlchemy MCP Server (Universal)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/runekaagaard/mcp-alchemy",
          "github": "https://github.com/runekaagaard/mcp-alchemy",
          "description": "Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases. Features schema and relationship inspection, and large dataset analysis capabilities",
          "github_description": "A MCP (model context protocol) server that gives the LLM access to and knowledge about relational databases like SQLite, Postgresql, MySQL & MariaDB, Oracle, and MS-SQL.",
          "github_creation": "2024-12-26T14:09:30Z",
          "stars": 243,
          "forks": 42,
          "license": "Mozilla Public License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "sirmews-mcp-pinecone",
        "label": "Pinecone MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/sirmews/mcp-pinecone",
          "github": "https://github.com/sirmews/mcp-pinecone",
          "description": "Pinecone integration with vector search capabilities",
          "github_description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
          "github_creation": "2024-12-08T04:53:27Z",
          "stars": 124,
          "forks": 25,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "skysqlinc-skysql-mcp",
        "label": "SkySQL MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/skysqlinc/skysql-mcp",
          "github": "https://github.com/skysqlinc/skysql-mcp",
          "description": "Serverless MariaDB Cloud DB MCP server. Tools to launch, delete, execute SQL and work with DB level AI agents for accurate text-2-sql and conversations",
          "github_description": "SkySQL MCP server and client repository.",
          "github_creation": "2025-04-04T22:43:45Z",
          "stars": 1,
          "forks": 2,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "supabase-community-supabase-mcp",
        "label": "Supabase MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/supabase-community/supabase-mcp",
          "github": "https://github.com/supabase-community/supabase-mcp",
          "description": "Official Supabase MCP server to connect AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data",
          "github_description": "Connect Supabase to your AI assistants",
          "github_creation": "2024-12-20T23:52:42Z",
          "stars": 1661,
          "forks": 149,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "theralabs-legion-mcp",
        "label": "Legion MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/TheRaLabs/legion-mcp",
          "github": "https://github.com/TheRaLabs/legion-mcp",
          "description": "Universal database MCP server supporting multiple database types including PostgreSQL, Redshift, CockroachDB, MySQL, RDS MySQL, Microsoft SQL Server, BigQuery, Oracle DB, and SQLite",
          "github_description": "A server that helps people access and query data in databases using the Legion Query Runner with Model Context Protocol (MCP) in Python.",
          "github_creation": "2025-03-24T02:06:22Z",
          "stars": 40,
          "forks": 6,
          "license": "GNU General Public License v3.0"
        }
      }
    },
    {
      "data": {
        "id": "tradercjz-dolphindb-mcp-server",
        "label": "DolphinDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/tradercjz/dolphindb-mcp-server",
          "github": "https://github.com/tradercjz/dolphindb-mcp-server",
          "description": "DolphinDB database integration with schema inspection and query capabilities",
          "github_description": "dolphindb-mcp-server",
          "github_creation": "2025-03-24T08:32:00Z",
          "stars": 3,
          "forks": 1,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "weaviate-mcp-server-weaviate",
        "label": "Weaviate MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/weaviate/mcp-server-weaviate",
          "github": "https://github.com/weaviate/mcp-server-weaviate",
          "description": "An MCP Server to connect to your Weaviate collections as a knowledge base as well as using Weaviate as a chat memory store",
          "github_description": "MCP (Model Context Protocol) server for Weaviate",
          "github_creation": "2025-02-11T21:23:19Z",
          "stars": 132,
          "forks": 33,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "xgenerationlab-xiyan-mcp-server",
        "label": "XiyanSQL MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/XGenerationLab/xiyan_mcp_server",
          "github": "https://github.com/XGenerationLab/xiyan_mcp_server",
          "description": "An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM",
          "github_description": "A Model Context Protocol (MCP) server that enables natural language queries to databases",
          "github_creation": "2025-03-13T07:39:00Z",
          "stars": 162,
          "forks": 28,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "xing5-mcp-google-sheets",
        "label": "Google Sheets MCP Server (Xing5)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/xing5/mcp-google-sheets",
          "github": "https://github.com/xing5/mcp-google-sheets",
          "description": "A Model Context Protocol server for interacting with Google Sheets. This server provides tools to create, read, update, and manage spreadsheets through the Google Sheets API",
          "github_description": "This MCP server integrates with your Google Drive and Google Sheets, to enable creating and modifying spreadsheets.",
          "github_creation": "2025-03-22T01:01:45Z",
          "stars": 196,
          "forks": 49,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "freema-mcp-gsheets",
        "label": "Google Sheets MCP Server (Freema)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/freema/mcp-gsheets",
          "github": "https://github.com/freema/mcp-gsheets",
          "description": "MCP server for Google Sheets API integration with comprehensive reading, writing, formatting, and sheet management capabilities",
          "github_description": "MCP server for Google Sheets - Read, write and manipulate spreadsheets through Claude Desktop",
          "github_creation": "2025-05-24T17:43:01Z",
          "stars": 3,
          "forks": 3,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "zhwt-go-mcp-mysql",
        "label": "MySQL MCP Server (Go)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Zhwt/go-mcp-mysql",
          "github": "https://github.com/Zhwt/go-mcp-mysql",
          "description": "Easy to use, zero dependency MySQL MCP server built with Golang with configurable readonly mode and schema inspection",
          "github_description": "Zero burden, ready-to-use Model Context Protocol (MCP) server for interacting with MySQL and automation. No Node.js or Python environment needed.",
          "github_creation": "2025-03-10T03:42:17Z",
          "stars": 33,
          "forks": 7,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "ydb-ydb-mcp",
        "label": "YDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ydb-platform/ydb-mcp",
          "github": "https://github.com/ydb-platform/ydb-mcp",
          "description": "Model Context Protocol server for YDB. It allows to work with YDB databases from any LLM that supports MCP. This integration enables AI-powered database operations and natural language interactions with your YDB instances.",
          "github_description": "",
          "github_creation": "2025-04-24T05:56:50Z",
          "stars": 20,
          "forks": 3,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "zilliztech-mcp-server-milvus",
        "label": "Milvus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/zilliztech/mcp-server-milvus",
          "github": "https://github.com/zilliztech/mcp-server-milvus",
          "description": "MCP Server for Milvus / Zilliz, making it possible to interact with your database",
          "github_description": "Model Context Protocol Servers for Milvus",
          "github_creation": "2025-03-06T02:10:40Z",
          "stars": 144,
          "forks": 33,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-jdbc",
        "label": "JDBC MCP Server (OpenLink)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/OpenLinkSoftware/mcp-jdbc-server",
          "github": "https://github.com/OpenLinkSoftware/mcp-jdbc-server",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Java Database Connectivity (JDBC) protocol",
          "github_description": "Java based Model Context Procotol (MCP) Server for JDBC",
          "github_creation": "2025-04-14T14:18:37Z",
          "stars": 3,
          "forks": 2,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "yincongcyincong-victoriametrics-mcp-server",
        "label": "VictoriaMetrics MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/yincongcyincong/VictoriaMetrics-mcp-server",
          "github": "https://github.com/yincongcyincong/VictoriaMetrics-mcp-server",
          "description": "An MCP server for interacting with VictoriaMetrics database",
          "github_description": "MCP Server for the VictoriaMetrics.",
          "github_creation": "2025-04-12T06:38:23Z",
          "stars": 5,
          "forks": 3,
          "license": ""
        }
      }
    },
    {
      "data": {
        "id": "hydrolix-mcp-hydrolix",
        "label": "Hydrolix MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/hydrolix/mcp-hydrolix",
          "github": "https://github.com/hydrolix/mcp-hydrolix",
          "description": "Hydrolix time-series datalake integration providing schema exploration and query capabilities to LLM-based workflows",
          "github_description": "An MCP server for Hydrolix",
          "github_creation": "2025-04-08T00:12:00Z",
          "stars": 3,
          "forks": 1,
          "license": "Apache License 2.0"
        }
      }
    },
    {
      "data": {
        "id": "davewind-mysql-mcp-server",
        "label": "MySQL MCP Server (DaveWind)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/dave-wind/mysql-mcp-server",
          "github": "https://github.com/dave-wind/mysql-mcp-server",
          "description": "A user-friendly read-only mysql mcp server for cursor and n8n",
          "github_description": "mcp model-context-protocol mysql cursor n8n",
          "github_creation": "2025-04-27T01:43:09Z",
          "stars": 8,
          "forks": 1,
          "license": "MIT License"
        }
      }
    },
    {
      "data": {
        "id": "Database",
        "label": "Database",
        "type": "UseCase"
      }
    },
    {
      "data": {
        "id": "mcpjam-inspector",
        "label": "MCPJam Inspector",
        "type": "Product",
        "properties": {
          "url": "https://www.mcpjam.com/",
          "github": "https://github.com/MCPJam/inspector",
          "license": "Other",
          "description": "MCPJam Inspector is a powerful developer tool for testing and debugging Model Context Protocol servers with AI assistance.",
          "github_description": "Testing and Debugging MCPs",
          "github_creation": "2025-05-23T15:56:00Z",
          "stars": 157,
          "forks": 7
        }
      }
    },
    {
      "data": {
        "id": "kuzudb",
        "label": "Kuzu",
        "type": "Product",
        "properties": {
          "url": "https://kuzudb.com/",
          "github": "https://github.com/kuzudb/kuzu",
          "license": "MIT License",
          "description": "Embedded property graph database built for speed. Vector search and full-text search built in. Implements Cypher.",
          "github_description": "Embedded property graph database built for speed. Vector search and full-text search built in. Implements Cypher.",
          "github_creation": "2020-09-26T07:43:06Z",
          "stars": 2669,
          "forks": 170
        }
      }
    },
    {
      "data": {
        "id": "oterm",
        "label": "oterm",
        "type": "Product",
        "properties": {
          "url": "",
          "github": "https://github.com/ggozad/oterm",
          "license": "MIT License",
          "description": "The terminal client for Ollama.",
          "github_description": "the terminal client for Ollama",
          "github_creation": "2023-10-10T07:29:26Z",
          "stars": 2005,
          "forks": 118
        }
      }
    },
    {
      "data": {
        "id": "elemental",
        "label": "Elemental",
        "type": "Product",
        "properties": {
          "url": "https://attoagents.io/elemental/",
          "github": "https://github.com/AttoAgents/elemental",
          "license": "MIT License",
          "description": "General-purpose, multi-agent framework for automating tasks using AI agents composed in teams for conversation-based collaboration.",
          "github_description": "General-purpose, multi-agent framework for automating tasks using AI agents composed in teams for conversation-based collaboration.",
          "github_creation": "2025-04-28T05:53:21Z",
          "stars": 6,
          "forks": 1
        }
      }
    },
    {
      "data": {
        "id": "attoagents",
        "label": "AttoAgents",
        "type": "Company",
        "properties": {
          "url": "https://attoagents.io/",
          "github": "https://github.com/AttoAgents",
          "country": "US"
        }
      }
    },
    {
      "data": {
        "id": "alchemist",
        "label": "Alchemist",
        "type": "Product",
        "properties": {
          "url": "https://attoagents.io/alchemist/",
          "license": "Proprietary",
          "description": "Alchemist is a powerful tool for building and managing AI agents, enabling users to create custom agents that can perform tasks, answer questions, and interact with various data sources."
        }
      }
    }
  ],
  "edges": [
    {
      "data": {
        "id": "edge-elemental-use-case",
        "source": "elemental",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-elemental-mcp-client",
        "source": "elemental",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "edge-attoagents-elemental",
        "source": "attoagents",
        "target": "elemental",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "edge-elemental-ollama",
        "source": "elemental",
        "target": "Ollama",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "edge-attoagents-alchemist",
        "source": "attoagents",
        "target": "alchemist",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "edge-alchemist-use-case",
        "source": "alchemist",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-alchemist-MCP-client",
        "source": "alchemist",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "edge-alchemist-elemental",
        "source": "alchemist",
        "target": "elemental",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "edge-alchemist-RAG",
        "source": "alchemist",
        "target": "RAG",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-oterm-ollama",
        "source": "oterm",
        "target": "Ollama",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "edge-oterm-mcp-client",
        "source": "oterm",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "edge-oterm-use-case",
        "source": "oterm",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-kuzudb-vectordb",
        "source": "kuzudb",
        "target": "GraphDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-mcpjam-inspector-mcp",
        "source": "mcpjam-inspector",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "edge-use-case--aiven-open-mcp-aiven",
        "source": "aiven-open-mcp-aiven",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--alexanderzuev-supabase-mcp-server",
        "source": "alexanderzuev-supabase-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--aliyun-alibabacloud-tablestore-mcp-server",
        "source": "aliyun-alibabacloud-tablestore-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--benborla29-mcp-server-mysql",
        "source": "benborla29-mcp-server-mysql",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--bytebase-dbhub",
        "source": "bytebase-dbhub",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--c4pt0r-mcp-server-tidb",
        "source": "c4pt0r-mcp-server-tidb",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--canner-wren-engine",
        "source": "canner-wren-engine",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--centralmind-gateway",
        "source": "centralmind-gateway",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--christianhinge-dicom-mcp",
        "source": "christianhinge-dicom-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--chroma-core-chroma-mcp",
        "source": "chroma-core-chroma-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--clickhouse-mcp-clickhouse",
        "source": "clickhouse-mcp-clickhouse",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--confluentinc-mcp-confluent",
        "source": "confluentinc-mcp-confluent",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--couchbase-ecosystem-mcp-server-couchbase",
        "source": "couchbase-ecosystem-mcp-server-couchbase",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--cr7258-elasticsearch-mcp-server",
        "source": "cr7258-elasticsearch-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--crystaldba-postgres-mcp",
        "source": "crystaldba-postgres-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--dataring-engineering-mcp-server-trino",
        "source": "dataring-engineering-mcp-server-trino",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--tuannvm-mcp-trino",
        "source": "tuannvm-mcp-trino",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--designcomputer-mysql-mcp-server",
        "source": "designcomputer-mysql-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--wenb1n-dev-mysql-mcp-server-pro",
        "source": "wenb1n-dev-mysql-mcp-server-pro",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--domdomegg-airtable-mcp-server",
        "source": "domdomegg-airtable-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--edwinbernadus-nocodb-mcp-server",
        "source": "edwinbernadus-nocodb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ergut-mcp-bigquery-server",
        "source": "ergut-mcp-bigquery-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--f4ww4z-mcp-mysql-server",
        "source": "f4ww4z-mcp-mysql-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--fireproof-storage-mcp-database-server",
        "source": "fireproof-storage-mcp-database-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--freepeak-db-mcp-server",
        "source": "freepeak-db-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--furey-mongodb-lens",
        "source": "furey-mongodb-lens",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--gannonh-firebase-mcp",
        "source": "gannonh-firebase-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--get-convex-convex-backend",
        "source": "get-convex-convex-backend",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--googleapis-genai-toolbox",
        "source": "googleapis-genai-toolbox",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--greptimeteam-greptimedb-mcp-server",
        "source": "greptimeteam-greptimedb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "source": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--idoru-influxdb-mcp-server",
        "source": "idoru-influxdb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--isaacwasserman-mcp-snowflake-server",
        "source": "isaacwasserman-mcp-snowflake-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--joshuarileydev-supabase-mcp-server",
        "source": "joshuarileydev-supabase-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--jovezhong-mcp-timeplus",
        "source": "jovezhong-mcp-timeplus",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--kashiwabyte-vikingdb-mcp-server",
        "source": "kashiwabyte-vikingdb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--kiliczsh-mcp-mongo-server",
        "source": "kiliczsh-mcp-mongo-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ktanaka101-mcp-server-duckdb",
        "source": "ktanaka101-mcp-server-duckdb",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--lucashild-mcp-server-bigquery",
        "source": "lucashild-mcp-server-bigquery",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--quarkiverse-mcp-server-jdbc",
        "source": "quarkiverse-mcp-server-jdbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--jparkerweb-mcp-sqlite",
        "source": "jparkerweb-mcp-sqlite",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--memgraph-mcp-memgraph",
        "source": "memgraph-mcp-memgraph",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--modelcontextprotocol-server-postgres",
        "source": "modelcontextprotocol-server-postgres",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--modelcontextprotocol-server-sqlite",
        "source": "modelcontextprotocol-server-sqlite",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--neo4j-contrib-mcp-neo4j",
        "source": "neo4j-contrib-mcp-neo4j",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--neondatabase-mcp-server-neon",
        "source": "neondatabase-mcp-server-neon",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--niledatabase-nile-mcp-server",
        "source": "niledatabase-nile-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-odbc",
        "source": "openlink-mcp-server-odbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-sqlalchemy",
        "source": "openlink-mcp-server-sqlalchemy",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--pab1it0-adx-mcp-server",
        "source": "pab1it0-adx-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--pab1it0-prometheus-mcp-server",
        "source": "pab1it0-prometheus-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--prisma-prisma",
        "source": "prisma-prisma",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--qdrant-mcp-server-qdrant",
        "source": "qdrant-mcp-server-qdrant",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--quantgeekdev-mongo-mcp",
        "source": "quantgeekdev-mongo-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--rashidazarang-airtable-mcp",
        "source": "rashidazarang-airtable-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--redis-mcp-redis",
        "source": "redis-mcp-redis",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--runekaagaard-mcp-alchemy",
        "source": "runekaagaard-mcp-alchemy",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--sirmews-mcp-pinecone",
        "source": "sirmews-mcp-pinecone",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--skysqlinc-skysql-mcp",
        "source": "skysqlinc-skysql-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--supabase-community-supabase-mcp",
        "source": "supabase-community-supabase-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--theralabs-legion-mcp",
        "source": "theralabs-legion-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--tradercjz-dolphindb-mcp-server",
        "source": "tradercjz-dolphindb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--weaviate-mcp-server-weaviate",
        "source": "weaviate-mcp-server-weaviate",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--xgenerationlab-xiyan-mcp-server",
        "source": "xgenerationlab-xiyan-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--xing5-mcp-google-sheets",
        "source": "xing5-mcp-google-sheets",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--freema-mcp-gsheets",
        "source": "freema-mcp-gsheets",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--zhwt-go-mcp-mysql",
        "source": "zhwt-go-mcp-mysql",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ydb-ydb-mcp",
        "source": "ydb-ydb-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--zilliztech-mcp-server-milvus",
        "source": "zilliztech-mcp-server-milvus",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-jdbc",
        "source": "openlink-mcp-server-jdbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--yincongcyincong-victoriametrics-mcp-server",
        "source": "yincongcyincong-victoriametrics-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--hydrolix-mcp-hydrolix",
        "source": "hydrolix-mcp-hydrolix",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--davewind-mysql-mcp-server",
        "source": "davewind-mysql-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-aiven-open-mcp-aiven",
        "source": "aiven-open-mcp-aiven",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-alexanderzuev-supabase-mcp-server",
        "source": "alexanderzuev-supabase-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-aliyun-alibabacloud-tablestore-mcp-server",
        "source": "aliyun-alibabacloud-tablestore-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-benborla29-mcp-server-mysql",
        "source": "benborla29-mcp-server-mysql",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-bytebase-dbhub",
        "source": "bytebase-dbhub",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-c4pt0r-mcp-server-tidb",
        "source": "c4pt0r-mcp-server-tidb",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-canner-wren-engine",
        "source": "canner-wren-engine",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-centralmind-gateway",
        "source": "centralmind-gateway",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-christianhinge-dicom-mcp",
        "source": "christianhinge-dicom-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-chroma-core-chroma-mcp",
        "source": "chroma-core-chroma-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-clickhouse-mcp-clickhouse",
        "source": "clickhouse-mcp-clickhouse",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-confluentinc-mcp-confluent",
        "source": "confluentinc-mcp-confluent",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-couchbase-ecosystem-mcp-server-couchbase",
        "source": "couchbase-ecosystem-mcp-server-couchbase",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-cr7258-elasticsearch-mcp-server",
        "source": "cr7258-elasticsearch-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-crystaldba-postgres-mcp",
        "source": "crystaldba-postgres-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-dataring-engineering-mcp-server-trino",
        "source": "dataring-engineering-mcp-server-trino",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-tuannvm-mcp-trino",
        "source": "tuannvm-mcp-trino",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-designcomputer-mysql-mcp-server",
        "source": "designcomputer-mysql-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-wenb1n-dev-mysql-mcp-server-pro",
        "source": "wenb1n-dev-mysql-mcp-server-pro",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-domdomegg-airtable-mcp-server",
        "source": "domdomegg-airtable-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-edwinbernadus-nocodb-mcp-server",
        "source": "edwinbernadus-nocodb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ergut-mcp-bigquery-server",
        "source": "ergut-mcp-bigquery-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-f4ww4z-mcp-mysql-server",
        "source": "f4ww4z-mcp-mysql-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-fireproof-storage-mcp-database-server",
        "source": "fireproof-storage-mcp-database-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-freepeak-db-mcp-server",
        "source": "freepeak-db-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-furey-mongodb-lens",
        "source": "furey-mongodb-lens",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-gannonh-firebase-mcp",
        "source": "gannonh-firebase-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-get-convex-convex-backend",
        "source": "get-convex-convex-backend",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-googleapis-genai-toolbox",
        "source": "googleapis-genai-toolbox",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-greptimeteam-greptimedb-mcp-server",
        "source": "greptimeteam-greptimedb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "source": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-idoru-influxdb-mcp-server",
        "source": "idoru-influxdb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-isaacwasserman-mcp-snowflake-server",
        "source": "isaacwasserman-mcp-snowflake-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-joshuarileydev-supabase-mcp-server",
        "source": "joshuarileydev-supabase-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-jovezhong-mcp-timeplus",
        "source": "jovezhong-mcp-timeplus",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kashiwabyte-vikingdb-mcp-server",
        "source": "kashiwabyte-vikingdb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kiliczsh-mcp-mongo-server",
        "source": "kiliczsh-mcp-mongo-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ktanaka101-mcp-server-duckdb",
        "source": "ktanaka101-mcp-server-duckdb",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-lucashild-mcp-server-bigquery",
        "source": "lucashild-mcp-server-bigquery",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-quarkiverse-mcp-server-jdbc",
        "source": "quarkiverse-mcp-server-jdbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-jparkerweb-mcp-sqlite",
        "source": "jparkerweb-mcp-sqlite",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-memgraph-mcp-memgraph",
        "source": "memgraph-mcp-memgraph",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-postgres",
        "source": "modelcontextprotocol-server-postgres",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-sqlite",
        "source": "modelcontextprotocol-server-sqlite",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-neo4j-contrib-mcp-neo4j",
        "source": "neo4j-contrib-mcp-neo4j",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-neondatabase-mcp-server-neon",
        "source": "neondatabase-mcp-server-neon",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-niledatabase-nile-mcp-server",
        "source": "niledatabase-nile-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-odbc",
        "source": "openlink-mcp-server-odbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-sqlalchemy",
        "source": "openlink-mcp-server-sqlalchemy",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pab1it0-adx-mcp-server",
        "source": "pab1it0-adx-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pab1it0-prometheus-mcp-server",
        "source": "pab1it0-prometheus-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-prisma-prisma",
        "source": "prisma-prisma",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-qdrant-mcp-server-qdrant",
        "source": "qdrant-mcp-server-qdrant",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-quantgeekdev-mongo-mcp",
        "source": "quantgeekdev-mongo-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-rashidazarang-airtable-mcp",
        "source": "rashidazarang-airtable-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-redis-mcp-redis",
        "source": "redis-mcp-redis",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-runekaagaard-mcp-alchemy",
        "source": "runekaagaard-mcp-alchemy",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-sirmews-mcp-pinecone",
        "source": "sirmews-mcp-pinecone",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-skysqlinc-skysql-mcp",
        "source": "skysqlinc-skysql-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-supabase-community-supabase-mcp",
        "source": "supabase-community-supabase-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-theralabs-legion-mcp",
        "source": "theralabs-legion-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-tradercjz-dolphindb-mcp-server",
        "source": "tradercjz-dolphindb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-weaviate-mcp-server-weaviate",
        "source": "weaviate-mcp-server-weaviate",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xgenerationlab-xiyan-mcp-server",
        "source": "xgenerationlab-xiyan-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xing5-mcp-google-sheets",
        "source": "xing5-mcp-google-sheets",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-freema-mcp-gsheets",
        "source": "freema-mcp-gsheets",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-zhwt-go-mcp-mysql",
        "source": "zhwt-go-mcp-mysql",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ydb-ydb-mcp",
        "source": "ydb-ydb-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-zilliztech-mcp-server-milvus",
        "source": "zilliztech-mcp-server-milvus",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-jdbc",
        "source": "openlink-mcp-server-jdbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-yincongcyincong-victoriametrics-mcp-server",
        "source": "yincongcyincong-victoriametrics-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-hydrolix-mcp-hydrolix",
        "source": "hydrolix-mcp-hydrolix",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-davewind-mysql-mcp-server",
        "source": "davewind-mysql-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "e-Wix-WixStudio",
        "source": "WixCompany",
        "target": "WixStudio",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-WixStudio-use-case",
        "source": "WixStudio",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-Wix-Base44",
        "source": "WixCompany",
        "target": "Base44Company",
        "label": "ACQUIRED"
      }
    },
    {
      "data": {
        "id": "e-agent-protocol-lanchain",
        "source": "LangChainCompany",
        "target": "AgentProtocol",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-lanchain-agntcy",
        "source": "LangChainCompany",
        "target": "Agntcy",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-langgraph-agent-protocol",
        "source": "LangGraph",
        "target": "AgentProtocol",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-ggml-llama-cpp",
        "source": "ggmlai",
        "target": "LlamaCpp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-ggml-whisper-cpp",
        "source": "ggmlai",
        "target": "WhisperCpp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-whisper-cpp-use-case",
        "source": "WhisperCpp",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-lmcache-use-case",
        "source": "lmcache",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-alibaba-agentscope",
        "source": "AlibabaCompany",
        "target": "agentscope",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-agentle-langsmith",
        "source": "agentle",
        "target": "LangSmith",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-agentle-use-case",
        "source": "agentle",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-agentle-mcp",
        "source": "agentle",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-humanailabs-personalai",
        "source": "HumanAILabs",
        "target": "PersonalAI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-personalai-use-case",
        "source": "PersonalAI",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-microsoft-microsoft-playwright-mcp",
        "source": "Microsoft",
        "target": "microsoft-playwright-mcp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-mastra-ag-ui",
        "source": "Mastra",
        "target": "ag-ui-protocol",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-mastra-mcp",
        "source": "Mastra",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-mastra-rag",
        "source": "Mastra",
        "target": "RAG",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-AG2-ag-ui",
        "source": "AG2",
        "target": "ag-ui-protocol",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-langgraph-ag-ui",
        "source": "LangGraph",
        "target": "ag-ui-protocol",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-crewai-ag-ui",
        "source": "CrewAI",
        "target": "ag-ui-protocol",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e-YCombinator-KeywordsAICompany",
        "source": "YCombinator",
        "target": "KeywordsAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-KeywordsAI-company-product",
        "source": "KeywordsAICompany",
        "target": "KeywordsAI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-MaximAI-company-product",
        "source": "MaximAICompany",
        "target": "MaximAI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-CometML-company-product",
        "source": "CometMLCompany",
        "target": "Opik",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-Galileo-company-product",
        "source": "GalileoCompany",
        "target": "Galileo",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-Portkey-company-product",
        "source": "PortkeyCompany",
        "target": "portkey",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-gateway-company-product",
        "source": "PortkeyCompany",
        "target": "gateway",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-KeywordsAI-use-case",
        "source": "KeywordsAI",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-Scorecard-use-case",
        "source": "Scorecard",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-AgentOps-use-case",
        "source": "AgentOps",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-Braintrust-use-case",
        "source": "Braintrust",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-MLFlow-use-case",
        "source": "MLFlow",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-FutureAGI-use-case",
        "source": "FutureAGI",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-Phoeniz-use-case",
        "source": "Phoeniz",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-WeightAndBiases-use-case",
        "source": "WeightAndBiases",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-MaximAI-use-case",
        "source": "MaximAI",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-Opik-use-case",
        "source": "Opik",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-monocle-use-case",
        "source": "monocle",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-galileo-use-case",
        "source": "Galileo",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-portkey-use-case",
        "source": "portkey",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-gateway-use-case",
        "source": "gateway",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e1",
        "source": "YCombinator",
        "target": "ContinueInc",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e2",
        "source": "continue.dev",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e3",
        "source": "ContinueInc",
        "target": "continue.dev",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e4",
        "source": "ByteDance",
        "target": "trae",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e5",
        "source": "trae",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e6",
        "source": "ClineBotInc",
        "target": "cline",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e7",
        "source": "cline",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e8",
        "source": "databutton",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e9",
        "source": "DatabuttonCompany",
        "target": "databutton",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e10",
        "source": "base44",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e11",
        "source": "Base44Company",
        "target": "base44",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e12",
        "source": "AnysphereCompany",
        "target": "cursor",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e13",
        "source": "cursor",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e14",
        "source": "WindsurfCompany",
        "target": "Windsurf",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e15",
        "source": "Windsurf",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e16",
        "source": "KleinerPerkins",
        "target": "WindsurfCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e17",
        "source": "GeneralCatalyst",
        "target": "WindsurfCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e18",
        "source": "GreenOaks",
        "target": "WindsurfCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e19",
        "source": "FoundersFund",
        "target": "WindsurfCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e20",
        "source": "bolt",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e21",
        "source": "StackBlitz",
        "target": "bolt",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e22",
        "source": "lovable",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e23",
        "source": "lovableCompany",
        "target": "lovable",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e24",
        "source": "v0",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e25",
        "source": "vercel",
        "target": "v0",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e26",
        "source": "augmentcode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e27",
        "source": "Replit",
        "target": "augmentcode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e28",
        "source": "Mocha",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e29",
        "source": "Axilla",
        "target": "Mocha",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e30",
        "source": "GithubCopilot",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e31",
        "source": "Github",
        "target": "GithubCopilot",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e32",
        "source": "RorkApp",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e33",
        "source": "RorkCompany",
        "target": "RorkApp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e34",
        "source": "Clark",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e35",
        "source": "Superblocks",
        "target": "Clark",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e36",
        "source": "FirebaseStudio",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e37",
        "source": "Google",
        "target": "FirebaseStudio",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e38",
        "source": "xAI",
        "target": "GrokStudio",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e39",
        "source": "CanvaCode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e40",
        "source": "Code",
        "target": "CanvaCode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e41",
        "source": "a0dev",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e42",
        "source": "a0devCompany",
        "target": "a0dev",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e43",
        "source": "YCombinator",
        "target": "a0devCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e44",
        "source": "Goose",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e45",
        "source": "Manus",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e46",
        "source": "OpenManus",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e47",
        "source": "agent-zero",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e48",
        "source": "Manus",
        "target": "browser-use",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e49",
        "source": "browser-use",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e50",
        "source": "openai",
        "target": "WindsurfCompany",
        "label": "ACQUIRED"
      }
    },
    {
      "data": {
        "id": "e51",
        "source": "YCombinator",
        "target": "RowboatLabs",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e52",
        "source": "RowboatLabs",
        "target": "Rowboat",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e53",
        "source": "GrokStudio",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e54",
        "source": "YCombinator",
        "target": "PearAI",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e55",
        "source": "PearAI",
        "target": "pearai-app",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e56",
        "source": "pearai-app",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e57",
        "source": "BrowserUseCompany",
        "target": "browser-use",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e58",
        "source": "YCombinator",
        "target": "BrowserUseCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e59",
        "source": "YCombinator",
        "target": "OllamaCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e60",
        "source": "OllamaCompany",
        "target": "Ollama",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e61",
        "source": "Ollama",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e62",
        "source": "Devin",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e63",
        "source": "CognitionCompany",
        "target": "Devin",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e64",
        "source": "WhimsyWorks",
        "target": "screenshot-to-code",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e65",
        "source": "screenshot-to-code",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e66",
        "source": "CrewAICompany",
        "target": "CrewAI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e67",
        "source": "CrewAI",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e68",
        "source": "Microsoft",
        "target": "AutoGen",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e69",
        "source": "Microsoft",
        "target": "SemanticKernel",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e70",
        "source": "SemanticKernel",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e71",
        "source": "AutoGen",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e72",
        "source": "LangChain",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e73",
        "source": "AutoGPT",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e74",
        "source": "llama-index",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e75",
        "source": "llama-index",
        "target": "RAG",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e76",
        "source": "LlamaIndexCompany",
        "target": "llama-index",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e77",
        "source": "Haystack",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e78",
        "source": "Haystack",
        "target": "RAG",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e79",
        "source": "MetaGPT",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e80",
        "source": "DeepsetCompany",
        "target": "Haystack",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e81",
        "source": "LangGraph",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e82",
        "source": "LangGraph",
        "target": "LangChain",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e83",
        "source": "RAG",
        "target": "VectorDB",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e84",
        "source": "RAG",
        "target": "GraphDB",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e85",
        "source": "vLLM",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e86",
        "source": "DockerModelRunner",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e87",
        "source": "open-interpreter",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e88",
        "source": "OpenHands",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e89",
        "source": "Flowise",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e90",
        "source": "AgentGPT",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e91",
        "source": "aider",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e92",
        "source": "LangFlow",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e93",
        "source": "LangFlow",
        "target": "LangChain",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e94",
        "source": "ChatDev",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e95",
        "source": "phidata",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e96",
        "source": "composio",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e97",
        "source": "storm",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e98",
        "source": "dspy",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e99",
        "source": "gpt-researcher",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e100",
        "source": "vanna",
        "target": "DataAnalysis",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e101",
        "source": "letta",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e102",
        "source": "DB-GPT",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e103",
        "source": "eliza",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e104",
        "source": "swe-agent",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e105",
        "source": "botpress",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e106",
        "source": "plandex",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e107",
        "source": "AI-Scientist",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e108",
        "source": "e2b",
        "target": "Runtime",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e109",
        "source": "WrenAI",
        "target": "DataAnalysis",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e110",
        "source": "agentscope",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e111",
        "source": "superagent",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e112",
        "source": "Microsoft",
        "target": "TaskWeaver",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e113",
        "source": "TaskWeaver",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e114",
        "source": "TaskWeaver",
        "target": "DataAnalysis",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e115",
        "source": "multi-agent-orchestrator",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e116",
        "source": "Amazon",
        "target": "multi-agent-orchestrator",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e117",
        "source": "vision-agent",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e118",
        "source": "gptme",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e119",
        "source": "gptme",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e120",
        "source": "agency-swarm",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e121",
        "source": "cody",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e122",
        "source": "langdroid",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e123",
        "source": "AGiXT",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e124",
        "source": "lagent",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e125",
        "source": "DemoGPT",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e126",
        "source": "uAgents",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e127",
        "source": "DemoGPT",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e128",
        "source": "uAgents",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e129",
        "source": "Adala",
        "target": "DataAnalysis",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e130",
        "source": "AIlice",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e131",
        "source": "dust",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e132",
        "source": "nous",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e133",
        "source": "AgentForge",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e134",
        "source": "data-to-paper",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e135",
        "source": "fastagency",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e136",
        "source": "taskgen",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e137",
        "source": "agentjo",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e138",
        "source": "aideml",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e139",
        "source": "dify",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e140",
        "source": "colossal-ai",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e141",
        "source": "witsyai",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e142",
        "source": "LlamaCpp",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e143",
        "source": "BitnetCpp",
        "target": "InfEngine",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e144",
        "source": "Microsoft",
        "target": "BitnetCpp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e145",
        "source": "Windsurf",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e146",
        "source": "cursor",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e147",
        "source": "ChatWise",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e148",
        "source": "ChatWise",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e149",
        "source": "VisualStudioCode",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e150",
        "source": "Microsoft",
        "target": "VisualStudioCode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e151",
        "source": "VisualStudioCode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e152",
        "source": "TransformersAgents",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e153",
        "source": "HuggingFace",
        "target": "TransformersAgents",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e154",
        "source": "DeepsiteAi",
        "target": "Deepsite",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e155",
        "source": "Deepsite",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e156",
        "source": "Deepsite",
        "target": "Smolagents",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e157",
        "source": "Smolagents",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e158",
        "source": "HuggingFace",
        "target": "Smolagents",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e159",
        "source": "DockerCompany",
        "target": "DockerModelRunner",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e160",
        "source": "DockerModelRunner",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "e161",
        "source": "DockerModelRunner",
        "target": "LlamaCpp",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e162",
        "source": "Deepchat",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e163",
        "source": "YGUI",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e164",
        "source": "YCLI",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e165",
        "source": "CherryStudio",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e166",
        "source": "YGUI",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e167",
        "source": "YCLI",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e168",
        "source": "CherryStudio",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e169",
        "source": "HyperChat",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e170",
        "source": "HyperChat",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e171",
        "source": "cline",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e172",
        "source": "continue.dev",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e173",
        "source": "RooCode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e174",
        "source": "RooCode",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e175",
        "source": "5ire",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e176",
        "source": "5ire",
        "target": "RAG",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e177",
        "source": "5ire",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e178",
        "source": "Lutra",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e179",
        "source": "Lutra",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e180",
        "source": "Refact",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e181",
        "source": "Refact",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e182",
        "source": "SmallCloud",
        "target": "Refact",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e183",
        "source": "ZedIndustries",
        "target": "Zed",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e184",
        "source": "Zed",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e185",
        "source": "Zed",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e186",
        "source": "MCPConnect",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e187",
        "source": "ChatMCP",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e188",
        "source": "ChatMCP",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e189",
        "source": "Google",
        "target": "A2A",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e190",
        "source": "Anthropic",
        "target": "MCP",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e191",
        "source": "IBM",
        "target": "ACP",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e192",
        "source": "YCombinator",
        "target": "MaitaiCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e193",
        "source": "Groq",
        "target": "ChipDesign",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e194",
        "source": "Groq",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e195",
        "source": "MaitaiCompany",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e198",
        "source": "Google",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e199",
        "source": "Anthropic",
        "target": "ClaudeCode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e200",
        "source": "ClaudeCode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e201",
        "source": "openai",
        "target": "ChatGPT",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e202",
        "source": "Anthropic",
        "target": "Claude",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e203",
        "source": "Langfuse",
        "target": "PromptEngineering",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e204",
        "source": "LangfuseCompany",
        "target": "Langfuse",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e205",
        "source": "YCombinator",
        "target": "LangfuseCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e206",
        "source": "Rowboat",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e207",
        "source": "LangSmith",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e208",
        "source": "LangChainCompany",
        "target": "LangSmith",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e209",
        "source": "LangChainCompany",
        "target": "LangChain",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e210",
        "source": "LangChainCompany",
        "target": "LangGraph",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e211",
        "source": "LangflowCompany",
        "target": "LangFlow",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e212",
        "source": "Rowboat",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e213",
        "source": "openai",
        "target": "IO",
        "label": "ACQUIRED"
      }
    },
    {
      "data": {
        "id": "e214",
        "source": "KleinerPerkins",
        "target": "Superblocks",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e215",
        "source": "GreenOaks",
        "target": "Superblocks",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e216",
        "source": "Meritech",
        "target": "Superblocks",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e217",
        "source": "SparkCapital",
        "target": "Superblocks",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e218",
        "source": "ADK",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e219",
        "source": "Google",
        "target": "ADK",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e220",
        "source": "ADK",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e221",
        "source": "ADK",
        "target": "A2A",
        "label": "USES"
      }
    },
    {
      "data": {
        "id": "e222",
        "source": "HCompany",
        "target": "HRunner",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e223",
        "source": "HRunner",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e224",
        "source": "UIPath",
        "target": "HCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e225",
        "source": "Amazon",
        "target": "HCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e226",
        "source": "Accel",
        "target": "HCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e227",
        "source": "n8nCompany",
        "target": "n8n",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e228",
        "source": "n8n",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e229",
        "source": "n8n",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e230",
        "source": "FlowiseCompany",
        "target": "Flowise",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e231",
        "source": "YCombinator",
        "target": "FlowiseCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e232",
        "source": "Ironclad",
        "target": "Rivet",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e233",
        "source": "Ironclad",
        "target": "Jurist",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e234",
        "source": "Ironclad",
        "target": "IroncladCLM",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e235",
        "source": "Rivet",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e236",
        "source": "Jurist",
        "target": "AILegal",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e237",
        "source": "IroncladCLM",
        "target": "AICLM",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e238",
        "source": "InsightPartners",
        "target": "CrewAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e239",
        "source": "CraftVentures",
        "target": "CrewAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e240",
        "source": "EarlGrey",
        "target": "CrewAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e241",
        "source": "FirsthandVentures",
        "target": "CrewAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e242",
        "source": "SuperAGICompany",
        "target": "SuperAGI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e243",
        "source": "SuperAGI",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e244",
        "source": "Newlands",
        "target": "SuperAGICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e245",
        "source": "KeaCapital",
        "target": "SuperAGICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e246",
        "source": "Better",
        "target": "SuperAGICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e247",
        "source": "Microsoft",
        "target": "UFO",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e248",
        "source": "UFO",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e249",
        "source": "LiveKit",
        "target": "VoiceAgents",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e250",
        "source": "LiveKitCompany",
        "target": "LiveKit",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e251",
        "source": "Redpoint",
        "target": "LiveKitCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e252",
        "source": "Altimeter",
        "target": "LiveKitCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e253",
        "source": "BotpressCompany",
        "target": "botpress",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e254",
        "source": "botpress",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e255",
        "source": "Decibel",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e256",
        "source": "Inovia",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e257",
        "source": "PanacheVentures",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e258",
        "source": "RealVentures",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e259",
        "source": "HikeVentures",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e260",
        "source": "OneWay",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e261",
        "source": "FondsInnovexport",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e262",
        "source": "BoxOne",
        "target": "BotpressCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e263",
        "source": "llm_agents",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e264",
        "source": "FoundryLabs",
        "target": "e2b",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e265",
        "source": "e2b",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e266",
        "source": "DustCompany",
        "target": "dust",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e267",
        "source": "Sequoia",
        "target": "DustCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e268",
        "source": "XYZ",
        "target": "DustCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e269",
        "source": "ConnectVentures",
        "target": "DustCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e270",
        "source": "MetaGPTCompany",
        "target": "MetaGPT",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e271",
        "source": "AgentFlow",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-meta-llama",
        "source": "MetaCompany",
        "target": "llama-stack-apps",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-pythagora-gpt",
        "source": "PythagoraCompany",
        "target": "GPTPilot",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-stition-devika",
        "source": "StitionAI",
        "target": "Devika",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-pipecat-pipe",
        "source": "PipecatAI",
        "target": "Pipecat",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-portia-portia",
        "source": "PortiaAICompany",
        "target": "PortiaAI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-giselle-giselle",
        "source": "GiselleAI",
        "target": "Giselle",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-memgpt-memgpt",
        "source": "MemGPTCompany",
        "target": "Memgpt",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openbmb-agentverse",
        "source": "OpenBMB",
        "target": "AgentVerse",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openbmb-repoagent",
        "source": "OpenBMB",
        "target": "RepoAgent",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openbmb-xagent",
        "source": "OpenBMB",
        "target": "XAgent",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-minedojo-voyager",
        "source": "MineDojo",
        "target": "Voyager",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openai-swarm",
        "source": "openai",
        "target": "Swarm",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-llama-agent",
        "source": "llama-stack",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-agentverse-agent",
        "source": "AgentVerse",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-maestro-agent",
        "source": "MaestroFramework",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-upsonic-agent",
        "source": "Upsonic",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-mastra-agent",
        "source": "Mastra",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-portia-agent",
        "source": "PortiaAI",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-swarm-agent",
        "source": "Swarm",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-gptpilot-code",
        "source": "GPTPilot",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-devika-code",
        "source": "Devika",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-repoagent-code",
        "source": "RepoAgent",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-codel-code",
        "source": "Codel",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-microagent-code",
        "source": "MicroAgent",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-agentrun-code",
        "source": "AgentRun",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-claudeeng-code",
        "source": "ClaudeEngineer",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-blockagi-research",
        "source": "BlockAGI",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-llocal-research",
        "source": "LLocalSearch",
        "target": "Research",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-rasagpt-gen",
        "source": "RasaGPT",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-babyagi-gen",
        "source": "BabyAGI-UI",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-ix-gen",
        "source": "ix",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-duetgpt-gen",
        "source": "DuetGPT",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-memgpt-gen",
        "source": "Memgpt",
        "target": "GenPurposeAgent",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-camel-game",
        "source": "CamelAutoGPT",
        "target": "GameSimulation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-skyagi-game",
        "source": "SkyAGI",
        "target": "GameSimulation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-voyager-game",
        "source": "Voyager",
        "target": "GameSimulation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-privategpt-km",
        "source": "PrivateGPT",
        "target": "KnowledgeManagement",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-localgpt-km",
        "source": "LocalGPT",
        "target": "KnowledgeManagement",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-secondbrain-km",
        "source": "SecondBrainAgent",
        "target": "KnowledgeManagement",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-restgpt-auto",
        "source": "RestGPT",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-xagent-auto",
        "source": "XAgent",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-llamaagents-auto",
        "source": "llama-agents",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-agentk-auto",
        "source": "AgentK",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-adas-auto",
        "source": "ADAS",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-giselle-auto",
        "source": "Giselle",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-pipecat-multi",
        "source": "Pipecat",
        "target": "MultimodalAgents",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-voicelab-test",
        "source": "VoiceLab",
        "target": "TestingEvaluation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-openrag-test",
        "source": "OpenRAGEval",
        "target": "TestingEvaluation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-upsonic-mcp",
        "source": "Upsonic",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-codex-ai-devel",
        "source": "Codex",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-codex-openai",
        "source": "openai",
        "target": "Codex",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openai-agents-framework",
        "source": "openai-agents",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-openai-openai-agents-sdk",
        "source": "openai",
        "target": "openai-agents",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openai-agents-sdk-mcp",
        "source": "openai-agents",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-litellm-model-serving",
        "source": "LiteLLM",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-litellm-company-litellm",
        "source": "LiteLLMCompany",
        "target": "LiteLLM",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-ycombinator-litellm",
        "source": "YCombinator",
        "target": "LiteLLMCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-gravity-litellm",
        "source": "GravityFund",
        "target": "LiteLLMCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-pioneer-litellm",
        "source": "PioneerFund",
        "target": "LiteLLMCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-meta-llama-stack",
        "source": "MetaCompany",
        "target": "llama-stack",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-meta-purple-llama",
        "source": "MetaCompany",
        "target": "PurpleLlama",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-purple-llama-security",
        "source": "PurpleLlama",
        "target": "LLMSecurity",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-mistral-agents-api",
        "source": "MistralAI",
        "target": "MistralAgentsAPI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-mistral-agents-api-use-case",
        "source": "MistralAgentsAPI",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-mistral-le-chat",
        "source": "MistralAI",
        "target": "LeChat",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-mistral-mistral-code",
        "source": "MistralAI",
        "target": "MistralCode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-mistral-code-use-case",
        "source": "MistralCode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-mistral-mistral-api",
        "source": "MistralAI",
        "target": "MistralAPI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-mistral-use-case",
        "source": "MistralAPI",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-openai-api",
        "source": "openai",
        "target": "OpenAI-API",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-anthropic-api",
        "source": "Anthropic",
        "target": "AnthropicAPI",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-openai-api-use-case",
        "source": "OpenAI-API",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-anthropic-api-use-case",
        "source": "AnthropicAPI",
        "target": "ModelServing",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-glean-company-glean",
        "source": "GleanCompany",
        "target": "Glean",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-glean-use-case",
        "source": "Glean",
        "target": "KnowledgeManagement",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-glean-use-case-2",
        "source": "Glean",
        "target": "Automation",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-sequoia-glean",
        "source": "Sequoia",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-altimeter-glean",
        "source": "Altimeter",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-kleiner-glean",
        "source": "KleinerPerkins",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-general-catalyst-glean",
        "source": "GeneralCatalyst",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-WellingtonManagement-glean",
        "source": "WellingtonManagement",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-KhoslaVentures-glean",
        "source": "KhoslaVentures",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-BicycleCapital-glean",
        "source": "BicycleCapital",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-GeodesicCapital-glean",
        "source": "GeodesicCapital",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-ArchermanCapital-glean",
        "source": "ArchermanCapital",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-CapitalOneVentures-glean",
        "source": "CapitalOneVentures",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-CitiVentures-glean",
        "source": "CitiVentures",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-Coatue-glean",
        "source": "Coatue",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-DSTGlobal-glean",
        "source": "DSTGlobal",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-Iconiq-glean",
        "source": "Iconiq",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-IVP-glean",
        "source": "IVP",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-LatitudeCapital-glean",
        "source": "LatitudeCapital",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-Lightspeed-glean",
        "source": "Lightspeed",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-SapphireVentures-glean",
        "source": "SapphireVentures",
        "target": "GleanCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-vectara-framework",
        "source": "vectara-agentic",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-chatgpt-llm-client",
        "source": "ChatGPT",
        "target": "LLMClient",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-chatgpt-MCP",
        "source": "ChatGPT",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-microsoft-openai",
        "source": "Microsoft",
        "target": "openai",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-perplexity-product",
        "source": "PerplexityAI",
        "target": "Perplexity",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-perplexity-use-case",
        "source": "Perplexity",
        "target": "AISearch",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-liner-use-case",
        "source": "Liner",
        "target": "AISearch",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-google-ai-search-use-case",
        "source": "GoogleAIMode",
        "target": "AISearch",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-google-ai-search",
        "source": "Google",
        "target": "GoogleAIMode",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-liner-company-product",
        "source": "LinerCompany",
        "target": "Liner",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-chatdev-openbmb",
        "source": "OpenBMB",
        "target": "ChatDev",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-athenic-company",
        "source": "AthenicAICompany",
        "target": "Athenic",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-athenic-use-case",
        "source": "Athenic",
        "target": "DataAnalysis",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-bmw-athenic",
        "source": "BMWiVentures",
        "target": "AthenicAICompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-OpenMCP-MCP",
        "source": "OpenMCP",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "e-MetaMCP-MCP",
        "source": "MetaMCP",
        "target": "MCP",
        "label": "PROXY"
      }
    },
    {
      "data": {
        "id": "e-Waystation-MCP",
        "source": "Waystation",
        "target": "MCP",
        "label": "PROXY"
      }
    },
    {
      "data": {
        "id": "e-mcp-access-point-MCP",
        "source": "mcp-access-point",
        "target": "MCP",
        "label": "PROXY"
      }
    },
    {
      "data": {
        "id": "e-MindsDBCompany",
        "source": "MindsDBCompany",
        "target": "mindsdb",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-mindsdb-mcp",
        "source": "mindsdb",
        "target": "MCP",
        "label": "PROXY"
      }
    },
    {
      "data": {
        "id": "e-pipedream-company-mcp",
        "source": "PipedreamCompany",
        "target": "pipedream-mcp",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-pipedream-company-connect",
        "source": "PipedreamCompany",
        "target": "pipedream-connect",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-pipedream-mcp",
        "source": "pipedream-mcp",
        "target": "MCP",
        "label": "PROXY"
      }
    },
    {
      "data": {
        "id": "e-zep-company-graphiti",
        "source": "ZepCompany",
        "target": "Graphiti",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-YCombinator-ZepCompany",
        "source": "YCombinator",
        "target": "ZepCompany",
        "label": "INVESTED_IN"
      }
    },
    {
      "data": {
        "id": "e-graphiti-use-case",
        "source": "Graphiti",
        "target": "AgentInfrastructure",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-langchain-open-agent",
        "source": "LangChainCompany",
        "target": "OpenAgentPlatform",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-open-agent-mcp",
        "source": "OpenAgentPlatform",
        "target": "MCP",
        "label": "CLIENT"
      }
    },
    {
      "data": {
        "id": "e-open-agent-use-case",
        "source": "OpenAgentPlatform",
        "target": "AgentPlatform",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-langtrace-observability",
        "source": "Langtrace",
        "target": "Observability",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-langtrace-company",
        "source": "LangtraceAICompany",
        "target": "Langtrace",
        "label": "DEVELOPED"
      }
    },
    {
      "data": {
        "id": "e-pinecone-use-case",
        "source": "pinecone",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-milvus-use-case",
        "source": "milvus",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-weaviate-use-case",
        "source": "weaviate",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-qdrant-use-case",
        "source": "qdrant",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-chroma-use-case",
        "source": "chroma",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-faiss-use-case",
        "source": "faiss",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-vespa-use-case",
        "source": "vespa",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-pgvector-use-case",
        "source": "pgvector",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-elasticsearch-use-case",
        "source": "elasticsearch",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-opensearch-use-case",
        "source": "opensearch",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-vald-use-case",
        "source": "vald",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-marqo-use-case",
        "source": "marqo",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-redis-use-case",
        "source": "redis",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-typesense-use-case",
        "source": "typesense",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-vectordb-use-case",
        "source": "vectorchord",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-lance-use-case",
        "source": "lance",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-annoy-use-case",
        "source": "annoy",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-nmslib-use-case",
        "source": "nmslib",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-hnsw-use-case",
        "source": "hnsw",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-docarray-use-case",
        "source": "docarray",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-vectorize-use-case",
        "source": "vectorize",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-zilliz-use-case",
        "source": "zilliz",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-singlestore-use-case",
        "source": "singlestore",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-clickhouse-use-case",
        "source": "clickhouse",
        "target": "VectorDB",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "e-pydanticai-use-case",
        "source": "PydanticAI",
        "target": "AgentFramework",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-julien040-anyquery-to-mcp",
        "source": "julien040-anyquery",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-metatool-ai-metatool-app-to-mcp",
        "source": "metatool-ai-metatool-app",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-mindsdb-mindsdb-to-mcp",
        "source": "mindsdb-mindsdb",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-glenngillen-mcpmcp-server-to-mcp",
        "source": "glenngillen-mcpmcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-wegotdocs-open-mcp-to-mcp",
        "source": "wegotdocs-open-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pipedreamhq-pipedream-to-mcp",
        "source": "pipedreamhq-pipedream",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-veritenik-pluggedin-mcp-proxy-to-mcp",
        "source": "veritenik-pluggedin-mcp-proxy",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-tigranbs-mcgravity-to-mcp",
        "source": "tigranbs-mcgravity",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-waystation-ai-mcp-to-mcp",
        "source": "waystation-ai-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-sxhxliang-mcp-access-point-to-mcp",
        "source": "sxhxliang-mcp-access-point",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-hamflx-imagen3-mcp-to-mcp",
        "source": "hamflx-imagen3-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-surescaleai-openai-gpt-image-mcp-to-mcp",
        "source": "surescaleai-openai-gpt-image-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xspadex-bilibili-mcp-to-mcp",
        "source": "xspadex-bilibili-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-34892002-bilibili-mcp-js-to-mcp",
        "source": "34892002-bilibili-mcp-js",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-aircodelabs-grasp-to-mcp",
        "source": "aircodelabs-grasp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-automatalabs-mcp-server-playwright-to-mcp",
        "source": "automatalabs-mcp-server-playwright",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-blackwhite084-playwright-plus-python-mcp-to-mcp",
        "source": "blackwhite084-playwright-plus-python-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-browserbase-mcp-server-browserbase-to-mcp",
        "source": "browserbase-mcp-server-browserbase",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-browsermcp-mcp-to-mcp",
        "source": "browsermcp-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-co-browser-browser-use-mcp-server-to-mcp",
        "source": "co-browser-browser-use-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-executeautomation-playwright-mcp-server-to-mcp",
        "source": "executeautomation-playwright-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-eyalzh-browser-control-mcp-to-mcp",
        "source": "eyalzh-browser-control-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-fradser-mcp-server-apple-reminders-to-mcp",
        "source": "fradser-mcp-server-apple-reminders",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-getrupt-ashra-mcp-to-mcp",
        "source": "getrupt-ashra-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kimtaeyoon83-mcp-server-youtube-transcript-to-mcp",
        "source": "kimtaeyoon83-mcp-server-youtube-transcript",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kimtth-mcp-aoai-web-browsing-to-mcp",
        "source": "kimtth-mcp-aoai-web-browsing",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-microsoft-playwright-mcp-to-mcp",
        "source": "microsoft-playwright-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-puppeteer-to-mcp",
        "source": "modelcontextprotocol-server-puppeteer",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ndthanhdev-mcp-browser-kit-to-mcp",
        "source": "ndthanhdev-mcp-browser-kit",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pskill9-web-search-to-mcp",
        "source": "pskill9-web-search",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-recursechat-mcp-server-apple-shortcuts-to-mcp",
        "source": "recursechat-mcp-server-apple-shortcuts",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xspadex-bilibili-mcp-to-computeruse",
        "source": "xspadex-bilibili-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-34892002-bilibili-mcp-js-to-computeruse",
        "source": "34892002-bilibili-mcp-js",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-aircodelabs-grasp-to-computeruse",
        "source": "aircodelabs-grasp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-automatalabs-mcp-server-playwright-to-computeruse",
        "source": "automatalabs-mcp-server-playwright",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-blackwhite084-playwright-plus-python-mcp-to-computeruse",
        "source": "blackwhite084-playwright-plus-python-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-browserbase-mcp-server-browserbase-to-computeruse",
        "source": "browserbase-mcp-server-browserbase",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-browsermcp-mcp-to-computeruse",
        "source": "browsermcp-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-co-browser-browser-use-mcp-server-to-computeruse",
        "source": "co-browser-browser-use-mcp-server",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-executeautomation-playwright-mcp-server-to-computeruse",
        "source": "executeautomation-playwright-mcp-server",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-eyalzh-browser-control-mcp-to-computeruse",
        "source": "eyalzh-browser-control-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-fradser-mcp-server-apple-reminders-to-computeruse",
        "source": "fradser-mcp-server-apple-reminders",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-getrupt-ashra-mcp-to-computeruse",
        "source": "getrupt-ashra-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-kimtaeyoon83-mcp-server-youtube-transcript-to-computeruse",
        "source": "kimtaeyoon83-mcp-server-youtube-transcript",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-kimtth-mcp-aoai-web-browsing-to-computeruse",
        "source": "kimtth-mcp-aoai-web-browsing",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-microsoft-playwright-mcp-to-computeruse",
        "source": "microsoft-playwright-mcp",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-puppeteer-to-computeruse",
        "source": "modelcontextprotocol-server-puppeteer",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-ndthanhdev-mcp-browser-kit-to-computeruse",
        "source": "ndthanhdev-mcp-browser-kit",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-pskill9-web-search-to-computeruse",
        "source": "pskill9-web-search",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-recursechat-mcp-server-apple-shortcuts-to-computeruse",
        "source": "recursechat-mcp-server-apple-shortcuts",
        "target": "ComputerUse",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-oraios-serena-to-mcp",
        "source": "oraios-serena",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ezyang-codemcp-to-mcp",
        "source": "ezyang-codemcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-doggybee-mcp-server-leetcode-to-mcp",
        "source": "doggybee-mcp-server-leetcode",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-jinzcdev-leetcode-mcp-server-to-mcp",
        "source": "jinzcdev-leetcode-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-juehang-vscode-mcp-server-to-mcp",
        "source": "juehang-vscode-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-micl2e2-code-to-tree-to-mcp",
        "source": "micl2e2-code-to-tree",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-oraios-serena-to-aicoding",
        "source": "oraios-serena",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-ezyang-codemcp-to-aicoding",
        "source": "ezyang-codemcp",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-doggybee-mcp-server-leetcode-to-aicoding",
        "source": "doggybee-mcp-server-leetcode",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-jinzcdev-leetcode-mcp-server-to-aicoding",
        "source": "jinzcdev-leetcode-mcp-server",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-juehang-vscode-mcp-server-to-aicoding",
        "source": "juehang-vscode-mcp-server",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-micl2e2-code-to-tree-to-aicoding",
        "source": "micl2e2-code-to-tree",
        "target": "AICoding",
        "label": "IN_AREA"
      }
    }
  ]
}