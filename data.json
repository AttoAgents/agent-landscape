{
    "nodes": [
        {
            "data": {
                "id": "continue.dev",
                "label": "Continue",
                "type": "Product",
                "properties": {
                    "url": "https://www.continue.dev/",
                    "github": "https://github.com/continuedev/continue",
                    "description": "Continue enables developers to create, share, and use custom AI code assistants with our open-source VS Code and JetBrains extensions and hub of models, rules, prompts, docs, and other building blocks."
                }
            }
        },
        {
            "data": {
                "id": "witsyai",
                "label": "Witsy",
                "type": "Product",
                "properties": {
                    "url": "https://www.witsyai.com/",
                    "github": "https://github.com/nbonamy/witsy",
                    "description": "Witsy: desktop AI assistant / universal MCP client."
                }
            }
        },
        {
            "data": {
                "id": "trae",
                "label": "Trae",
                "type": "Product",
                "properties": {
                    "url": "https://www.trae.ai/"
                }
            }
        },
        {
            "data": {
                "id": "cline",
                "label": "Cline",
                "type": "Product",
                "properties": {
                    "url": "https://cline.bot/"
                }
            }
        },
        {
            "data": {
                "id": "databutton",
                "label": "Databutton",
                "type": "Product",
                "properties": {
                    "url": "https://databutton.com/"
                }
            }
        },
        {
            "data": {
                "id": "base44",
                "label": "Base44",
                "type": "Product",
                "properties": {
                    "url": "https://base44.com/",
                    "description": "The first all-in-one AI platform to easily build fully functioning apps - without coding."
                }
            }
        },
        {
            "data": {
                "id": "cursor",
                "label": "Cursor",
                "type": "Product",
                "properties": {
                    "url": "https://cursor.com/"
                }
            }
        },
        {
            "data": {
                "id": "Windsurf",
                "label": "Windsurf",
                "type": "Product",
                "properties": {
                    "url": "https://windsurf.com/"
                }
            }
        },
        {
            "data": {
                "id": "bolt",
                "label": "Bolt",
                "type": "Product",
                "properties": {
                    "url": "https://bolt.new"
                }
            }
        },
        {
            "data": {
                "id": "lovable",
                "label": "Lovable",
                "type": "Product",
                "properties": {
                    "url": "https://lovable.dev/"
                }
            }
        },
        {
            "data": {
                "id": "v0",
                "label": "v0",
                "type": "Product",
                "properties": {
                    "url": "https://v0.dev/"
                }
            }
        },
        {
            "data": {
                "id": "augmentcode",
                "label": "Augment Code",
                "type": "Product",
                "properties": {
                    "url": "https://www.augmentcode.com/"
                }
            }
        },
        {
            "data": {
                "id": "Mocha",
                "label": "Mocha",
                "type": "Product",
                "properties": {
                    "url": "https://getmocha.com/"
                }
            }
        },
        {
            "data": {
                "id": "GithubCopilot",
                "label": "GitHub Copilot",
                "type": "Product",
                "properties": {
                    "url": "https://github.com/features/copilot"
                }
            }
        },
        {
            "data": {
                "id": "RorkApp",
                "label": "Rork",
                "type": "Product",
                "properties": {
                    "url": "https://rork.com/"
                }
            }
        },
        {
            "data": {
                "id": "FirebaseStudio",
                "label": "Firebase Studio",
                "type": "Product",
                "properties": {
                    "url": "https://firebase.studio/"
                }
            }
        },
        {
            "data": {
                "id": "GrokStudio",
                "label": "Grok Studio",
                "type": "Product",
                "properties": {
                    "url": "https://grokai.studio/"
                }
            }
        },
        {
            "data": {
                "id": "CanvaCode",
                "label": "Canva Code",
                "type": "Product",
                "properties": {
                    "url": "https://www.canva.com/ai-code-generator/"
                }
            }
        },
        {
            "data": {
                "id": "a0dev",
                "label": "a0.dev",
                "type": "Product",
                "properties": {
                    "url": "https://a0.dev/"
                }
            }
        },
        {
            "data": {
                "id": "AutoGPT",
                "label": "AutoGPT",
                "type": "Product",
                "properties": {
                    "url": ""
                }
            }
        },
        {
            "data": {
                "id": "LangChain",
                "label": "LangChain",
                "type": "Product",
                "properties": {
                    "url": "https://www.langchain.com/",
                    "github": "https://github.com/langchain-ai/langchain",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "dify",
                "label": "Dify",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/langgenius/dify",
                    "license": "Other"
                }
            }
        },
        {
            "data": {
                "id": "screenshot-to-code",
                "label": "screenshot-to-code",
                "type": "Product",
                "properties": {
                    "url": "https://screenshottocode.com/",
                    "github": "https://github.com/abi/screenshot-to-code",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "open-interpreter",
                "label": "open-interpreter",
                "type": "Product",
                "properties": {
                    "url": "https://www.openinterpreter.com/",
                    "github": "https://github.com/OpenInterpreter/open-interpreter",
                    "license": "AGPL-3.0 License"
                }
            }
        },
        {
            "data": {
                "id": "MetaGPT",
                "label": "MetaGPT",
                "type": "Product",
                "properties": {
                    "url": "https://mgx.dev/",
                    "github": "https://github.com/FoundationAgents/MetaGPT"
                }
            }
        },
        {
            "data": {
                "id": "OpenHands",
                "label": "OpenHands",
                "type": "Product",
                "properties": {
                    "url": "https://www.all-hands.dev/",
                    "github": "https://github.com/All-Hands-AI/OpenHands",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AutoGen",
                "label": "AutoGen",
                "type": "Product",
                "properties": {
                    "url": "https://microsoft.github.io/autogen/stable/",
                    "github": "https://github.com/microsoft/autogen",
                    "license": "MIT License and CC-BY-4.0"
                }
            }
        },
        {
            "data": {
                "id": "llama-index",
                "label": "Llama Index",
                "type": "Product",
                "properties": {
                    "url": "https://www.llamaindex.ai/",
                    "github": "https://github.com/run-llama/llama_index",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "colossal-ai",
                "label": "ColossalAI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/hpcaitech/ColossalAI"
                }
            }
        },
        {
            "data": {
                "id": "Flowise",
                "label": "Flowise",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/FlowiseAI/Flowise",
                    "license": "Apache-2.0 License"
                }
            }
        },
        {
            "data": {
                "id": "AgentGPT",
                "label": "AgentGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/reworkd/AgentGPT",
                    "license": "GPL3"
                }
            }
        },
        {
            "data": {
                "id": "aider",
                "label": "aider",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Aider-AI/aider",
                    "license": "Apache-2.0 License"
                }
            }
        },
        {
            "data": {
                "id": "CrewAI",
                "label": "CrewAI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/joaomdmoura/crewai"
                }
            }
        },
        {
            "data": {
                "id": "ChatDev",
                "label": "ChatDev",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/OpenBMB/ChatDev"
                }
            }
        },
        {
            "data": {
                "id": "phidata",
                "label": "phidata",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/phidatahq/phidata",
                    "license": "MPL2"
                }
            }
        },
        {
            "data": {
                "id": "composio",
                "label": "composio",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/ComposioHQ/composio",
                    "license": "Other"
                }
            }
        },
        {
            "data": {
                "id": "SemanticKernel",
                "label": "Semantic Kernel",
                "type": "Product",
                "properties": {
                    "url": "https://learn.microsoft.com/en-us/semantic-kernel/",
                    "github": "https://github.com/microsoft/semantic-kernel",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "storm",
                "label": "storm",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/stanford-oval/storm",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "dspy",
                "label": "DsPy",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/stanfordnlp/dspy",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "gpt-researcher",
                "label": "GPT Researcher",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/assafelovic/gpt-researcher",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Haystack",
                "label": "Haystack",
                "type": "Product",
                "properties": {
                    "url": "https://haystack.deepset.ai/",
                    "github": "https://github.com/deepset-ai/haystack",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "vanna",
                "label": "vanna",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/vanna-ai/vanna",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "letta",
                "label": "letta",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/letta-ai/letta",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "DB-GPT",
                "label": "DB-GPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/csunny/DB-GPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "eliza",
                "label": "eliza",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/elizaOS/eliza",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "swe-agent",
                "label": "swe-agent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/princeton-nlp/swe-agent",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "botpress",
                "label": "botpress",
                "type": "Product",
                "properties": {
                    "url": "https://botpress.com/",
                    "github": "https://github.com/botpress/botpress",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "plandex",
                "label": "plandex",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/plandex-ai/plandex",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "LangGraph",
                "label": "LangGraph",
                "type": "Product",
                "properties": {
                    "url": "https://www.langchain.com/langgraph",
                    "github": "https://github.com/langchain-ai/langgraph",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AI-Scientist",
                "label": "AI-Scientist",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/SakanaAI/AI-Scientist",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "e2b",
                "label": "e2b",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/e2b-dev/e2b",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "WrenAI",
                "label": "WrenAI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Canner/WrenAI",
                    "license": "AGPL-3"
                }
            }
        },
        {
            "data": {
                "id": "agentscope",
                "label": "agentscope",
                "type": "Product",
                "properties": {
                    "url": "https://doc.agentscope.io/",
                    "github": "https://github.com/modelscope/agentscope",
                    "license": "Apache License 2.0",
                    "description": "Start building LLM-empowered multi-agent applications in an easier way."
                }
            }
        },
        {
            "data": {
                "id": "AlibabaCompany",
                "label": "Alibaba",
                "type": "Company",
                "properties": {
                    "url": "",
                    "github": "",
                    "license": "",
                    "description": ""
                }
            }
        },

        {
            "data": {
                "id": "agent-zero",
                "label": "Agent Zero",
                "type": "Product",
                "properties": {
                    "url": "https://agent-zero.ai/",
                    "github": "https://github.com/frdel/agent-zero",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "superagent",
                "label": "SuperAgent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/homanp/superagent",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "TaskWeaver",
                "label": "TaskWeaver",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/microsoft/TaskWeaver",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "multi-agent-orchestrator",
                "label": "multi-agent-orchestrator",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/awslabs/multi-agent-orchestrator",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "vision-agent",
                "label": "vision-agent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/landing-ai/vision-agent",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "gptme",
                "label": "gptme",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/ErikBjare/gptme",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "agency-swarm",
                "label": "agency-swarm",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/VRSEN/agency-swarm",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "cody",
                "label": "cody",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/sourcegraph/cody",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "langdroid",
                "label": "langdroid",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/langroid/langroid",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AGiXT",
                "label": "AGiXT",
                "type": "Product",
                "properties": {
                    "url": "https://agixt.com/",
                    "github": "https://github.com/Josh-XT/AGiXT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "lagent",
                "label": "lagent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/InternLM/lagent",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "DemoGPT",
                "label": "DemoGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/melih-unsal/DemoGPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "uAgents",
                "label": "uAgents",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/fetchai/uAgents",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Adala",
                "label": "Adala",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/HumanSignal/Adala",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "AIlice",
                "label": "AIlice",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/myshell-ai/AIlice",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "dust",
                "label": "dust",
                "type": "Product",
                "properties": {
                    "url": "https://dust.tt/",
                    "github": "https://github.com/dust-tt/dust",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "nous",
                "label": "nous",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/TrafficGuard/nous",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "aideml",
                "label": "aideml",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/WecoAI/aideml",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AgentForge",
                "label": "Agent Forge",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/DataBassGit/AgentForge",
                    "license": "GPL3"
                }
            }
        },
        {
            "data": {
                "id": "data-to-paper",
                "label": "data-to-paper",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Technion-Kishony-lab/data-to-paper",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "pearai-app",
                "label": "pearai-app",
                "type": "Product",
                "properties": {
                    "url": "https://trypear.ai/",
                    "github": "https://github.com/trypear/pearai-app",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "fastagency",
                "label": "fastagency",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/airtai/fastagency",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "taskgen",
                "label": "taskgen",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/simbianai/taskgen",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "agentjo",
                "label": "agentjo",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/tanchongmin/agentjo",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Manus",
                "label": "Manus",
                "type": "Product",
                "properties": {
                    "url": "https://manus.im/"
                }
            }
        },
        {
            "data": {
                "id": "Devin",
                "label": "Devin",
                "type": "Product",
                "properties": {
                    "url": "https://devin.ai/"
                }
            }
        },
        {
            "data": {
                "id": "OpenManus",
                "label": "OpenManus",
                "type": "Product",
                "properties": {
                    "url": ""
                }
            }
        },
        {
            "data": {
                "id": "browser-use",
                "label": "browser-use",
                "type": "Product",
                "properties": {
                    "url": ""
                }
            }
        },
        {
            "data": {
                "id": "Goose",
                "label": "Goose",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/block/goose"
                }
            }
        },
        {
            "data": {
                "id": "Rowboat",
                "label": "Rowboat",
                "type": "Product",
                "properties": {
                    "url": "https://www.rowboatlabs.com/",
                    "github": "https://github.com/rowboatlabs/rowboat"
                }
            }
        },
        {
            "data": {
                "id": "Ollama",
                "label": "Ollama",
                "type": "Product",
                "properties": {
                    "url": "https://ollama.com/",
                    "github": "https://github.com/ollama/ollama",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "LangFlow",
                "label": "LangFlow",
                "type": "Product",
                "properties": {
                    "url": "https://www.langflow.org/",
                    "github": "https://github.com/langflow-ai/langflow",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "vLLM",
                "label": "vLLM",
                "type": "Product",
                "properties": {
                    "url": "https://docs.vllm.ai/",
                    "github": "https://github.com/vllm-project/vllm"
                },
                "license": "Apache-2.0 License"
            }
        },
        {
            "data": {
                "id": "DockerModelRunner",
                "label": "Docker Model Runner",
                "type": "Product",
                "properties": {
                    "url": "https://www.docker.com/"
                }
            }
        },
        {
            "data": {
                "id": "LlamaCpp",
                "label": "llama.cpp",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/ggml-org/llama.cpp",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "BitnetCpp",
                "label": "bitnet.cpp",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/microsoft/BitNet",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "ChatWise",
                "label": "ChatWise",
                "type": "Product",
                "properties": {
                    "url": "https://chatwise.app/",
                    "github": ""
                }
            }
        },
        {
            "data": {
                "id": "VisualStudioCode",
                "label": "Visual Studio Code",
                "type": "Product",
                "properties": {
                    "url": "https://code.visualstudio.com/",
                    "github": "https://github.com/microsoft/vscode",
                    "description": "Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages and runtimes (such as C++, C#, Java, Python, PHP, Go, .NET).",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "TransformersAgents",
                "label": "Transformers Agents",
                "type": "Product",
                "properties": {
                    "url": "https://huggingface.co/docs/transformers/agents",
                    "github": "https://github.com/huggingface/transformers",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Deepsite",
                "label": "Deepsite",
                "type": "Product",
                "properties": {
                    "url": "https://deepsite.site/",
                    "github": ""
                }
            }
        },
        {
            "data": {
                "id": "Smolagents",
                "label": "Smolagents",
                "type": "Product",
                "properties": {
                    "url": "https://huggingface.co/docs/smolagents/index",
                    "github": "https://github.com/huggingface/smolagents",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Deepchat",
                "label": "Deepchat",
                "type": "Product",
                "properties": {
                    "url": "https://deepchat.dev/",
                    "github": "https://github.com/OvidijusParsiunas/deep-chat"
                }
            }
        },
        {
            "data": {
                "id": "YGUI",
                "label": "Y GUI",
                "type": "Product",
                "properties": {
                    "url": "https://yovy.app",
                    "github": "https://github.com/luohy15/y-gui",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "YCLI",
                "label": "Y CLI",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/luohy15/y-cli",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "CherryStudio",
                "label": "Cherry Studio",
                "type": "Product",
                "properties": {
                    "url": "https://www.cherry-ai.com/",
                    "github": "https://github.com/CherryHQ/cherry-studio",
                    "license": "Custom"
                }
            }
        },
        {
            "data": {
                "id": "HyperChat",
                "label": "HyperChat",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/BigSweetPotatoStudio/HyperChat",
                    "license": "Apache License 2.0 + Custom Clauses"
                }
            }
        },
        {
            "data": {
                "id": "RooCode",
                "label": "Roo Code",
                "type": "Product",
                "properties": {
                    "url": "https://roocode.com/",
                    "github": "https://github.com/RooCodeInc/Roo-Code",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "5ire",
                "label": "5ire",
                "type": "Product",
                "properties": {
                    "url": "https://5ire.app/",
                    "github": "https://github.com/nanbingxyz/5ire",
                    "license": "Apache License 2.0 with custom clauses"
                }
            }
        },
        {
            "data": {
                "id": "Lutra",
                "label": "Lutra",
                "type": "Product",
                "properties": {
                    "url": "https://lutra.ai/"
                }
            }
        },
        {
            "data": {
                "id": "Refact",
                "label": "Refact.ai",
                "type": "Product",
                "properties": {
                    "url": "https://refact.ai/",
                    "github": "https://github.com/smallcloudai/refact",
                    "license": "BSD-3-Clause License"
                }
            }
        },
        {
            "data": {
                "id": "Zed",
                "label": "Zed",
                "type": "Product",
                "properties": {
                    "url": "https://zed.dev/",
                    "github": "https://github.com/zed-industries/zed"
                }
            }
        },
        {
            "data": {
                "id": "MCPConnect",
                "label": "MCP Connect",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/EvalsOne/mcp-connect",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "ChatMCP",
                "label": "ChatMCP",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/daodao97/chatmcp",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "ClaudeCode",
                "label": "Claude Code",
                "type": "Product",
                "properties": {
                    "url": "https://www.anthropic.com/claude-code"
                }
            }
        },
        {
            "data": {
                "id": "ChatGPT",
                "label": "ChatGPT",
                "type": "Product",
                "properties": {
                    "url": "https://chatgpt.com/",
                    "license": "Proprietary"
                }
            }
        },
        {
            "data": {
                "id": "Claude",
                "label": "Claude",
                "type": "Product",
                "properties": {
                    "url": "https://claude.ai/",
                    "license": "Proprietary"
                }
            }
        },
        {
            "data": {
                "id": "Langfuse",
                "label": "Langfuse",
                "type": "Product",
                "properties": {
                    "url": "https://langfuse.com/",
                    "github": "https://github.com/langfuse/langfuse",
                    "license": "MIT Expat License with custom clauses"
                }
            }
        },
        {
            "data": {
                "id": "LangSmith",
                "label": "LangSmith",
                "type": "Product",
                "properties": {
                    "url": "https://smith.langchain.com/",
                    "github": "https://github.com/langchain-ai/langsmith-sdk",
                    "license": "Proprietary",
                    "description": "LangSmith is a unified observability & evals platform where teams can debug, test, and monitor AI app performance — whether building with LangChain or not."
                }
            }
        },
        {
            "data": {
                "id": "vectara-agentic",
                "label": "vectara-agentic",
                "type": "Product",
                "properties": {
                    "url": "https://www.vectara.com/",
                    "github": "https://github.com/vectara/py-vectara-agentic",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Clark",
                "label": "Clark",
                "type": "Product",
                "properties": {
                    "url": "https://www.superblocks.com/",
                    "about": "AI Agent for building internal enterprise apps."
                }
            }
        },
        {
            "data": {
                "id": "ADK",
                "label": "Agent Development Kit",
                "type": "Product",
                "properties": {
                    "url": "https://google.github.io/adk-docs/",
                    "github": "https://github.com/google/adk-python",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "HRunner",
                "label": "HRunner",
                "type": "Product",
                "properties": {
                    "url": "https://runner.hcompany.ai/"
                }
            }
        },
        {
            "data": {
                "id": "n8n",
                "label": "n8n",
                "type": "Product",
                "properties": {
                    "url": "https://n8n.io/",
                    "github": "https://github.com/n8n-io/n8n",
                    "license": "Sustainable Use License"
                }
            }
        },
        {
            "data": {
                "id": "Rivet",
                "label": "Rivet",
                "type": "Product",
                "properties": {
                    "url": "https://rivet.ironcladapp.com/",
                    "github": "https://github.com/Ironclad/rivet",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Jurist",
                "label": "Jurist",
                "type": "Product",
                "properties": {
                    "url": "https://ironcladapp.com/product/jurist/"
                }
            }
        },
        {
            "data": {
                "id": "IroncladCLM",
                "label": "Ironclad CLM",
                "type": "Product",
                "properties": {
                    "url": "https://ironcladapp.com/product/"
                }
            }
        },
        {
            "data": {
                "id": "SuperAGI",
                "label": "SuperAGI",
                "type": "Product",
                "properties": {
                    "url": "https://superagi.com/"
                }
            }
        },
        {
            "data": {
                "id": "UFO",
                "label": "UFO",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/microsoft/UFO",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "LiveKit",
                "label": "LiveKit Agents",
                "type": "Product",
                "properties": {
                    "url": "https://livekit.io/",
                    "github": "https://github.com/livekit/agents",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "llm_agents",
                "label": "llm_agents",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/mpaepper/llm_agents",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AgentFlow",
                "label": "AgentFlow",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/simonmesmith/agentflow",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "llama-stack-apps",
                "label": "Llama Stack Apps",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/meta-llama/llama-stack-apps",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "llama-stack",
                "label": "Llama Stack",
                "type": "Product",
                "properties": {
                    "url": "https://llama-stack.readthedocs.io/",
                    "github": "https://github.com/meta-llama/llama-stack",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AgentVerse",
                "label": "AgentVerse",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/openbmb/agentverse",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "MaestroFramework",
                "label": "Maestro",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Doriandarko/maestro",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Upsonic",
                "label": "Upsonic",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/upsonic/upsonic",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Mastra",
                "label": "Mastra",
                "type": "Product",
                "properties": {
                    "url": "https://mastra.ai/",
                    "github": "https://github.com/mastra-ai/mastra",
                    "license": "Elastic License 2.0 (ELv2)",
                    "description": "The TypeScript AI agent framework. Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama."
                }
            }
        },
        {
            "data": {
                "id": "PortiaAI",
                "label": "Portia AI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/portiaAI/portia-sdk-python",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Swarm",
                "label": "Swarm",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/openai/swarm",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "GPTPilot",
                "label": "GPT Pilot",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Pythagora-io/gpt-pilot",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Devika",
                "label": "Devika",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/stitionai/devika",
                    "license": "MIT License",
                    "description": "Devika is an Agentic AI Software Engineer that can understand high-level human instructions, break them down into steps, research relevant information, and write code to achieve the given objective. Devika aims to be a competitive open-source alternative to Devin by Cognition AI."
                }
            }
        },
        {
            "data": {
                "id": "RepoAgent",
                "label": "RepoAgent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/OpenBMB/RepoAgent",
                    "license": "Apache License 2.0",
                    "description": "An LLM-powered repository agent designed to assist developers and teams in generating documentation and understanding repositories quickly."
                }
            }
        },
        {
            "data": {
                "id": "Codel",
                "label": "Codel",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/semanser/codel",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "MicroAgent",
                "label": "MicroAgent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/aymenfurter/microagents",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "AgentRun",
                "label": "AgentRun",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Jonathan-Adly/AgentRun",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "ClaudeEngineer",
                "label": "Claude Engineer",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Doriandarko/claude-engineer",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "BlockAGI",
                "label": "BlockAGI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/blockpipe/blockagi",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "LLocalSearch",
                "label": "LLocalSearch",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/nilsherzig/LLocalSearch",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "RasaGPT",
                "label": "RasaGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/paulpierre/RasaGPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "BabyAGI-UI",
                "label": "BabyAGI UI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/miurla/babyagi-ui",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "ix",
                "label": "ix",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/kreneskyp/ix",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "DuetGPT",
                "label": "DuetGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/kristoferlund/duet-gpt",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Memgpt",
                "label": "Memgpt",
                "type": "Product",
                "properties": {
                    "url": "https://memgpt.ai",
                    "github": "https://github.com/cpacker/memgpt",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "CamelAutoGPT",
                "label": "Camel-AutoGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/SamurAIGPT/Camel-AutoGPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "SkyAGI",
                "label": "SkyAGI",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/litanlitudan/skyagi",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Voyager",
                "label": "Voyager",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/MineDojo/Voyager",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "PrivateGPT",
                "label": "Private GPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/imartinez/privateGPT",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "LocalGPT",
                "label": "Local GPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/PromtEngineer/localGPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "SecondBrainAgent",
                "label": "Second Brain AI Agent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/flepied/second-brain-agent",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "RestGPT",
                "label": "RestGPT",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Yifan-Song793/RestGPT",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "XAgent",
                "label": "XAgent",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/OpenBMB/XAgent",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "llama-agents",
                "label": "llama-agents",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/run-llama/llama-agents",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "AgentK",
                "label": "AgentK",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/mikekelly/AgentK",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "ADAS",
                "label": "ADAS",
                "type": "Product",
                "properties": {
                    "url": "https://www.shengranhu.com/ADAS/",
                    "github": "https://github.com/ShengranHu/ADAS",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Giselle",
                "label": "Giselle",
                "type": "Product",
                "properties": {
                    "url": "https://giselles.ai/",
                    "github": "https://github.com/giselles-ai/giselle",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Pipecat",
                "label": "Pipecat",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/pipecat-ai/pipecat",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "VoiceLab",
                "label": "Voice Lab",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/saharmor/voice-lab",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "OpenRAGEval",
                "label": "Open-RAG-Eval",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/vectara/open-rag-eval",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Codex",
                "label": "Codex",
                "type": "Product",
                "properties": {
                    "url": "https://openai.com/codex/",
                    "github": "https://github.com/openai/codex",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "openai-agents",
                "label": "OpenAI Agents SDK",
                "type": "Product",
                "properties": {
                    "url": "https://openai.github.io/openai-agents-python/",
                    "github": "https://github.com/openai/openai-agents-python",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "LiteLLM",
                "label": "LiteLLM",
                "type": "Product",
                "properties": {
                    "url": "https://www.litellm.ai/",
                    "github": "https://github.com/BerriAI/litellm",
                    "license": "MIT License with Enterprise Features"
                }
            }
        },
        {
            "data": {
                "id": "PurpleLlama",
                "label": "PurpleLlama",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "https://github.com/meta-llama/PurpleLlama",
                    "license": "LLAMA 3.2 COMMUNITY LICENSE"
                }
            }
        },
        {
            "data": {
                "id": "MistralAgentsAPI",
                "label": "Mistral Agents API",
                "type": "Product",
                "properties": {
                    "url": "https://mistral.ai/news/agents-api"
                }
            }
        },
        {
            "data": {
                "id": "LeChat",
                "label": "Le Chat",
                "type": "Product",
                "properties": {
                    "url": "https://chat.mistral.ai/"
                }
            }
        },
        {
            "data": {
                "id": "MistralCode",
                "label": "Mistral Code",
                "type": "Product",
                "properties": {
                    "url": "https://mistral.ai/products/mistral-code"
                }
            }
        },
        {
            "data": {
                "id": "MistralAPI",
                "label": "Mistral API",
                "type": "Product",
                "properties": {
                    "url": "https://docs.mistral.ai/api/"
                }
            }
        },
        {
            "data": {
                "id": "OpenAI-API",
                "label": "OpenAI API",
                "type": "Product",
                "properties": {
                    "url": "https://openai.com/api/"
                }
            }
        },
        {
            "data": {
                "id": "AnthropicAPI",
                "label": "Anthropic API",
                "type": "Product",
                "properties": {
                    "url": "https://www.anthropic.com/api"
                }
            }
        },
        {
            "data": {
                "id": "Glean",
                "label": "Glean",
                "type": "Product",
                "properties": {
                    "url": "https://www.glean.com/"
                }
            }
        },
        {
            "data": {
                "id": "Perplexity",
                "label": "Perplexity",
                "type": "Product",
                "properties": {
                    "url": "https://www.perplexity.ai/"
                }
            }
        },
        {
            "data": {
                "id": "Liner",
                "label": "Liner",
                "type": "Product",
                "properties": {
                    "url": "https://getliner.com/"
                }
            }
        },
        {
            "data": {
                "id": "GoogleAIMode",
                "label": "Google AI Mode in Search",
                "type": "Product",
                "properties": {
                    "url": "https://google.com/"
                }
            }
        },
        {
            "data": {
                "id": "Athenic",
                "label": "Athenic",
                "type": "Product",
                "properties": {
                    "url": "https://www.athenic.com/"
                }
            }
        },
        {
            "data": {
                "id": "Graphiti",
                "label": "Graphiti",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/getzep/graphiti",
                    "url": "https://help.getzep.com/graphiti/graphiti/overview",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "OpenAgentPlatform",
                "label": "Open Agent Platform",
                "type": "Product",
                "properties": {
                    "url": "https://docs.oap.langchain.com/",
                    "github": "https://github.com/langchain-ai/open-agent-platform",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Langtrace",
                "label": "Langtrace",
                "type": "Product",
                "properties": {
                    "url": "https://www.langtrace.ai/",
                    "github": "https://github.com/Scale3-Labs/langtrace",
                    "license": "AGPL-3.0 License"
                }
            }
        },
        {
            "data": {
                "id": "YCombinator",
                "label": "Y Combinator",
                "type": "Investor",
                "properties": {
                    "url": "https://www.ycombinator.com/"
                }
            }
        },
        {
            "data": {
                "id": "KleinerPerkins",
                "label": "Kleiner Perkins",
                "type": "Investor",
                "properties": {
                    "url": "https://www.kleinerperkins.com/"
                }
            }
        },
        {
            "data": {
                "id": "GeneralCatalyst",
                "label": "General Catalyst",
                "type": "Investor",
                "properties": {
                    "url": "https://www.generalcatalyst.com/"
                }
            }
        },
        {
            "data": {
                "id": "GreenOaks",
                "label": "Green Oaks",
                "type": "Investor",
                "properties": {
                    "url": "https://greenoaks.com/"
                }
            }
        },
        {
            "data": {
                "id": "FoundersFund",
                "label": "Founders Fund",
                "type": "Investor",
                "properties": {
                    "url": "https://foundersfund.com/"
                }
            }
        },
        {
            "data": {
                "id": "SparkCapital",
                "label": "Spark Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://www.sparkcapital.com/"
                }
            }
        },
        {
            "data": {
                "id": "Meritech",
                "label": "Meritech",
                "type": "Investor",
                "properties": {
                    "url": "https://www.meritechcapital.com/"
                }
            }
        },
        {
            "data": {
                "id": "UIPath",
                "label": "UI Path Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.uipath.com/blog/product-and-updates/introducing-uipath-ventures"
                }
            }
        },
        {
            "data": {
                "id": "Accel",
                "label": "Meritech",
                "type": "Investor",
                "properties": {
                    "url": "https://www.accel.com/"
                }
            }
        },
        {
            "data": {
                "id": "InsightPartners",
                "label": "Insight Partners",
                "type": "Investor",
                "properties": {
                    "url": "https://www.insightpartners.com/"
                }
            }
        },
        {
            "data": {
                "id": "CraftVentures",
                "label": "Craft Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.craftventures.com/"
                }
            }
        },
        {
            "data": {
                "id": "EarlGrey",
                "label": "Earl Grey",
                "type": "Investor",
                "properties": {
                    "url": "https://earlgrey.capital/"
                }
            }
        },
        {
            "data": {
                "id": "FirsthandVentures",
                "label": "Firsthand Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.firsthand.vc/"
                }
            }
        },
        {
            "data": {
                "id": "Newlands",
                "label": "Newlands",
                "type": "Investor",
                "properties": {
                    "url": "https://www.thenewlands.com/"
                }
            }
        },
        {
            "data": {
                "id": "KeaCapital",
                "label": "Kea Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://kae-capital.com/"
                }
            }
        },
        {
            "data": {
                "id": "Better",
                "label": "Better",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "Redpoint",
                "label": "Redpoint",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "Altimeter",
                "label": "Altimeter",
                "type": "Investor",
                "properties": {
                    "url": "https://www.altimeter.com/"
                }
            }
        },
        {
            "data": {
                "id": "Decibel",
                "label": "Decibel",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "Inovia",
                "label": "Inovia",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "PanacheVentures",
                "label": "Panache Ventures",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "RealVentures",
                "label": "Real Ventures",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "HikeVentures",
                "label": "Hike Ventures",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "OneWay",
                "label": "One Way",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "FondsInnovexport",
                "label": "Fonds Innovexport",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "BoxOne",
                "label": "BoxOne",
                "type": "Investor"
            }
        },
        {
            "data": {
                "id": "Sequoia",
                "label": "Sequoia Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://www.sequoiacap.com/"
                }
            }
        },
        {
            "data": {
                "id": "XYZ",
                "label": "XYZ Venture Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://xyz.vc/"
                }
            }
        },
        {
            "data": {
                "id": "ConnectVentures",
                "label": "Connect Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.connectventures.co/"
                }
            }
        },
        {
            "data": {
                "id": "GravityFund",
                "label": "Gravity Fund",
                "type": "Investor",
                "properties": {
                    "url": "https://gravityfund.vc/"
                }
            }
        },
        {
            "data": {
                "id": "PioneerFund",
                "label": "Pioneer Fund",
                "type": "Investor",
                "properties": {
                    "url": "https://www.pioneerfund.vc/"
                }
            }
        },
        {
            "data": {
                "id": "WellingtonManagement",
                "label": "Wellington Management",
                "type": "Investor",
                "properties": {
                    "url": "https://www.wellington.com/"
                }
            }
        },
        {
            "data": {
                "id": "KhoslaVentures",
                "label": "Khosla Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.khoslaventures.com/"
                }
            }
        },
        {
            "data": {
                "id": "BicycleCapital",
                "label": "Bicycle Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://bicycle.capital/"
                }
            }
        },
        {
            "data": {
                "id": "GeodesicCapital",
                "label": "Geodesic Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://geodesiccap.com/"
                }
            }
        },
        {
            "data": {
                "id": "ArchermanCapital",
                "label": "Archerman Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://www.archermancap.com/"
                }
            }
        },
        {
            "data": {
                "id": "CapitalOneVentures",
                "label": "Capital One Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://capitaloneventures.com/"
                }
            }
        },
        {
            "data": {
                "id": "CitiVentures",
                "label": "Citi Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.citi.com/ventures/"
                }
            }
        },
        {
            "data": {
                "id": "Coatue",
                "label": "Coatue",
                "type": "Investor",
                "properties": {
                    "url": "https://www.coatue.com/"
                }
            }
        },
        {
            "data": {
                "id": "DSTGlobal",
                "label": "DST Global",
                "type": "Investor",
                "properties": {
                    "url": "https://dst-global.com/"
                }
            }
        },
        {
            "data": {
                "id": "Iconiq",
                "label": "Iconiq",
                "type": "Investor",
                "properties": {
                    "url": "https://www.iconiqcapital.com/"
                }
            }
        },
        {
            "data": {
                "id": "IVP",
                "label": "IVP",
                "type": "Investor",
                "properties": {
                    "url": "https://www.ivp.com/"
                }
            }
        },
        {
            "data": {
                "id": "LatitudeCapital",
                "label": "Latitude Capital",
                "type": "Investor",
                "properties": {
                    "url": "https://www.latitudecp.com/"
                }
            }
        },
        {
            "data": {
                "id": "Lightspeed",
                "label": "Lightspeed",
                "type": "Investor",
                "properties": {
                    "url": "https://lsvp.com/"
                }
            }
        },
        {
            "data": {
                "id": "SapphireVentures",
                "label": "Sapphire Ventures",
                "type": "Investor",
                "properties": {
                    "url": "https://sapphireventures.com/"
                }
            }
        },
        {
            "data": {
                "id": "BMWiVentures",
                "label": "BMW iVentures",
                "type": "Investor",
                "properties": {
                    "url": "https://www.bmwiventures.com/"
                }
            }
        },
        {
            "data": {
                "id": "ByteDance",
                "label": "ByteDance",
                "type": "Company",
                "properties": {
                    "url": "https://www.bytedance.com/en/",
                    "country": "CN"
                }
            }
        },
        {
            "data": {
                "id": "ContinueInc",
                "label": "Continue, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://www.continue.dev/"
                }
            }
        },
        {
            "data": {
                "id": "ClineBotInc",
                "label": "Cline Bot, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://cline.bot/"
                }
            }
        },
        {
            "data": {
                "id": "DatabuttonCompany",
                "label": "Databutton",
                "type": "Company",
                "properties": {
                    "url": "https://databutton.com/",
                    "country": "Norway"
                }
            }
        },
        {
            "data": {
                "id": "Base44Company",
                "label": "Base44 Inc",
                "type": "Company",
                "properties": {
                    "url": "https://base44.com/"
                }
            }
        },
        {
            "data": {
                "id": "AnysphereCompany",
                "label": "Anysphere",
                "type": "Company",
                "properties": {
                    "url": "https://www.anysphere.inc/"
                }
            }
        },
        {
            "data": {
                "id": "WindsurfCompany",
                "label": "Windsurf (Codeium)",
                "type": "Company",
                "properties": {
                    "url": "https://windsurf.com/"
                }
            }
        },
        {
            "data": {
                "id": "StackBlitz",
                "label": "StackBlitz, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://stackblitz.com/"
                }
            }
        },
        {
            "data": {
                "id": "lovableCompany",
                "label": "Lovable.",
                "type": "Company",
                "properties": {
                    "url": "https://lovable.dev/",
                    "country": "Sweden"
                }
            }
        },
        {
            "data": {
                "id": "vercel",
                "label": "Vercel",
                "type": "Company",
                "properties": {
                    "url": "https://vercel.com/"
                }
            }
        },
        {
            "data": {
                "id": "Replit",
                "label": "Replit",
                "type": "Company",
                "properties": {
                    "url": "https://replit.com/"
                }
            }
        },
        {
            "data": {
                "id": "Axilla",
                "label": "Axilla, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://getmocha.com/"
                }
            }
        },
        {
            "data": {
                "id": "Github",
                "label": "GitHub, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://github.com"
                }
            }
        },
        {
            "data": {
                "id": "RorkCompany",
                "label": "Rork, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://rork.com/"
                }
            }
        },
        {
            "data": {
                "id": "Superblocks",
                "label": "Superblocks",
                "type": "Company",
                "properties": {
                    "url": "https://www.superblocks.com"
                }
            }
        },
        {
            "data": {
                "id": "Google",
                "label": "Google",
                "type": "Company",
                "properties": {
                    "url": "https://google.com"
                }
            }
        },
        {
            "data": {
                "id": "xAI",
                "label": "xAI",
                "type": "Company",
                "properties": {
                    "url": "https://x.ai"
                }
            }
        },
        {
            "data": {
                "id": "Code",
                "label": "Canva",
                "type": "Company",
                "properties": {
                    "url": "https://www.canva.com/"
                }
            }
        },
        {
            "data": {
                "id": "a0devCompany",
                "label": "a0.dev",
                "type": "Company",
                "properties": {
                    "url": "https://a0.dev/"
                }
            }
        },
        {
            "data": {
                "id": "openai",
                "label": "OpenAI",
                "type": "Company",
                "properties": {
                    "url": "https://openai.com/"
                }
            }
        },
        {
            "data": {
                "id": "RowboatLabs",
                "label": "Rowboat Labs",
                "type": "Company",
                "properties": {
                    "url": "https://www.rowboatlabs.com/"
                }
            }
        },
        {
            "data": {
                "id": "PearAI",
                "label": "PearAI",
                "type": "Company",
                "properties": {
                    "url": "https://trypear.ai/",
                    "github": "https://github.com/trypear/pearai-master"
                }
            }
        },
        {
            "data": {
                "id": "BrowserUseCompany",
                "label": "Browser Use",
                "type": "Company",
                "properties": {
                    "url": "https://browser-use.com/"
                }
            }
        },
        {
            "data": {
                "id": "OllamaCompany",
                "label": "Ollama",
                "type": "Company",
                "properties": {
                    "url": "https://ollama.com/"
                }
            }
        },
        {
            "data": {
                "id": "CognitionCompany",
                "label": "Cognition",
                "type": "Company",
                "properties": {
                    "url": "https://cognition.ai/"
                }
            }
        },
        {
            "data": {
                "id": "WhimsyWorks",
                "label": "WhimsyWorks, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://getwhimsyworks.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "CrewAICompany",
                "label": "CrewAI, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://crewai.com/",
                    "github": "https://github.com/crewaiinc/crewai"
                }
            }
        },
        {
            "data": {
                "id": "Microsoft",
                "label": "Microsoft",
                "type": "Company",
                "properties": {
                    "url": "https://microsoft.com"
                }
            }
        },
        {
            "data": {
                "id": "LlamaIndexCompany",
                "label": "LlamaIndex",
                "type": "Company",
                "properties": {
                    "url": "https://www.llamaindex.ai/",
                    "linkedin": "https://www.linkedin.com/company/llamaindex"
                }
            }
        },
        {
            "data": {
                "id": "DeepsetCompany",
                "label": "Deepset GmbH",
                "type": "Company",
                "properties": {
                    "url": "https://haystack.deepset.ai/",
                    "country": "Germany",
                    "github": "https://github.com/deepset-ai"
                }
            }
        },
        {
            "data": {
                "id": "Amazon",
                "label": "Amazon",
                "type": "Company",
                "properties": {
                    "url": "https://amazon.com/"
                }
            }
        },
        {
            "data": {
                "id": "HuggingFace",
                "label": "Hugging Face",
                "type": "Company",
                "properties": {
                    "url": "https://huggingface.co/"
                }
            }
        },
        {
            "data": {
                "id": "DeepsiteAi",
                "label": "Deepsite.ai",
                "type": "Company",
                "properties": {
                    "url": "https://deepsite.ai/"
                }
            }
        },
        {
            "data": {
                "id": "DockerCompany",
                "label": "Docker Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://docker.com/"
                }
            }
        },
        {
            "data": {
                "id": "SmallCloud",
                "label": "Small Magellanic Cloud Ai Ltd.",
                "type": "Company",
                "properties": {
                    "url": "https://refact.ai/"
                }
            }
        },
        {
            "data": {
                "id": "ZedIndustries",
                "label": "Zed Industries",
                "type": "Company",
                "properties": {
                    "url": "https://zed.dev/"
                }
            }
        },
        {
            "data": {
                "id": "Anthropic",
                "label": "Anthropic",
                "type": "Company",
                "properties": {
                    "url": "https://www.anthropic.com/"
                }
            }
        },
        {
            "data": {
                "id": "IBM",
                "label": "IBM",
                "type": "Company",
                "properties": {
                    "url": "https://ibm.com/"
                }
            }
        },
        {
            "data": {
                "id": "MaitaiCompany",
                "label": "Maitai, Inc",
                "type": "Company",
                "properties": {
                    "url": "https://trymaitai.ai/"
                }
            }
        },
        {
            "data": {
                "id": "Groq",
                "label": "Groq, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://groq.com/"
                }
            }
        },
        {
            "data": {
                "id": "LangfuseCompany",
                "label": "Langfuse GmbH",
                "type": "Company",
                "properties": {
                    "url": "https://langfuse.com/",
                    "country": "Germany",
                    "github": "https://github.com/langfuse"
                }
            }
        },
        {
            "data": {
                "id": "LangChainCompany",
                "label": "LangChain, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://langchain.com/"
                }
            }
        },
        {
            "data": {
                "id": "LangflowCompany",
                "label": "LangFlow",
                "type": "Company",
                "properties": {
                    "url": "https://www.langflow.org/",
                    "github": "https://github.com/langflow-ai/"
                }
            }
        },
        {
            "data": {
                "id": "IO",
                "label": "IO",
                "type": "Company",
                "properties": {
                    "url": "https://www.lovefrom.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "HCompany",
                "label": "H Company",
                "type": "Company",
                "properties": {
                    "url": "https://www.hcompany.ai/",
                    "country": "France"
                }
            }
        },
        {
            "data": {
                "id": "n8nCompany",
                "label": "n8n",
                "type": "Company",
                "properties": {
                    "url": "https://n8n.io/",
                    "country": "Germany"
                }
            }
        },
        {
            "data": {
                "id": "FlowiseCompany",
                "label": "FlowiseAI Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://flowiseai.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "Ironclad",
                "label": "Ironclad, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://ironcladapp.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "SuperAGICompany",
                "label": "SuperAGI",
                "type": "Company",
                "properties": {
                    "url": "https://superagi.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "LiveKitCompany",
                "label": "LiveKit",
                "type": "Company",
                "properties": {
                    "url": "https://livekit.io/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "BotpressCompany",
                "label": "Botpress",
                "type": "Company",
                "properties": {
                    "url": "https://botpress.com/",
                    "country": "Canada",
                    "github": "https://github.com/botpress"
                }
            }
        },
        {
            "data": {
                "id": "FoundryLabs",
                "label": "FoundryLabs, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://e2b.dev",
                    "country": "US",
                    "github": "https://github.com/e2b-dev"
                }
            }
        },
        {
            "data": {
                "id": "DustCompany",
                "label": "Dust",
                "type": "Company",
                "properties": {
                    "url": "https://dust.tt/",
                    "country": "France",
                    "github": "https://github.com/dust-tt"
                }
            }
        },
        {
            "data": {
                "id": "MetaGPTCompany",
                "label": "MetaGPT",
                "type": "Company",
                "properties": {
                    "url": "https://www.deepwisdom.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "MetaCompany",
                "label": "Meta",
                "type": "Company",
                "properties": {
                    "url": "https://meta.com",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PythagoraCompany",
                "label": "Pythagora",
                "type": "Company",
                "properties": {
                    "url": "https://pythagora.io",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "StitionAI",
                "label": "Stition AI",
                "type": "Company",
                "properties": {
                    "url": "",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PipecatAI",
                "label": "Pipecat AI",
                "type": "Company",
                "properties": {
                    "url": "",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PortiaAICompany",
                "label": "Portia AI",
                "type": "Company",
                "properties": {
                    "url": "",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "GiselleAI",
                "label": "Giselle AI",
                "type": "Company",
                "properties": {
                    "url": "https://giselles.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "MemGPTCompany",
                "label": "MemGPT",
                "type": "Company",
                "properties": {
                    "url": "https://memgpt.ai",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "OpenBMB",
                "label": "OpenBMB",
                "type": "Company",
                "properties": {
                    "url": "https://www.openbmb.cn/en/home",
                    "country": "China",
                    "github": "https://github.com/OpenBMB"
                }
            }
        },
        {
            "data": {
                "id": "MineDojo",
                "label": "MineDojo",
                "type": "Company",
                "properties": {
                    "url": "",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "LiteLLMCompany",
                "label": "LiteLLM",
                "type": "Company",
                "properties": {
                    "url": "https://www.litellm.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "MistralAI",
                "label": "Mistral AI",
                "type": "Company",
                "properties": {
                    "url": "https://mistral.ai/",
                    "country": "France"
                }
            }
        },
        {
            "data": {
                "id": "GleanCompany",
                "label": "Glean Technologies, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://www.glean.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PerplexityAI",
                "label": "Perplexity AI",
                "type": "Company",
                "properties": {
                    "url": "https://www.perplexity.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "LinerCompany",
                "label": "Liner",
                "type": "Company",
                "properties": {
                    "url": "https://getliner.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "AthenicAICompany",
                "label": "Athenic AI Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://www.athenic.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "CohereCompany",
                "label": "Cohere",
                "type": "Company",
                "properties": {
                    "url": "https://cohere.com/",
                    "country": "Canada"
                }
            }
        },
        {
            "data": {
                "id": "MindsDBCompany",
                "label": "MindsDB",
                "type": "Company",
                "properties": {
                    "url": "https://mindsdb.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PipedreamCompany",
                "label": "Pipedream, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://pipedream.com/",
                    "country": "US",
                    "github": "https://github.com/PipedreamHQ"
                }
            }
        },
        {
            "data": {
                "id": "ZepCompany",
                "label": "Zep AI",
                "type": "Company",
                "properties": {
                    "url": "https://www.getzep.com/",
                    "country": "US",
                    "github": "https://github.com/getzep"
                }
            }
        },
        {
            "data": {
                "id": "LangtraceAICompany",
                "label": "Langtrace AI",
                "type": "Company",
                "properties": {
                    "url": "https://www.langtrace.ai/",
                    "country": "US",
                    "github": "https://github.com/Scale3-Labs"
                }
            }
        },
        {
            "data": {
                "id": "AICoding",
                "label": "AI Coding",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "GenPurposeAgent",
                "label": "General Purpose Agent",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AgentFramework",
                "label": "Agent Framework",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "InfEngine",
                "label": "Inference Engine",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "OperationsResearch",
                "label": "Operations Research",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "ComputerUse",
                "label": "Computer Use",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "RAG",
                "label": "Retrieval Augmented Generation",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "Research",
                "label": "Research",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "VectorDB",
                "label": "Vector Database",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "GraphDB",
                "label": "Graph Database",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "DataAnalysis",
                "label": "Data Analysis",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "Runtime",
                "label": "Runtime platform",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "Automation",
                "label": "Automation",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "LLMClient",
                "label": "LLM Client",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "ChipDesign",
                "label": "Chip Design",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "ModelServing",
                "label": "Model Serving",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "PromptEngineering",
                "label": "Prompt Engineering",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AgentPlatform",
                "label": "Agent Platform",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "Observability",
                "label": "Agent/Model Observability",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AILegal",
                "label": "AI in Law",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AICLM",
                "label": "Contract Lifecycle Management",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "VoiceAgents",
                "label": "Voice Agents",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "GameSimulation",
                "label": "Game Simulation",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "KnowledgeManagement",
                "label": "Knowledge Management",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "MultimodalAgents",
                "label": "Multimodal Agents",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "TestingEvaluation",
                "label": "Testing and Evaluation",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "LLMSecurity",
                "label": "LLM Security",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AISearch",
                "label": "AI Search",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "AgentInfrastructure",
                "label": "Agent Infrastructure",
                "type": "UseCase"
            }
        },
        {
            "data": {
                "id": "MCP",
                "label": "Model Context Protocol",
                "type": "Protocol",
                "properties": {
                    "url": "https://modelcontextprotocol.io/",
                    "github": "https://github.com/modelcontextprotocol",
                    "license": "MIT License",
                    "description": "MCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools."
                }
            }
        },
        {
            "data": {
                "id": "ACP",
                "label": "Agent Communication Protocol",
                "type": "Protocol",
                "properties": {
                    "url": "https://agentcommunicationprotocol.dev/",
                    "github": "https://github.com/i-am-bee/acp",
                    "license": "Apache License 2.0",
                    "description": "The Agent Communication Protocol (ACP) is an open standard with open governance for agent interoperability. It defines a standardized RESTful API supporting synchronous, asynchronous, and streaming interactions. In ACP, agents are services that exchange multimodal messages, with the protocol remaining agnostic to their internal implementations and requiring only minimal specifications for compatibility."
                }
            }
        },
        {
            "data": {
                "id": "A2A",
                "label": "Agent2Agent",
                "type": "Protocol",
                "properties": {
                    "url": "https://google-a2a.github.io/A2A/"
                }
            }
        },
        {
            "data": {
                "id": "OpenMCP",
                "label": "OpenMCP",
                "type": "Service",
                "properties": {
                    "url": "https://www.open-mcp.org/",
                    "github": "https://github.com/wegotdocs/open-mcp",
                    "license": ""
                }
            }
        },
        {
            "data": {
                "id": "MetaMCP",
                "label": "MetaMCP",
                "type": "Service",
                "properties": {
                    "url": "https://metamcp.com/",
                    "github": "https://github.com/metatool-ai/metatool-app",
                    "license": "AGPL-3"
                }
            }
        },
        {
            "data": {
                "id": "Waystation",
                "label": "Waystation",
                "type": "Service",
                "properties": {
                    "url": "https://waystation.ai/",
                    "github": "https://github.com/waystation-ai/mcp",
                    "license": ""
                }
            }
        },
        {
            "data": {
                "id": "mcp-access-point",
                "label": "mcp-access-point",
                "type": "Service",
                "properties": {
                    "url": "https://deepwiki.com/OpenAgentX/mcp-access-point",
                    "github": "https://github.com/sxhxliang/mcp-access-point",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "openai-gpt-image-mcp",
                "label": "openai-gpt-image-mcp",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/SureScaleAI/openai-gpt-image-mcp",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "anyquery",
                "label": "anyquery",
                "type": "Service",
                "properties": {
                    "url": "https://anyquery.dev/",
                    "github": "https://github.com/julien040/anyquery",
                    "license": "AGPLv3"
                }
            }
        },
        {
            "data": {
                "id": "mindsdb",
                "label": "mindsdb",
                "type": "Service",
                "properties": {
                    "url": "https://mindsdb.com/",
                    "github": "https://github.com/mindsdb/mindsdb",
                    "license": "AGPLv3"
                }
            }
        },
        {
            "data": {
                "id": "pipedream-mcp",
                "label": "Pipedream MCP",
                "type": "Service",
                "properties": {
                    "url": "https://pipedream.com/",
                    "github": "https://github.com/PipedreamHQ/pipedream",
                    "license": "AGPLv3"
                }
            }
        },
        {
            "data": {
                "id": "pipedream-connect",
                "label": "Pipedream Connect",
                "type": "Product",
                "properties": {
                    "url": "https://pipedream.com/",
                    "github": "https://github.com/PipedreamHQ/pipedream",
                    "license": "AGPLv3"
                }
            }
        },
        {
            "data": {
                "id": "WeightAndBiases",
                "label": "Weight & Biases",
                "type": "Product",
                "properties": {
                    "url": "https://wandb.ai/site/",
                    "github": ""
                }
            }
        },
        {
            "data": {
                "id": "Phoeniz",
                "label": "Weight & Biases",
                "type": "Product",
                "properties": {
                    "url": "https://arize.com/docs/phoenix",
                    "github": "https://github.com/Arize-ai/phoenix",
                    "license": "Elastic License 2.0 (ELv2)"
                }
            }
        },
        {
            "data": {
                "id": "FutureAGI",
                "label": "Future AGI",
                "type": "Product",
                "properties": {
                    "url": "https://docs.futureagi.com/future-agi/home",
                    "github": "https://github.com/future-agi/futureagi-sdk",
                    "license": "BSD-3-Clause License"
                }
            }
        },
        {
            "data": {
                "id": "MLFlow",
                "label": "MLFlow",
                "type": "Product",
                "properties": {
                    "url": "https://mlflow.org/",
                    "github": "https://github.com/mlflow/mlflow",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Braintrust",
                "label": "Braintrust",
                "type": "Product",
                "properties": {
                    "url": "https://www.braintrust.dev/",
                    "github": "https://github.com/braintrustdata/braintrust-sdk",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "AgentOps",
                "label": "AgentOps",
                "type": "Product",
                "properties": {
                    "url": "https://www.agentops.ai/",
                    "github": "https://github.com/AgentOps-AI/agentops",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "Scorecard",
                "label": "Scorecard",
                "type": "Product",
                "properties": {
                    "url": "https://www.scorecard.io/",
                    "github": "https://github.com/scorecard-ai/scorecard-python",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "KeywordsAI",
                "label": "KeywordsAI",
                "type": "Product",
                "properties": {
                    "url": "https://www.keywordsai.co/",
                    "github": "",
                    "license": ""
                }
            }
        },
        {
            "data": {
                "id": "MaximAI",
                "label": "MaximAI",
                "type": "Product",
                "properties": {
                    "url": "https://www.getmaxim.ai/",
                    "github": "",
                    "license": ""
                }
            }
        },
        {
            "data": {
                "id": "Opik",
                "label": "Opik",
                "type": "Product",
                "properties": {
                    "url": "https://www.comet.com/site/products/opik/",
                    "github": "https://github.com/comet-ml/opik",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "monocle",
                "label": "monocle",
                "type": "Product",
                "properties": {
                    "url": "http://monocle2ai.org/",
                    "github": "https://github.com/monocle2ai/monocle",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "Galileo",
                "label": "Galileo",
                "type": "Product",
                "properties": {
                    "url": "https://galileo.ai/",
                    "github": "",
                    "license": ""
                }
            }
        },
        {
            "data": {
                "id": "portkey",
                "label": "portkey",
                "type": "Product",
                "properties": {
                    "url": "https://portkey.ai/",
                    "github": "https://github.com/Portkey-AI/portkey-python-sdk",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "gateway",
                "label": "gateway",
                "type": "Product",
                "properties": {
                    "url": "https://portkey.ai/features/ai-gateway",
                    "github": "https://github.com/Portkey-AI/gateway",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "PydanticAI",
                "label": "Pydantic AI",
                "type": "Product",
                "properties": {
                    "url": "https://ai.pydantic.dev/",
                    "github": "https://github.com/pydantic/pydantic-ai",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "KeywordsAICompany",
                "label": "KeywordsAI",
                "type": "Company",
                "properties": {
                    "url": "https://www.keywordsai.co/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "MaximAICompany",
                "label": "MaximAI",
                "type": "Company",
                "properties": {
                    "url": "https://www.getmaxim.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "CometMLCompany",
                "label": "Comet ML, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://www.comet.com/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "GalileoCompany",
                "label": "Galileo",
                "type": "Company",
                "properties": {
                    "url": "https://galileo.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "PortkeyCompany",
                "label": "Portkey, Inc",
                "type": "Company",
                "properties": {
                    "url": "https://portkey.ai/",
                    "country": "US"
                }
            }
        },
        {
            "data": {
                "id": "pinecone",
                "label": "Pinecone",
                "type": "Product",
                "properties": {
                    "url": "https://www.pinecone.io/",
                    "github": "https://github.com/pinecone-io/pinecone-python-client",
                    "license": "Proprietary (SaaS)"
                }
            }
        },
        {
            "data": {
                "id": "milvus",
                "label": "Milvus",
                "type": "Product",
                "properties": {
                    "url": "https://milvus.io/",
                    "github": "https://github.com/milvus-io/milvus",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "weaviate",
                "label": "Weaviate",
                "type": "Product",
                "properties": {
                    "url": "https://weaviate.io/",
                    "github": "https://github.com/weaviate/weaviate",
                    "license": "BSD 3-Clause"
                }
            }
        },
        {
            "data": {
                "id": "qdrant",
                "label": "Qdrant",
                "type": "Product",
                "properties": {
                    "url": "https://qdrant.tech/",
                    "github": "https://github.com/qdrant/qdrant",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "chroma",
                "label": "Chroma",
                "type": "Product",
                "properties": {
                    "url": "https://www.trychroma.com/",
                    "github": "https://github.com/chroma-core/chroma",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "faiss",
                "label": "FAISS",
                "type": "Product",
                "properties": {
                    "url": "https://faiss.ai/",
                    "github": "https://github.com/facebookresearch/faiss",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "vespa",
                "label": "Vespa",
                "type": "Product",
                "properties": {
                    "url": "https://vespa.ai/",
                    "github": "https://github.com/vespa-engine/vespa",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "pgvector",
                "label": "pgvector",
                "type": "Product",
                "properties": {
                    "url": "https://github.com/pgvector/pgvector",
                    "github": "https://github.com/pgvector/pgvector",
                    "license": "PostgreSQL License"
                }
            }
        },
        {
            "data": {
                "id": "elasticsearch",
                "label": "Elasticsearch",
                "type": "Product",
                "properties": {
                    "url": "https://www.elastic.co/elasticsearch/",
                    "github": "https://github.com/elastic/elasticsearch",
                    "license": "Elastic License 2.0 & SSPL"
                }
            }
        },
        {
            "data": {
                "id": "opensearch",
                "label": "OpenSearch",
                "type": "Product",
                "properties": {
                    "url": "https://opensearch.org/",
                    "github": "https://github.com/opensearch-project/OpenSearch",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "vald",
                "label": "Vald",
                "type": "Product",
                "properties": {
                    "url": "https://vald.vdaas.org/",
                    "github": "https://github.com/vdaas/vald",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "marqo",
                "label": "Marqo",
                "type": "Product",
                "properties": {
                    "url": "https://www.marqo.ai/",
                    "github": "https://github.com/marqo-ai/marqo",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "redis",
                "label": "Redis Vector Search",
                "type": "Product",
                "properties": {
                    "url": "https://redis.io/docs/stack/search/reference/vectors/",
                    "github": "https://github.com/RediSearch/RediSearch",
                    "license": "Redis Source Available License (RSAL)"
                }
            }
        },
        {
            "data": {
                "id": "typesense",
                "label": "Typesense",
                "type": "Product",
                "properties": {
                    "url": "https://typesense.org/",
                    "github": "https://github.com/typesense/typesense",
                    "license": "GPL-3.0"
                }
            }
        },
        {
            "data": {
                "id": "vectorchord",
                "label": "VectorChord",
                "type": "Product",
                "properties": {
                    "url": "https://docs.vectorchord.ai/",
                    "github": "https://github.com/tensorchord/vectorchord/",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "lance",
                "label": "LanceDB",
                "type": "Product",
                "properties": {
                    "url": "https://lancedb.com/",
                    "github": "https://github.com/lancedb/lancedb",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "annoy",
                "label": "Annoy",
                "type": "Product",
                "properties": {
                    "url": "https://github.com/spotify/annoy",
                    "github": "https://github.com/spotify/annoy",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "nmslib",
                "label": "NMSLIB",
                "type": "Product",
                "properties": {
                    "url": "https://github.com/nmslib/nmslib",
                    "github": "https://github.com/nmslib/nmslib",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "hnsw",
                "label": "HNSW",
                "type": "Product",
                "properties": {
                    "url": "https://github.com/nmslib/hnswlib",
                    "github": "https://github.com/nmslib/hnswlib",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "docarray",
                "label": "DocArray",
                "type": "Product",
                "properties": {
                    "url": "https://docarray.jina.ai/",
                    "github": "https://github.com/jina-ai/docarray",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "vectorize",
                "label": "Vectorize",
                "type": "Product",
                "properties": {
                    "url": "https://www.vectorize.io/",
                    "github": null,
                    "license": "Proprietary (SaaS)"
                }
            }
        },
        {
            "data": {
                "id": "zilliz",
                "label": "Zilliz Cloud",
                "type": "Product",
                "properties": {
                    "url": "https://zilliz.com/",
                    "github": "https://github.com/zilliztech",
                    "license": "Proprietary (SaaS)"
                }
            }
        },
        {
            "data": {
                "id": "singlestore",
                "label": "SingleStore",
                "type": "Product",
                "properties": {
                    "url": "https://www.singlestore.com/",
                    "github": "https://github.com/singlestore-labs",
                    "license": "Proprietary with Free Tier"
                }
            }
        },
        {
            "data": {
                "id": "clickhouse",
                "label": "ClickHouse",
                "type": "Product",
                "properties": {
                    "url": "https://clickhouse.com/",
                    "github": "https://github.com/ClickHouse/ClickHouse",
                    "license": "Apache License 2.0"
                }
            }
        },
        {
            "data": {
                "id": "julien040-anyquery",
                "label": "AnyQuery",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/julien040/anyquery",
                    "description": "Query more than 40 apps with one binary using SQL. It can also connect to your PostgreSQL, MySQL, or SQLite compatible database. Local-first and private by design."
                }
            }
        },
        {
            "data": {
                "id": "metatool-ai-metatool-app",
                "label": "MetaMCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/metatool-ai/metatool-app",
                    "description": "The one unified middleware MCP server that manages your MCP connections with GUI."
                }
            }
        },
        {
            "data": {
                "id": "mindsdb-mindsdb",
                "label": "MindsDB",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/mindsdb/mindsdb",
                    "description": "Connect and unify data across various platforms and databases with MindsDB as a single MCP server."
                }
            }
        },
        {
            "data": {
                "id": "glenngillen-mcpmcp-server",
                "label": "MCPMCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/glenngillen/mcpmcp-server",
                    "description": "A list of MCP servers so you can ask your client which servers you can use to improve your daily workflow."
                }
            }
        },
        {
            "data": {
                "id": "wegotdocs-open-mcp",
                "label": "Open MCP",
                "type": "Service",
                "properties": {
                    "url": "https://open-mcp.org",
                    "github": "https://github.com/wegotdocs/open-mcp",
                    "description": "Turn a web API into an MCP server in 10 seconds and add it to the open source registry."
                }
            }
        },
        {
            "data": {
                "id": "pipedreamhq-pipedream",
                "label": "Pipedream MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/PipedreamHQ/pipedream/tree/master/modelcontextprotocol",
                    "description": "Connect with 2,500 APIs with 8,000+ prebuilt tools, and manage servers for your users, in your own app."
                }
            }
        },
        {
            "data": {
                "id": "veritenik-pluggedin-mcp-proxy",
                "label": "PluggedIn MCP Proxy",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/VeriTeknik/pluggedin-mcp-proxy",
                    "description": "A comprehensive proxy server that combines multiple MCP servers into a single interface with extensive visibility features."
                }
            }
        },
        {
            "data": {
                "id": "tigranbs-mcgravity",
                "label": "MCGravity",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/tigranbs/mcgravity",
                    "description": "A proxy tool for composing multiple MCP servers into one unified endpoint. Scale your AI tools by load balancing requests across multiple MCP servers."
                }
            }
        },
        {
            "data": {
                "id": "waystation-ai-mcp",
                "label": "WayStation MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/waystation-ai/mcp",
                    "description": "Seamlessly and securely connect Claude Desktop and other MCP hosts to your favorite apps (Notion, Slack, Monday, Airtable, etc.). Takes less than 90 secs."
                }
            }
        },
        {
            "data": {
                "id": "sxhxliang-mcp-access-point",
                "label": "MCP Access Point",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/sxhxliang/mcp-access-point",
                    "description": "Turn a web service into an MCP server in one click without making any code changes."
                }
            }
        },
        {
            "data": {
                "id": "hamflx-imagen3-mcp",
                "label": "Imagen3 MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/hamflx/imagen3-mcp",
                    "description": "A powerful image generation tool using Google's Imagen 3.0 API through MCP. Generate high-quality images from text prompts with advanced controls."
                }
            }
        },
        {
            "data": {
                "id": "surescaleai-openai-gpt-image-mcp",
                "label": "OpenAI GPT Image MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/SureScaleAI/openai-gpt-image-mcp",
                    "description": "OpenAI GPT image generation/editing MCP server."
                }
            }
        },
        {
            "data": {
                "id": "xspadex-bilibili-mcp",
                "label": "Bilibili MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/xspadex/bilibili-mcp.git",
                    "description": "A FastMCP-based tool that fetches Bilibili's trending videos and exposes them via a standard MCP interface."
                }
            }
        },
        {
            "data": {
                "id": "34892002-bilibili-mcp-js",
                "label": "Bilibili MCP JS",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/34892002/bilibili-mcp-js",
                    "description": "A MCP server that supports searching for Bilibili content. Provides LangChain integration examples and test scripts."
                }
            }
        },
        {
            "data": {
                "id": "aircodelabs-grasp",
                "label": "Grasp",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/aircodelabs/grasp",
                    "description": "Self-hosted browser using agent with built-in MCP and A2A support."
                }
            }
        },
        {
            "data": {
                "id": "automatalabs-mcp-server-playwright",
                "label": "Automata Labs Playwright MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/Automata-Labs-team/MCP-Server-Playwright",
                    "description": "An MCP server for browser automation using Playwright"
                }
            }
        },
        {
            "data": {
                "id": "blackwhite084-playwright-plus-python-mcp",
                "label": "Playwright Plus Python MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/blackwhite084/playwright-plus-python-mcp",
                    "description": "An MCP python server using Playwright for browser automation, more suitable for LLM"
                }
            }
        },
        {
            "data": {
                "id": "browserbase-mcp-server-browserbase",
                "label": "BrowserBase MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/browserbase/mcp-server-browserbase",
                    "description": "Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)"
                }
            }
        },
        {
            "data": {
                "id": "browsermcp-mcp",
                "label": "Browser MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/browsermcp/mcp",
                    "description": "Automate your local Chrome browser"
                }
            }
        },
        {
            "data": {
                "id": "co-browser-browser-use-mcp-server",
                "label": "Browser Use MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/co-browser/browser-use-mcp-server",
                    "description": "browser-use packaged as an MCP server with SSE transport. includes a dockerfile to run chromium in docker + a vnc server."
                }
            }
        },
        {
            "data": {
                "id": "executeautomation-playwright-mcp-server",
                "label": "Execute Automation Playwright MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/executeautomation/mcp-playwright",
                    "description": "An MCP server using Playwright for browser automation and webscrapping"
                }
            }
        },
        {
            "data": {
                "id": "eyalzh-browser-control-mcp",
                "label": "Browser Control MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/eyalzh/browser-control-mcp",
                    "description": "An MCP server paired with a browser extension that enables LLM clients to control the user's browser (Firefox)."
                }
            }
        },
        {
            "data": {
                "id": "fradser-mcp-server-apple-reminders",
                "label": "Apple Reminders MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/FradSer/mcp-server-apple-reminders",
                    "description": "An MCP server for interacting with Apple Reminders on macOS"
                }
            }
        },
        {
            "data": {
                "id": "getrupt-ashra-mcp",
                "label": "Ashra MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/getrupt/ashra-mcp",
                    "description": "Extract structured data from any website. Just prompt and get JSON."
                }
            }
        },
        {
            "data": {
                "id": "kimtaeyoon83-mcp-server-youtube-transcript",
                "label": "YouTube Transcript MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/kimtaeyoon83/mcp-server-youtube-transcript",
                    "description": "Fetch YouTube subtitles and transcripts for AI analysis"
                }
            }
        },
        {
            "data": {
                "id": "kimtth-mcp-aoai-web-browsing",
                "label": "Azure OpenAI Web Browsing MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/kimtth/mcp-aoai-web-browsing",
                    "description": "A minimal server/client MCP implementation using Azure OpenAI and Playwright."
                }
            }
        },
        {
            "data": {
                "id": "microsoft-playwright-mcp",
                "label": "Microsoft Playwright MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/microsoft/playwright-mcp",
                    "description": "Official Microsoft Playwright MCP server, enabling LLMs to interact with web pages through structured accessibility snapshots"
                }
            }
        },
        {
            "data": {
                "id": "modelcontextprotocol-server-puppeteer",
                "label": "Puppeteer MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
                    "description": "Browser automation for web scraping and interaction"
                }
            }
        },
        {
            "data": {
                "id": "ndthanhdev-mcp-browser-kit",
                "label": "MCP Browser Kit",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/ndthanhdev/mcp-browser-kit",
                    "description": "An MCP Server for interacting with manifest v2 compatible browsers."
                }
            }
        },
        {
            "data": {
                "id": "pskill9-web-search",
                "label": "Web Search MCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/pskill9/web-search",
                    "description": "An MCP server that enables free web searching using Google search results, with no API keys required."
                }
            }
        },
        {
            "data": {
                "id": "recursechat-mcp-server-apple-shortcuts",
                "label": "Apple Shortcuts MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/recursechat/mcp-server-apple-shortcuts",
                    "description": "An MCP Server Integration with Apple Shortcuts"
                }
            }
        },
        {
            "data": {
                "id": "oraios-serena",
                "label": "Serena",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/oraios/serena",
                    "description": "A fully-featured coding agent that relies on symbolic code operations by using language servers."
                }
            }
        },
        {
            "data": {
                "id": "ezyang-codemcp",
                "label": "CodeMCP",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/ezyang/codemcp",
                    "description": "Coding agent with basic read, write and command line tools."
                }
            }
        },
        {
            "data": {
                "id": "doggybee-mcp-server-leetcode",
                "label": "LeetCode MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/doggybee/mcp-server-leetcode",
                    "description": "An MCP server that enables AI models to search, retrieve, and solve LeetCode problems. Supports metadata filtering, user profiles, submissions, and contest data access."
                }
            }
        },
        {
            "data": {
                "id": "jinzcdev-leetcode-mcp-server",
                "label": "LeetCode MCP Server (Global+CN)",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/jinzcdev/leetcode-mcp-server",
                    "description": "MCP server enabling automated access to LeetCode's programming problems, solutions, submissions and public data with optional authentication for user-specific features (e.g., notes), supporting both leetcode.com (global) and leetcode.cn (China) sites."
                }
            }
        },
        {
            "data": {
                "id": "juehang-vscode-mcp-server",
                "label": "VS Code MCP Server",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/juehang/vscode-mcp-server",
                    "description": "A MCP Server that allows AI such as Claude to read from the directory structure in a VS Code workspace, see problems picked up by linter(s) and the language server, read code files, and make edits."
                }
            }
        },
        {
            "data": {
                "id": "micl2e2-code-to-tree",
                "label": "Code to Tree",
                "type": "Service",
                "properties": {
                    "url": "",
                    "github": "https://github.com/micl2e2/code-to-tree",
                    "description": "A single-binary MCP server that converts source code into AST, regardless of language."
                }
            }
        },
        {
            "data": {
                "id": "ag-ui-protocol",
                "label": "AG-UI",
                "type": "Protocol",
                "properties": {
                    "url": "https://ag-ui.com/",
                    "github": "https://github.com/ag-ui-protocol/ag-ui",
                    "description": "AG-UI is an open, lightweight, event-based protocol that standardizes how AI agents connect to front-end applications."
                }
            }
        },
        {
            "data": {
                "id": "AG2",
                "label": "AG2",
                "type": "Product",
                "properties": {
                    "url": "",
                    "github": "",
                    "description": ""
                }
            }
        },
        {
            "data": {
                "id": "HumanAILabs",
                "label": "Human AI Labs, Inc.",
                "type": "Company",
                "properties": {
                    "url": "https://www.personal.ai/",
                    "github": "",
                    "description": ""
                }
            }
        },
        {
            "data": {
                "id": "PersonalAI",
                "label": "Personal AI",
                "type": "Product",
                "properties": {
                    "url": "https://www.personal.ai/",
                    "github": "",
                    "description": ""
                }
            }
        },
        {
            "data": {
                "id": "agentle",
                "label": "Agentle",
                "type": "Product",
                "properties": {
                    "url": "https://paragon-intelligence.github.io/agentle/",
                    "github": "https://github.com/paragon-intelligence/agentle",
                    "description": "Build production-ready AI agents in days, not months. Python 3.13+. Save development time with minimal code, deploy anywhere with confidence, and scale from simple assistants to complex multi-agent systems without the headaches.",
                    "license": "MIT License"
                }
            }
        },
        {
            "data": {
                "id": "lmcache",
                "label": "LMCache",
                "type": "Product",
                "properties": {
                    "url": "https://lmcache.ai/",
                    "github": "https://github.com/LMCache/LMCache",
                    "license": "Apache License 2.0",
                    "description": "LMCache is an LLM serving engine extension to reduce TTFT and increase throughput, especially under long-context scenarios. By storing the KV caches of reusable texts across various locations, including (GPU, CPU DRAM, Local Disk), LMCache reuses the KV caches of any reused text (not necessarily prefix) in any serving engine instance. Thus, LMCache saves precious GPU cycles and reduces user response delay."
                }
            }
        },
        {
            "data": {
                "id": "ggmlai",
                "label": "ggml.ai",
                "type": "Company",
                "properties": {
                    "url": "https://ggml.ai/",
                    "github": "https://github.com/ggml-org"
                }
            }
        },
        {
            "data": {
                "id": "WhisperCpp",
                "label": "whisper.cpp",
                "type": "Product",
                "properties": {
                    "github": "https://github.com/ggml-org/whisper.cpp",
                    "license": "MIT License",
                    "description": "Port of OpenAI's Whisper model in C/C++"
                }
            }
        },
        {
            "data": {
                "id": "AgentProtocol",
                "label": "Agent Protocol",
                "type": "Protocol",
                "properties": {
                    "github": "https://github.com/langchain-ai/agent-protocol",
                    "license": "MIT License",
                    "description": "Agent Protocol is our attempt at codifying the framework-agnostic APIs that are needed to serve LLM agents in production. This document explains the purpose of the protocol and makes the case for each of the endpoints in the spec. We finish by listing some roadmap items for the future."
                }
            }
        },
        {
            "data": {
                "id": "Agntcy",
                "label": "Agntcy",
                "type": "Protocol",
                "properties": {
                    "url": "https://agntcy.org/",
                    "github": "https://github.com/agntcy",
                    "description": "An open source collective for inter-agent collaboration. The AGNTCY is where we are building the Internet of Agents to be: A diverse, collaborative space to innovate, develop, and maintain software components and services for agentic workflows and multi-agent software."
                }
            }
        },
        {
            "data": {
                "id": "WixCompany",
                "label": "Wix.com, Inc",
                "type": "Company",
                "properties": {
                    "url": "https://wix.com/",
                    "country": "Israel"
                }
            }
        },
        {
            "data": {
                "id": "WixStudio",
                "label": "Wix Studio",
                "type": "Product",
                "properties": {
                    "url": "https://wix.com/",
                    "description": "Wix Studio is our intuitive web platform for creative, fast-paced teams at agencies and enterprises to create, develop and manage exceptional web projects, with hyper efficiency. Agencies get advanced design capabilities, extensive AI solutions, flexible dev tools and custom CSS for complete creative control. Combined with an integrated workspace, the platform provides everything needed for a super seamless workflow. And teams in enterprises can work on a whole different scale with advanced multi-site management, account-level analytics, SSO, and shared CMS collections, as well as services like custom development and dedicated success managers."
                }
            }
        },
        
{
      "data": {
        "id": "aiven-open-mcp-aiven",
        "label": "Aiven Open MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Aiven-Open/mcp-aiven",
          "github": "https://github.com/Aiven-Open/mcp-aiven",
          "description": "Navigate your Aiven projects and interact with the PostgreSQL®, Apache Kafka®, ClickHouse® and OpenSearch® services"
        }
      }
    },
    {
      "data": {
        "id": "alexanderzuev-supabase-mcp-server",
        "label": "Supabase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/alexanderzuev/supabase-mcp-server",
          "github": "https://github.com/alexanderzuev/supabase-mcp-server",
          "description": "Supabase MCP Server with support for SQL query execution and database exploration tools"
        }
      }
    },
    {
      "data": {
        "id": "aliyun-alibabacloud-tablestore-mcp-server",
        "label": "Alibaba Cloud Tablestore MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/aliyun/alibabacloud-tablestore-mcp-server",
          "github": "https://github.com/aliyun/alibabacloud-tablestore-mcp-server",
          "description": "MCP service for Tablestore, features include adding documents, semantic search for documents based on vectors and scalars, RAG-friendly, and serverless"
        }
      }
    },
    {
      "data": {
        "id": "benborla29-mcp-server-mysql",
        "label": "MySQL MCP Server (NodeJS)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/benborla29/mcp-server-mysql",
          "github": "https://github.com/benborla29/mcp-server-mysql",
          "description": "MySQL database integration in NodeJS with configurable access controls and schema inspection"
        }
      }
    },
    {
      "data": {
        "id": "bytebase-dbhub",
        "label": "DBHub Universal Database MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/bytebase/dbhub",
          "github": "https://github.com/bytebase/dbhub",
          "description": "Universal database MCP server supporting mainstream databases"
        }
      }
    },
    {
      "data": {
        "id": "c4pt0r-mcp-server-tidb",
        "label": "TiDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/c4pt0r/mcp-server-tidb",
          "github": "https://github.com/c4pt0r/mcp-server-tidb",
          "description": "TiDB database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "canner-wren-engine",
        "label": "Wren Engine Semantic MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Canner/wren-engine",
          "github": "https://github.com/Canner/wren-engine",
          "description": "The Semantic Engine for Model Context Protocol(MCP) Clients and AI Agents"
        }
      }
    },
    {
      "data": {
        "id": "centralmind-gateway",
        "label": "CentralMind Gateway",
        "type": "Service",
        "properties": {
          "url": "https://github.com/centralmind/gateway",
          "github": "https://github.com/centralmind/gateway",
          "description": "MCP and MCP SSE Server that automatically generate API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase"
        }
      }
    },
    {
      "data": {
        "id": "christianhinge-dicom-mcp",
        "label": "DICOM MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ChristianHinge/dicom-mcp",
          "github": "https://github.com/ChristianHinge/dicom-mcp",
          "description": "DICOM integration to query, read, and move medical images and reports from PACS and other DICOM compliant systems"
        }
      }
    },
    {
      "data": {
        "id": "chroma-core-chroma-mcp",
        "label": "Chroma MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/chroma-core/chroma-mcp",
          "github": "https://github.com/chroma-core/chroma-mcp",
          "description": "Chroma MCP server to access local and cloud Chroma instances for retrieval capabilities"
        }
      }
    },
    {
      "data": {
        "id": "clickhouse-mcp-clickhouse",
        "label": "ClickHouse MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ClickHouse/mcp-clickhouse",
          "github": "https://github.com/ClickHouse/mcp-clickhouse",
          "description": "ClickHouse database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "confluentinc-mcp-confluent",
        "label": "Confluent MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/confluentinc/mcp-confluent",
          "github": "https://github.com/confluentinc/mcp-confluent",
          "description": "Confluent integration to interact with Confluent Kafka and Confluent Cloud REST APIs"
        }
      }
    },
    {
      "data": {
        "id": "couchbase-ecosystem-mcp-server-couchbase",
        "label": "Couchbase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
          "github": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
          "description": "Couchbase MCP server provides unfied access to both Capella cloud and self-managed clusters for document operations, SQL++ queries and natural language data analysis"
        }
      }
    },
    {
      "data": {
        "id": "cr7258-elasticsearch-mcp-server",
        "label": "Elasticsearch MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/cr7258/elasticsearch-mcp-server",
          "github": "https://github.com/cr7258/elasticsearch-mcp-server",
          "description": "MCP Server implementation that provides Elasticsearch interaction"
        }
      }
    },
    {
      "data": {
        "id": "crystaldba-postgres-mcp",
        "label": "Postgres MCP (CrystalDBA)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/crystaldba/postgres-mcp",
          "github": "https://github.com/crystaldba/postgres-mcp",
          "description": "All-in-one MCP server for Postgres development and operations, with tools for performance analysis, tuning, and health checks"
        }
      }
    },
    {
      "data": {
        "id": "dataring-engineering-mcp-server-trino",
        "label": "Trino MCP Server (Dataring)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Dataring-engineering/mcp-server-trino",
          "github": "https://github.com/Dataring-engineering/mcp-server-trino",
          "description": "Trino MCP Server to query and access data from Trino Clusters"
        }
      }
    },
    {
      "data": {
        "id": "tuannvm-mcp-trino",
        "label": "Trino MCP Server (Go)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/tuannvm/mcp-trino",
          "github": "https://github.com/tuannvm/mcp-trino",
          "description": "A Go implementation of a Model Context Protocol (MCP) server for Trino"
        }
      }
    },
    {
      "data": {
        "id": "designcomputer-mysql-mcp-server",
        "label": "MySQL MCP Server (DesignComputer)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/designcomputer/mysql_mcp_server",
          "github": "https://github.com/designcomputer/mysql_mcp_server",
          "description": "MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines"
        }
      }
    },
    {
      "data": {
        "id": "wenb1n-dev-mysql-mcp-server-pro",
        "label": "MySQL MCP Server Pro",
        "type": "Service",
        "properties": {
          "url": "https://github.com/wenb1n-dev/mysql_mcp_server_pro",
          "github": "https://github.com/wenb1n-dev/mysql_mcp_server_pro",
          "description": "Supports SSE, STDIO; not only limited to MySQL's CRUD functionality; also includes database exception analysis capabilities; controls database permissions based on roles; and makes it easy for developers to extend tools with customization"
        }
      }
    },
    {
      "data": {
        "id": "domdomegg-airtable-mcp-server",
        "label": "Airtable MCP Server (DomDomegg)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/domdomegg/airtable-mcp-server",
          "github": "https://github.com/domdomegg/airtable-mcp-server",
          "description": "Airtable database integration with schema inspection, read and write capabilities"
        }
      }
    },
    {
      "data": {
        "id": "edwinbernadus-nocodb-mcp-server",
        "label": "NocoDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/edwinbernadus/nocodb-mcp-server",
          "github": "https://github.com/edwinbernadus/nocodb-mcp-server",
          "description": "Nocodb database integration, read and write capabilities"
        }
      }
    },
    {
      "data": {
        "id": "ergut-mcp-bigquery-server",
        "label": "BigQuery MCP Server (Ergut)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ergut/mcp-bigquery-server",
          "github": "https://github.com/ergut/mcp-bigquery-server",
          "description": "Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities"
        }
      }
    },
    {
      "data": {
        "id": "f4ww4z-mcp-mysql-server",
        "label": "MySQL MCP Server (Node.js)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/f4ww4z/mcp-mysql-server",
          "github": "https://github.com/f4ww4z/mcp-mysql-server",
          "description": "Node.js-based MySQL database integration that provides secure MySQL database operations"
        }
      }
    },
    {
      "data": {
        "id": "fireproof-storage-mcp-database-server",
        "label": "Fireproof Database MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/fireproof-storage/mcp-database-server",
          "github": "https://github.com/fireproof-storage/mcp-database-server",
          "description": "Fireproof ledger database with multi-user sync"
        }
      }
    },
    {
      "data": {
        "id": "freepeak-db-mcp-server",
        "label": "DB MCP Server (FreePeak)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/FreePeak/db-mcp-server",
          "github": "https://github.com/FreePeak/db-mcp-server",
          "description": "A high-performance multi-database MCP server built with Golang, supporting MySQL & PostgreSQL (NoSQL coming soon). Includes built-in tools for query execution, transaction management, schema exploration, query building, and performance analysis, with seamless Cursor integration for enhanced database workflows"
        }
      }
    },
    {
      "data": {
        "id": "furey-mongodb-lens",
        "label": "MongoDB Lens",
        "type": "Service",
        "properties": {
          "url": "https://github.com/furey/mongodb-lens",
          "github": "https://github.com/furey/mongodb-lens",
          "description": "MongoDB Lens: Full Featured MCP Server for MongoDB Databases"
        }
      }
    },
    {
      "data": {
        "id": "gannonh-firebase-mcp",
        "label": "Firebase MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/gannonh/firebase-mcp",
          "github": "https://github.com/gannonh/firebase-mcp",
          "description": "Firebase services including Auth, Firestore and Storage"
        }
      }
    },
    {
      "data": {
        "id": "get-convex-convex-backend",
        "label": "Convex Backend MCP",
        "type": "Service",
        "properties": {
          "url": "https://github.com/get-convex/convex-backend",
          "github": "https://github.com/get-convex/convex-backend",
          "description": "Convex database integration to introspect tables, functions, and run oneoff queries"
        }
      }
    },
    {
      "data": {
        "id": "googleapis-genai-toolbox",
        "label": "Google GenAI Toolbox",
        "type": "Service",
        "properties": {
          "url": "https://github.com/googleapis/genai-toolbox",
          "github": "https://github.com/googleapis/genai-toolbox",
          "description": "Open source MCP server specializing in easy, fast, and secure tools for Databases"
        }
      }
    },
    {
      "data": {
        "id": "greptimeteam-greptimedb-mcp-server",
        "label": "GreptimeDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
          "github": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
          "description": "MCP Server for querying GreptimeDB"
        }
      }
    },
    {
      "data": {
        "id": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "label": "SQLite Explorer FastMCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server",
          "github": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server",
          "description": "An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation"
        }
      }
    },
    {
      "data": {
        "id": "idoru-influxdb-mcp-server",
        "label": "InfluxDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/idoru/influxdb-mcp-server",
          "github": "https://github.com/idoru/influxdb-mcp-server",
          "description": "Run queries against InfluxDB OSS API v2"
        }
      }
    },
    {
      "data": {
        "id": "isaacwasserman-mcp-snowflake-server",
        "label": "Snowflake MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
          "github": "https://github.com/isaacwasserman/mcp-snowflake-server",
          "description": "Snowflake integration implementing read and (optional) write operations as well as insight tracking"
        }
      }
    },
    {
      "data": {
        "id": "joshuarileydev-supabase-mcp-server",
        "label": "Supabase MCP Server (Joshua Riley)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/joshuarileydev/supabase-mcp-server",
          "github": "https://github.com/joshuarileydev/supabase-mcp-server",
          "description": "Supabase MCP Server for managing and creating projects and organisations in Supabase"
        }
      }
    },
    {
      "data": {
        "id": "jovezhong-mcp-timeplus",
        "label": "Timeplus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/jovezhong/mcp-timeplus",
          "github": "https://github.com/jovezhong/mcp-timeplus",
          "description": "MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus"
        }
      }
    },
    {
      "data": {
        "id": "kashiwabyte-vikingdb-mcp-server",
        "label": "VikingDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/KashiwaByte/vikingdb-mcp-server",
          "github": "https://github.com/KashiwaByte/vikingdb-mcp-server",
          "description": "VikingDB integration with collection and index introduction, vector store and search capabilities"
        }
      }
    },
    {
      "data": {
        "id": "kiliczsh-mcp-mongo-server",
        "label": "MongoDB MCP Server (Kiliczsh)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/kiliczsh/mcp-mongo-server",
          "github": "https://github.com/kiliczsh/mcp-mongo-server",
          "description": "A Model Context Protocol Server for MongoDB"
        }
      }
    },
    {
      "data": {
        "id": "ktanaka101-mcp-server-duckdb",
        "label": "DuckDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ktanaka101/mcp-server-duckdb",
          "github": "https://github.com/ktanaka101/mcp-server-duckdb",
          "description": "DuckDB database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "lucashild-mcp-server-bigquery",
        "label": "BigQuery MCP Server (Lucas Hild)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/LucasHild/mcp-server-bigquery",
          "github": "https://github.com/LucasHild/mcp-server-bigquery",
          "description": "BigQuery database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "quarkiverse-mcp-server-jdbc",
        "label": "JDBC MCP Server (Quarkiverse)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/quarkiverse/mcp-server-jdbc",
          "github": "https://github.com/quarkiverse/mcp-server-jdbc",
          "description": "Connect to any JDBC-compatible database and query, insert, update, delete, and more"
        }
      }
    },
    {
      "data": {
        "id": "jparkerweb-mcp-sqlite",
        "label": "SQLite MCP Server (JParkerWeb)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/jparkerweb/mcp-sqlite",
          "github": "https://github.com/jparkerweb/mcp-sqlite",
          "description": "Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities"
        }
      }
    },
    {
      "data": {
        "id": "memgraph-mcp-memgraph",
        "label": "Memgraph MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/memgraph/mcp-memgraph",
          "github": "https://github.com/memgraph/mcp-memgraph",
          "description": "Memgraph MCP Server - includes a tool to run a query against Memgraph and a schema resource"
        }
      }
    },
    {
      "data": {
        "id": "modelcontextprotocol-server-postgres",
        "label": "PostgreSQL MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/modelcontextprotocol/server-postgres",
          "github": "https://github.com/modelcontextprotocol/server-postgres",
          "description": "PostgreSQL database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "modelcontextprotocol-server-sqlite",
        "label": "SQLite MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/modelcontextprotocol/server-sqlite",
          "github": "https://github.com/modelcontextprotocol/server-sqlite",
          "description": "SQLite database operations with built-in analysis features"
        }
      }
    },
    {
      "data": {
        "id": "neo4j-contrib-mcp-neo4j",
        "label": "Neo4j MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/neo4j-contrib/mcp-neo4j",
          "github": "https://github.com/neo4j-contrib/mcp-neo4j",
          "description": "Model Context Protocol with Neo4j (Run queries, Knowledge Graph Memory, Manaage Neo4j Aura Instances)"
        }
      }
    },
    {
      "data": {
        "id": "neondatabase-mcp-server-neon",
        "label": "Neon MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/neondatabase/mcp-server-neon",
          "github": "https://github.com/neondatabase/mcp-server-neon",
          "description": "An MCP Server for creating and managing Postgres databases using Neon Serverless Postgres"
        }
      }
    },
    {
      "data": {
        "id": "niledatabase-nile-mcp-server",
        "label": "Nile MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/niledatabase/nile-mcp-server",
          "github": "https://github.com/niledatabase/nile-mcp-server",
          "description": "MCP server for Nile's Postgres platform - Manage and query Postgres databases, tenants, users, auth using LLMs"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-odbc",
        "label": "ODBC MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/openlink/mcp-server-odbc",
          "github": "https://github.com/openlink/mcp-server-odbc",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Open Database Connectivity (ODBC) protocol"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-sqlalchemy",
        "label": "SQLAlchemy MCP Server (OpenLink)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/openlink/mcp-server-sqlalchemy",
          "github": "https://github.com/openlink/mcp-server-sqlalchemy",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via SQLAlchemy using Python ODBC (pyodbc)"
        }
      }
    },
    {
      "data": {
        "id": "pab1it0-adx-mcp-server",
        "label": "Azure Data Explorer MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/pab1it0/adx-mcp-server",
          "github": "https://github.com/pab1it0/adx-mcp-server",
          "description": "Query and analyze Azure Data Explorer databases"
        }
      }
    },
    {
      "data": {
        "id": "pab1it0-prometheus-mcp-server",
        "label": "Prometheus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/pab1it0/prometheus-mcp-server",
          "github": "https://github.com/pab1it0/prometheus-mcp-server",
          "description": "Query and analyze Prometheus, open-source monitoring system"
        }
      }
    },
    {
      "data": {
        "id": "prisma-prisma",
        "label": "Prisma MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/prisma/prisma",
          "github": "https://github.com/prisma/prisma",
          "description": "Gives LLMs the ability to manage Prisma Postgres databases (e.g. spin up new database instances or run schema migrations)"
        }
      }
    },
    {
      "data": {
        "id": "qdrant-mcp-server-qdrant",
        "label": "Qdrant MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/qdrant/mcp-server-qdrant",
          "github": "https://github.com/qdrant/mcp-server-qdrant",
          "description": "A Qdrant MCP server"
        }
      }
    },
    {
      "data": {
        "id": "quantgeekdev-mongo-mcp",
        "label": "MongoDB MCP Server (QuantGeekDev)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/QuantGeekDev/mongo-mcp",
          "github": "https://github.com/QuantGeekDev/mongo-mcp",
          "description": "MongoDB integration that enables LLMs to interact directly with databases"
        }
      }
    },
    {
      "data": {
        "id": "rashidazarang-airtable-mcp",
        "label": "Airtable MCP Server (Rashid)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/rashidazarang/airtable-mcp",
          "github": "https://github.com/rashidazarang/airtable-mcp",
          "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language. Features include base management, table operations, schema manipulation, record filtering, and data migration through a standardized MCP interface"
        }
      }
    },
    {
      "data": {
        "id": "redis-mcp-redis",
        "label": "Redis MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/redis/mcp-redis",
          "github": "https://github.com/redis/mcp-redis",
          "description": "The Redis official MCP Server offers an interface to manage and search data in Redis"
        }
      }
    },
    {
      "data": {
        "id": "runekaagaard-mcp-alchemy",
        "label": "SQLAlchemy MCP Server (Universal)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/runekaagaard/mcp-alchemy",
          "github": "https://github.com/runekaagaard/mcp-alchemy",
          "description": "Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases. Features schema and relationship inspection, and large dataset analysis capabilities"
        }
      }
    },
    {
      "data": {
        "id": "sirmews-mcp-pinecone",
        "label": "Pinecone MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/sirmews/mcp-pinecone",
          "github": "https://github.com/sirmews/mcp-pinecone",
          "description": "Pinecone integration with vector search capabilities"
        }
      }
    },
    {
      "data": {
        "id": "skysqlinc-skysql-mcp",
        "label": "SkySQL MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/skysqlinc/skysql-mcp",
          "github": "https://github.com/skysqlinc/skysql-mcp",
          "description": "Serverless MariaDB Cloud DB MCP server. Tools to launch, delete, execute SQL and work with DB level AI agents for accurate text-2-sql and conversations"
        }
      }
    },
    {
      "data": {
        "id": "supabase-community-supabase-mcp",
        "label": "Supabase MCP Server (Official)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/supabase-community/supabase-mcp",
          "github": "https://github.com/supabase-community/supabase-mcp",
          "description": "Official Supabase MCP server to connect AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data"
        }
      }
    },
    {
      "data": {
        "id": "theralabs-legion-mcp",
        "label": "Legion MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/TheRaLabs/legion-mcp",
          "github": "https://github.com/TheRaLabs/legion-mcp",
          "description": "Universal database MCP server supporting multiple database types including PostgreSQL, Redshift, CockroachDB, MySQL, RDS MySQL, Microsoft SQL Server, BigQuery, Oracle DB, and SQLite"
        }
      }
    },
    {
      "data": {
        "id": "tradercjz-dolphindb-mcp-server",
        "label": "DolphinDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/tradercjz/dolphindb-mcp-server",
          "github": "https://github.com/tradercjz/dolphindb-mcp-server",
          "description": "DolphinDB database integration with schema inspection and query capabilities"
        }
      }
    },
    {
      "data": {
        "id": "weaviate-mcp-server-weaviate",
        "label": "Weaviate MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/weaviate/mcp-server-weaviate",
          "github": "https://github.com/weaviate/mcp-server-weaviate",
          "description": "An MCP Server to connect to your Weaviate collections as a knowledge base as well as using Weaviate as a chat memory store"
        }
      }
    },
    {
      "data": {
        "id": "xgenerationlab-xiyan-mcp-server",
        "label": "XiyanSQL MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/XGenerationLab/xiyan_mcp_server",
          "github": "https://github.com/XGenerationLab/xiyan_mcp_server",
          "description": "An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM"
        }
      }
    },
    {
      "data": {
        "id": "xing5-mcp-google-sheets",
        "label": "Google Sheets MCP Server (Xing5)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/xing5/mcp-google-sheets",
          "github": "https://github.com/xing5/mcp-google-sheets",
          "description": "A Model Context Protocol server for interacting with Google Sheets. This server provides tools to create, read, update, and manage spreadsheets through the Google Sheets API"
        }
      }
    },
    {
      "data": {
        "id": "freema-mcp-gsheets",
        "label": "Google Sheets MCP Server (Freema)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/freema/mcp-gsheets",
          "github": "https://github.com/freema/mcp-gsheets",
          "description": "MCP server for Google Sheets API integration with comprehensive reading, writing, formatting, and sheet management capabilities"
        }
      }
    },
    {
      "data": {
        "id": "zhwt-go-mcp-mysql",
        "label": "MySQL MCP Server (Go)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/Zhwt/go-mcp-mysql",
          "github": "https://github.com/Zhwt/go-mcp-mysql",
          "description": "Easy to use, zero dependency MySQL MCP server built with Golang with configurable readonly mode and schema inspection"
        }
      }
    },
    {
      "data": {
        "id": "ydb-ydb-mcp",
        "label": "YDB MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/ydb/ydb-mcp",
          "github": "https://github.com/ydb/ydb-mcp",
          "description": "MCP server for interacting with YDB databases"
        }
      }
    },
    {
      "data": {
        "id": "zilliztech-mcp-server-milvus",
        "label": "Milvus MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/zilliztech/mcp-server-milvus",
          "github": "https://github.com/zilliztech/mcp-server-milvus",
          "description": "MCP Server for Milvus / Zilliz, making it possible to interact with your database"
        }
      }
    },
    {
      "data": {
        "id": "openlink-mcp-server-jdbc",
        "label": "JDBC MCP Server (OpenLink)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/openlink/mcp-server-jdbc",
          "github": "https://github.com/openlink/mcp-server-jdbc",
          "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Java Database Connectivity (JDBC) protocol"
        }
      }
    },
    {
      "data": {
        "id": "yincongcyincong-victoriametrics-mcp-server",
        "label": "VictoriaMetrics MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/yincongcyincong/VictoriaMetrics-mcp-server",
          "github": "https://github.com/yincongcyincong/VictoriaMetrics-mcp-server",
          "description": "An MCP server for interacting with VictoriaMetrics database"
        }
      }
    },
    {
      "data": {
        "id": "hydrolix-mcp-hydrolix",
        "label": "Hydrolix MCP Server",
        "type": "Service",
        "properties": {
          "url": "https://github.com/hydrolix/mcp-hydrolix",
          "github": "https://github.com/hydrolix/mcp-hydrolix",
          "description": "Hydrolix time-series datalake integration providing schema exploration and query capabilities to LLM-based workflows"
        }
      }
    },
    {
      "data": {
        "id": "davewind-mysql-mcp-server",
        "label": "MySQL MCP Server (DaveWind)",
        "type": "Service",
        "properties": {
          "url": "https://github.com/davewind/mysql-mcp-server",
          "github": "https://github.com/davewind/mysql-mcp-server",
          "description": "A user-friendly read-only mysql mcp server for cursor and n8n"
        }
      }
    },
    {
        "data": {
            "id": "Database",
            "label": "Database",
            "type": "UseCase"
        }
    }


        

    ],
    "edges": [
        {
      "data": {
        "id": "edge-use-case--aiven-open-mcp-aiven",
        "source": "aiven-open-mcp-aiven",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--alexanderzuev-supabase-mcp-server",
        "source": "alexanderzuev-supabase-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--aliyun-alibabacloud-tablestore-mcp-server",
        "source": "aliyun-alibabacloud-tablestore-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--benborla29-mcp-server-mysql",
        "source": "benborla29-mcp-server-mysql",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--bytebase-dbhub",
        "source": "bytebase-dbhub",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--c4pt0r-mcp-server-tidb",
        "source": "c4pt0r-mcp-server-tidb",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--canner-wren-engine",
        "source": "canner-wren-engine",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--centralmind-gateway",
        "source": "centralmind-gateway",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--christianhinge-dicom-mcp",
        "source": "christianhinge-dicom-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--chroma-core-chroma-mcp",
        "source": "chroma-core-chroma-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--clickhouse-mcp-clickhouse",
        "source": "clickhouse-mcp-clickhouse",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--confluentinc-mcp-confluent",
        "source": "confluentinc-mcp-confluent",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--couchbase-ecosystem-mcp-server-couchbase",
        "source": "couchbase-ecosystem-mcp-server-couchbase",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--cr7258-elasticsearch-mcp-server",
        "source": "cr7258-elasticsearch-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--crystaldba-postgres-mcp",
        "source": "crystaldba-postgres-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--dataring-engineering-mcp-server-trino",
        "source": "dataring-engineering-mcp-server-trino",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--tuannvm-mcp-trino",
        "source": "tuannvm-mcp-trino",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--designcomputer-mysql-mcp-server",
        "source": "designcomputer-mysql-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--wenb1n-dev-mysql-mcp-server-pro",
        "source": "wenb1n-dev-mysql-mcp-server-pro",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--domdomegg-airtable-mcp-server",
        "source": "domdomegg-airtable-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--edwinbernadus-nocodb-mcp-server",
        "source": "edwinbernadus-nocodb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ergut-mcp-bigquery-server",
        "source": "ergut-mcp-bigquery-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--f4ww4z-mcp-mysql-server",
        "source": "f4ww4z-mcp-mysql-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--fireproof-storage-mcp-database-server",
        "source": "fireproof-storage-mcp-database-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--freepeak-db-mcp-server",
        "source": "freepeak-db-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--furey-mongodb-lens",
        "source": "furey-mongodb-lens",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--gannonh-firebase-mcp",
        "source": "gannonh-firebase-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--get-convex-convex-backend",
        "source": "get-convex-convex-backend",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--googleapis-genai-toolbox",
        "source": "googleapis-genai-toolbox",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--greptimeteam-greptimedb-mcp-server",
        "source": "greptimeteam-greptimedb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "source": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--idoru-influxdb-mcp-server",
        "source": "idoru-influxdb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--isaacwasserman-mcp-snowflake-server",
        "source": "isaacwasserman-mcp-snowflake-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--joshuarileydev-supabase-mcp-server",
        "source": "joshuarileydev-supabase-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--jovezhong-mcp-timeplus",
        "source": "jovezhong-mcp-timeplus",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--kashiwabyte-vikingdb-mcp-server",
        "source": "kashiwabyte-vikingdb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--kiliczsh-mcp-mongo-server",
        "source": "kiliczsh-mcp-mongo-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ktanaka101-mcp-server-duckdb",
        "source": "ktanaka101-mcp-server-duckdb",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--lucashild-mcp-server-bigquery",
        "source": "lucashild-mcp-server-bigquery",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--quarkiverse-mcp-server-jdbc",
        "source": "quarkiverse-mcp-server-jdbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--jparkerweb-mcp-sqlite",
        "source": "jparkerweb-mcp-sqlite",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--memgraph-mcp-memgraph",
        "source": "memgraph-mcp-memgraph",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--modelcontextprotocol-server-postgres",
        "source": "modelcontextprotocol-server-postgres",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--modelcontextprotocol-server-sqlite",
        "source": "modelcontextprotocol-server-sqlite",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--neo4j-contrib-mcp-neo4j",
        "source": "neo4j-contrib-mcp-neo4j",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--neondatabase-mcp-server-neon",
        "source": "neondatabase-mcp-server-neon",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--niledatabase-nile-mcp-server",
        "source": "niledatabase-nile-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-odbc",
        "source": "openlink-mcp-server-odbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-sqlalchemy",
        "source": "openlink-mcp-server-sqlalchemy",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--pab1it0-adx-mcp-server",
        "source": "pab1it0-adx-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--pab1it0-prometheus-mcp-server",
        "source": "pab1it0-prometheus-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--prisma-prisma",
        "source": "prisma-prisma",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--qdrant-mcp-server-qdrant",
        "source": "qdrant-mcp-server-qdrant",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--quantgeekdev-mongo-mcp",
        "source": "quantgeekdev-mongo-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--rashidazarang-airtable-mcp",
        "source": "rashidazarang-airtable-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--redis-mcp-redis",
        "source": "redis-mcp-redis",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--runekaagaard-mcp-alchemy",
        "source": "runekaagaard-mcp-alchemy",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--sirmews-mcp-pinecone",
        "source": "sirmews-mcp-pinecone",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--skysqlinc-skysql-mcp",
        "source": "skysqlinc-skysql-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--supabase-community-supabase-mcp",
        "source": "supabase-community-supabase-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--theralabs-legion-mcp",
        "source": "theralabs-legion-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--tradercjz-dolphindb-mcp-server",
        "source": "tradercjz-dolphindb-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--weaviate-mcp-server-weaviate",
        "source": "weaviate-mcp-server-weaviate",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--xgenerationlab-xiyan-mcp-server",
        "source": "xgenerationlab-xiyan-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--xing5-mcp-google-sheets",
        "source": "xing5-mcp-google-sheets",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--freema-mcp-gsheets",
        "source": "freema-mcp-gsheets",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--zhwt-go-mcp-mysql",
        "source": "zhwt-go-mcp-mysql",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--ydb-ydb-mcp",
        "source": "ydb-ydb-mcp",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--zilliztech-mcp-server-milvus",
        "source": "zilliztech-mcp-server-milvus",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--openlink-mcp-server-jdbc",
        "source": "openlink-mcp-server-jdbc",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--yincongcyincong-victoriametrics-mcp-server",
        "source": "yincongcyincong-victoriametrics-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--hydrolix-mcp-hydrolix",
        "source": "hydrolix-mcp-hydrolix",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
    {
      "data": {
        "id": "edge-use-case--davewind-mysql-mcp-server",
        "source": "davewind-mysql-mcp-server",
        "target": "Database",
        "label": "IN_AREA"
      }
    },
        {
      "data": {
        "id": "edge-aiven-open-mcp-aiven",
        "source": "aiven-open-mcp-aiven",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-alexanderzuev-supabase-mcp-server",
        "source": "alexanderzuev-supabase-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-aliyun-alibabacloud-tablestore-mcp-server",
        "source": "aliyun-alibabacloud-tablestore-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-benborla29-mcp-server-mysql",
        "source": "benborla29-mcp-server-mysql",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-bytebase-dbhub",
        "source": "bytebase-dbhub",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-c4pt0r-mcp-server-tidb",
        "source": "c4pt0r-mcp-server-tidb",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-canner-wren-engine",
        "source": "canner-wren-engine",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-centralmind-gateway",
        "source": "centralmind-gateway",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-christianhinge-dicom-mcp",
        "source": "christianhinge-dicom-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-chroma-core-chroma-mcp",
        "source": "chroma-core-chroma-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-clickhouse-mcp-clickhouse",
        "source": "clickhouse-mcp-clickhouse",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-confluentinc-mcp-confluent",
        "source": "confluentinc-mcp-confluent",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-couchbase-ecosystem-mcp-server-couchbase",
        "source": "couchbase-ecosystem-mcp-server-couchbase",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-cr7258-elasticsearch-mcp-server",
        "source": "cr7258-elasticsearch-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-crystaldba-postgres-mcp",
        "source": "crystaldba-postgres-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-dataring-engineering-mcp-server-trino",
        "source": "dataring-engineering-mcp-server-trino",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-tuannvm-mcp-trino",
        "source": "tuannvm-mcp-trino",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-designcomputer-mysql-mcp-server",
        "source": "designcomputer-mysql-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-wenb1n-dev-mysql-mcp-server-pro",
        "source": "wenb1n-dev-mysql-mcp-server-pro",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-domdomegg-airtable-mcp-server",
        "source": "domdomegg-airtable-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-edwinbernadus-nocodb-mcp-server",
        "source": "edwinbernadus-nocodb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ergut-mcp-bigquery-server",
        "source": "ergut-mcp-bigquery-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-f4ww4z-mcp-mysql-server",
        "source": "f4ww4z-mcp-mysql-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-fireproof-storage-mcp-database-server",
        "source": "fireproof-storage-mcp-database-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-freepeak-db-mcp-server",
        "source": "freepeak-db-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-furey-mongodb-lens",
        "source": "furey-mongodb-lens",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-gannonh-firebase-mcp",
        "source": "gannonh-firebase-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-get-convex-convex-backend",
        "source": "get-convex-convex-backend",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-googleapis-genai-toolbox",
        "source": "googleapis-genai-toolbox",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-greptimeteam-greptimedb-mcp-server",
        "source": "greptimeteam-greptimedb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "source": "hannesrudolph-sqlite-explorer-fastmcp-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-idoru-influxdb-mcp-server",
        "source": "idoru-influxdb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-isaacwasserman-mcp-snowflake-server",
        "source": "isaacwasserman-mcp-snowflake-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-joshuarileydev-supabase-mcp-server",
        "source": "joshuarileydev-supabase-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-jovezhong-mcp-timeplus",
        "source": "jovezhong-mcp-timeplus",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kashiwabyte-vikingdb-mcp-server",
        "source": "kashiwabyte-vikingdb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-kiliczsh-mcp-mongo-server",
        "source": "kiliczsh-mcp-mongo-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ktanaka101-mcp-server-duckdb",
        "source": "ktanaka101-mcp-server-duckdb",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-lucashild-mcp-server-bigquery",
        "source": "lucashild-mcp-server-bigquery",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-quarkiverse-mcp-server-jdbc",
        "source": "quarkiverse-mcp-server-jdbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-jparkerweb-mcp-sqlite",
        "source": "jparkerweb-mcp-sqlite",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-memgraph-mcp-memgraph",
        "source": "memgraph-mcp-memgraph",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-postgres",
        "source": "modelcontextprotocol-server-postgres",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-modelcontextprotocol-server-sqlite",
        "source": "modelcontextprotocol-server-sqlite",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-neo4j-contrib-mcp-neo4j",
        "source": "neo4j-contrib-mcp-neo4j",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-neondatabase-mcp-server-neon",
        "source": "neondatabase-mcp-server-neon",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-niledatabase-nile-mcp-server",
        "source": "niledatabase-nile-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-odbc",
        "source": "openlink-mcp-server-odbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-sqlalchemy",
        "source": "openlink-mcp-server-sqlalchemy",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pab1it0-adx-mcp-server",
        "source": "pab1it0-adx-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-pab1it0-prometheus-mcp-server",
        "source": "pab1it0-prometheus-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-prisma-prisma",
        "source": "prisma-prisma",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-qdrant-mcp-server-qdrant",
        "source": "qdrant-mcp-server-qdrant",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-quantgeekdev-mongo-mcp",
        "source": "quantgeekdev-mongo-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-rashidazarang-airtable-mcp",
        "source": "rashidazarang-airtable-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-redis-mcp-redis",
        "source": "redis-mcp-redis",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-runekaagaard-mcp-alchemy",
        "source": "runekaagaard-mcp-alchemy",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-sirmews-mcp-pinecone",
        "source": "sirmews-mcp-pinecone",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-skysqlinc-skysql-mcp",
        "source": "skysqlinc-skysql-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-supabase-community-supabase-mcp",
        "source": "supabase-community-supabase-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-theralabs-legion-mcp",
        "source": "theralabs-legion-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-tradercjz-dolphindb-mcp-server",
        "source": "tradercjz-dolphindb-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-weaviate-mcp-server-weaviate",
        "source": "weaviate-mcp-server-weaviate",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xgenerationlab-xiyan-mcp-server",
        "source": "xgenerationlab-xiyan-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-xing5-mcp-google-sheets",
        "source": "xing5-mcp-google-sheets",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-freema-mcp-gsheets",
        "source": "freema-mcp-gsheets",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-zhwt-go-mcp-mysql",
        "source": "zhwt-go-mcp-mysql",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-ydb-ydb-mcp",
        "source": "ydb-ydb-mcp",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-zilliztech-mcp-server-milvus",
        "source": "zilliztech-mcp-server-milvus",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-openlink-mcp-server-jdbc",
        "source": "openlink-mcp-server-jdbc",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-yincongcyincong-victoriametrics-mcp-server",
        "source": "yincongcyincong-victoriametrics-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-hydrolix-mcp-hydrolix",
        "source": "hydrolix-mcp-hydrolix",
        "target": "MCP",
        "label": "SERVER"
      }
    },
    {
      "data": {
        "id": "edge-davewind-mysql-mcp-server",
        "source": "davewind-mysql-mcp-server",
        "target": "MCP",
        "label": "SERVER"
      }
    },
        {
            "data": {
                "id": "e-Wix-WixStudio",
                "source": "WixCompany",
                "target": "WixStudio",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-WixStudio-use-case",
                "source": "WixStudio",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-Wix-Base44",
                "source": "WixCompany",
                "target": "Base44Company",
                "label": "ACQUIRED"
            }
        },
        {
            "data": {
                "id": "e-agent-protocol-lanchain",
                "source": "LangChainCompany",
                "target": "AgentProtocol",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-lanchain-agntcy",
                "source": "LangChainCompany",
                "target": "Agntcy",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-langgraph-agent-protocol",
                "source": "LangGraph",
                "target": "AgentProtocol",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-ggml-llama-cpp",
                "source": "ggmlai",
                "target": "LlamaCpp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-ggml-whisper-cpp",
                "source": "ggmlai",
                "target": "WhisperCpp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-whisper-cpp-use-case",
                "source": "WhisperCpp",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-lmcache-use-case",
                "source": "lmcache",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-alibaba-agentscope",
                "source": "AlibabaCompany",
                "target": "agentscope",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-agentle-langsmith",
                "source": "agentle",
                "target": "LangSmith",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-agentle-use-case",
                "source": "agentle",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-agentle-mcp",
                "source": "agentle",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-humanailabs-personalai",
                "source": "HumanAILabs",
                "target": "PersonalAI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-personalai-use-case",
                "source": "PersonalAI",
                "target": "AgentPlatform",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-microsoft-microsoft-playwright-mcp",
                "source": "Microsoft",
                "target": "microsoft-playwright-mcp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-mastra-ag-ui",
                "source": "Mastra",
                "target": "ag-ui-protocol",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-mastra-mcp",
                "source": "Mastra",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-mastra-rag",
                "source": "Mastra",
                "target": "RAG",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-AG2-ag-ui",
                "source": "AG2",
                "target": "ag-ui-protocol",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-langgraph-ag-ui",
                "source": "LangGraph",
                "target": "ag-ui-protocol",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-crewai-ag-ui",
                "source": "CrewAI",
                "target": "ag-ui-protocol",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e-YCombinator-KeywordsAICompany",
                "source": "YCombinator",
                "target": "KeywordsAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-KeywordsAI-company-product",
                "source": "KeywordsAICompany",
                "target": "KeywordsAI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-MaximAI-company-product",
                "source": "MaximAICompany",
                "target": "MaximAI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-CometML-company-product",
                "source": "CometMLCompany",
                "target": "Opik",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-Galileo-company-product",
                "source": "GalileoCompany",
                "target": "Galileo",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-Portkey-company-product",
                "source": "PortkeyCompany",
                "target": "portkey",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-gateway-company-product",
                "source": "PortkeyCompany",
                "target": "gateway",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-KeywordsAI-use-case",
                "source": "KeywordsAI",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-Scorecard-use-case",
                "source": "Scorecard",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-AgentOps-use-case",
                "source": "AgentOps",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-Braintrust-use-case",
                "source": "Braintrust",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-MLFlow-use-case",
                "source": "MLFlow",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-FutureAGI-use-case",
                "source": "FutureAGI",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-Phoeniz-use-case",
                "source": "Phoeniz",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-WeightAndBiases-use-case",
                "source": "WeightAndBiases",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-MaximAI-use-case",
                "source": "MaximAI",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-Opik-use-case",
                "source": "Opik",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-monocle-use-case",
                "source": "monocle",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-galileo-use-case",
                "source": "Galileo",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-portkey-use-case",
                "source": "portkey",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-gateway-use-case",
                "source": "gateway",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e1",
                "source": "YCombinator",
                "target": "ContinueInc",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e2",
                "source": "continue.dev",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e3",
                "source": "ContinueInc",
                "target": "continue.dev",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e4",
                "source": "ByteDance",
                "target": "trae",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e5",
                "source": "trae",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e6",
                "source": "ClineBotInc",
                "target": "cline",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e7",
                "source": "cline",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e8",
                "source": "databutton",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e9",
                "source": "DatabuttonCompany",
                "target": "databutton",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e10",
                "source": "base44",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e11",
                "source": "Base44Company",
                "target": "base44",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e12",
                "source": "AnysphereCompany",
                "target": "cursor",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e13",
                "source": "cursor",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e14",
                "source": "WindsurfCompany",
                "target": "Windsurf",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e15",
                "source": "Windsurf",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e16",
                "source": "KleinerPerkins",
                "target": "WindsurfCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e17",
                "source": "GeneralCatalyst",
                "target": "WindsurfCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e18",
                "source": "GreenOaks",
                "target": "WindsurfCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e19",
                "source": "FoundersFund",
                "target": "WindsurfCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e20",
                "source": "bolt",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e21",
                "source": "StackBlitz",
                "target": "bolt",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e22",
                "source": "lovable",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e23",
                "source": "lovableCompany",
                "target": "lovable",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e24",
                "source": "v0",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e25",
                "source": "vercel",
                "target": "v0",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e26",
                "source": "augmentcode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e27",
                "source": "Replit",
                "target": "augmentcode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e28",
                "source": "Mocha",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e29",
                "source": "Axilla",
                "target": "Mocha",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e30",
                "source": "GithubCopilot",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e31",
                "source": "Github",
                "target": "GithubCopilot",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e32",
                "source": "RorkApp",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e33",
                "source": "RorkCompany",
                "target": "RorkApp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e34",
                "source": "Clark",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e35",
                "source": "Superblocks",
                "target": "Clark",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e36",
                "source": "FirebaseStudio",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e37",
                "source": "Google",
                "target": "FirebaseStudio",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e38",
                "source": "xAI",
                "target": "GrokStudio",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e39",
                "source": "CanvaCode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e40",
                "source": "Code",
                "target": "CanvaCode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e41",
                "source": "a0dev",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e42",
                "source": "a0devCompany",
                "target": "a0dev",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e43",
                "source": "YCombinator",
                "target": "a0devCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e44",
                "source": "Goose",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e45",
                "source": "Manus",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e46",
                "source": "OpenManus",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e47",
                "source": "agent-zero",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e48",
                "source": "Manus",
                "target": "browser-use",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e49",
                "source": "browser-use",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e50",
                "source": "openai",
                "target": "WindsurfCompany",
                "label": "ACQUIRED"
            }
        },
        {
            "data": {
                "id": "e51",
                "source": "YCombinator",
                "target": "RowboatLabs",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e52",
                "source": "RowboatLabs",
                "target": "Rowboat",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e53",
                "source": "GrokStudio",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e54",
                "source": "YCombinator",
                "target": "PearAI",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e55",
                "source": "PearAI",
                "target": "pearai-app",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e56",
                "source": "pearai-app",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e57",
                "source": "BrowserUseCompany",
                "target": "browser-use",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e58",
                "source": "YCombinator",
                "target": "BrowserUseCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e59",
                "source": "YCombinator",
                "target": "OllamaCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e60",
                "source": "OllamaCompany",
                "target": "Ollama",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e61",
                "source": "Ollama",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e62",
                "source": "Devin",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e63",
                "source": "CognitionCompany",
                "target": "Devin",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e64",
                "source": "WhimsyWorks",
                "target": "screenshot-to-code",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e65",
                "source": "screenshot-to-code",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e66",
                "source": "CrewAICompany",
                "target": "CrewAI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e67",
                "source": "CrewAI",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e68",
                "source": "Microsoft",
                "target": "AutoGen",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e69",
                "source": "Microsoft",
                "target": "SemanticKernel",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e70",
                "source": "SemanticKernel",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e71",
                "source": "AutoGen",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e72",
                "source": "LangChain",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e73",
                "source": "AutoGPT",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e74",
                "source": "llama-index",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e75",
                "source": "llama-index",
                "target": "RAG",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e76",
                "source": "LlamaIndexCompany",
                "target": "llama-index",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e77",
                "source": "Haystack",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e78",
                "source": "Haystack",
                "target": "RAG",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e79",
                "source": "MetaGPT",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e80",
                "source": "DeepsetCompany",
                "target": "Haystack",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e81",
                "source": "LangGraph",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e82",
                "source": "LangGraph",
                "target": "LangChain",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e83",
                "source": "RAG",
                "target": "VectorDB",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e84",
                "source": "RAG",
                "target": "GraphDB",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e85",
                "source": "vLLM",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e86",
                "source": "DockerModelRunner",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e87",
                "source": "open-interpreter",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e88",
                "source": "OpenHands",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e89",
                "source": "Flowise",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e90",
                "source": "AgentGPT",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e91",
                "source": "aider",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e92",
                "source": "LangFlow",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e93",
                "source": "LangFlow",
                "target": "LangChain",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e94",
                "source": "ChatDev",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e95",
                "source": "phidata",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e96",
                "source": "composio",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e97",
                "source": "storm",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e98",
                "source": "dspy",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e99",
                "source": "gpt-researcher",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e100",
                "source": "vanna",
                "target": "DataAnalysis",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e101",
                "source": "letta",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e102",
                "source": "DB-GPT",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e103",
                "source": "eliza",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e104",
                "source": "swe-agent",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e105",
                "source": "botpress",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e106",
                "source": "plandex",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e107",
                "source": "AI-Scientist",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e108",
                "source": "e2b",
                "target": "Runtime",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e109",
                "source": "WrenAI",
                "target": "DataAnalysis",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e110",
                "source": "agentscope",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e111",
                "source": "superagent",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e112",
                "source": "Microsoft",
                "target": "TaskWeaver",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e113",
                "source": "TaskWeaver",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e114",
                "source": "TaskWeaver",
                "target": "DataAnalysis",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e115",
                "source": "multi-agent-orchestrator",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e116",
                "source": "Amazon",
                "target": "multi-agent-orchestrator",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e117",
                "source": "vision-agent",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e118",
                "source": "gptme",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e119",
                "source": "gptme",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e120",
                "source": "agency-swarm",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e121",
                "source": "cody",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e122",
                "source": "langdroid",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e123",
                "source": "AGiXT",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e124",
                "source": "lagent",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e125",
                "source": "DemoGPT",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e126",
                "source": "uAgents",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e127",
                "source": "DemoGPT",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e128",
                "source": "uAgents",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e129",
                "source": "Adala",
                "target": "DataAnalysis",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e130",
                "source": "AIlice",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e131",
                "source": "dust",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e132",
                "source": "nous",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e133",
                "source": "AgentForge",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e134",
                "source": "data-to-paper",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e135",
                "source": "fastagency",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e136",
                "source": "taskgen",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e137",
                "source": "agentjo",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e138",
                "source": "aideml",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e139",
                "source": "dify",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e140",
                "source": "colossal-ai",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e141",
                "source": "witsyai",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e142",
                "source": "LlamaCpp",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e143",
                "source": "BitnetCpp",
                "target": "InfEngine",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e144",
                "source": "Microsoft",
                "target": "BitnetCpp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e145",
                "source": "Windsurf",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e146",
                "source": "cursor",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e147",
                "source": "ChatWise",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e148",
                "source": "ChatWise",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e149",
                "source": "VisualStudioCode",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e150",
                "source": "Microsoft",
                "target": "VisualStudioCode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e151",
                "source": "VisualStudioCode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e152",
                "source": "TransformersAgents",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e153",
                "source": "HuggingFace",
                "target": "TransformersAgents",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e154",
                "source": "DeepsiteAi",
                "target": "Deepsite",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e155",
                "source": "Deepsite",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e156",
                "source": "Deepsite",
                "target": "Smolagents",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e157",
                "source": "Smolagents",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e158",
                "source": "HuggingFace",
                "target": "Smolagents",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e159",
                "source": "DockerCompany",
                "target": "DockerModelRunner",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e160",
                "source": "DockerModelRunner",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "e161",
                "source": "DockerModelRunner",
                "target": "LlamaCpp",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e162",
                "source": "Deepchat",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e163",
                "source": "YGUI",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e164",
                "source": "YCLI",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e165",
                "source": "CherryStudio",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e166",
                "source": "YGUI",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e167",
                "source": "YCLI",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e168",
                "source": "CherryStudio",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e169",
                "source": "HyperChat",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e170",
                "source": "HyperChat",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e171",
                "source": "cline",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e172",
                "source": "continue.dev",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e173",
                "source": "RooCode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e174",
                "source": "RooCode",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e175",
                "source": "5ire",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e176",
                "source": "5ire",
                "target": "RAG",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e177",
                "source": "5ire",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e178",
                "source": "Lutra",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e179",
                "source": "Lutra",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e180",
                "source": "Refact",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e181",
                "source": "Refact",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e182",
                "source": "SmallCloud",
                "target": "Refact",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e183",
                "source": "ZedIndustries",
                "target": "Zed",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e184",
                "source": "Zed",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e185",
                "source": "Zed",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e186",
                "source": "MCPConnect",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e187",
                "source": "ChatMCP",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e188",
                "source": "ChatMCP",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e189",
                "source": "Google",
                "target": "A2A",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e190",
                "source": "Anthropic",
                "target": "MCP",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e191",
                "source": "IBM",
                "target": "ACP",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e192",
                "source": "YCombinator",
                "target": "MaitaiCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e193",
                "source": "Groq",
                "target": "ChipDesign",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e194",
                "source": "Groq",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e195",
                "source": "MaitaiCompany",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e198",
                "source": "Google",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e199",
                "source": "Anthropic",
                "target": "ClaudeCode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e200",
                "source": "ClaudeCode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e201",
                "source": "openai",
                "target": "ChatGPT",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e202",
                "source": "Anthropic",
                "target": "Claude",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e203",
                "source": "Langfuse",
                "target": "PromptEngineering",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e204",
                "source": "LangfuseCompany",
                "target": "Langfuse",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e205",
                "source": "YCombinator",
                "target": "LangfuseCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e206",
                "source": "Rowboat",
                "target": "AgentPlatform",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e207",
                "source": "LangSmith",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e208",
                "source": "LangChainCompany",
                "target": "LangSmith",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e209",
                "source": "LangChainCompany",
                "target": "LangChain",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e210",
                "source": "LangChainCompany",
                "target": "LangGraph",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e211",
                "source": "LangflowCompany",
                "target": "LangFlow",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e212",
                "source": "Rowboat",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e213",
                "source": "openai",
                "target": "IO",
                "label": "ACQUIRED"
            }
        },
        {
            "data": {
                "id": "e214",
                "source": "KleinerPerkins",
                "target": "Superblocks",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e215",
                "source": "GreenOaks",
                "target": "Superblocks",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e216",
                "source": "Meritech",
                "target": "Superblocks",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e217",
                "source": "SparkCapital",
                "target": "Superblocks",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e218",
                "source": "ADK",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e219",
                "source": "Google",
                "target": "ADK",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e220",
                "source": "ADK",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e221",
                "source": "ADK",
                "target": "A2A",
                "label": "USES"
            }
        },
        {
            "data": {
                "id": "e222",
                "source": "HCompany",
                "target": "HRunner",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e223",
                "source": "HRunner",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e224",
                "source": "UIPath",
                "target": "HCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e225",
                "source": "Amazon",
                "target": "HCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e226",
                "source": "Accel",
                "target": "HCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e227",
                "source": "n8nCompany",
                "target": "n8n",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e228",
                "source": "n8n",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e229",
                "source": "n8n",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e230",
                "source": "FlowiseCompany",
                "target": "Flowise",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e231",
                "source": "YCombinator",
                "target": "FlowiseCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e232",
                "source": "Ironclad",
                "target": "Rivet",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e233",
                "source": "Ironclad",
                "target": "Jurist",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e234",
                "source": "Ironclad",
                "target": "IroncladCLM",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e235",
                "source": "Rivet",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e236",
                "source": "Jurist",
                "target": "AILegal",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e237",
                "source": "IroncladCLM",
                "target": "AICLM",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e238",
                "source": "InsightPartners",
                "target": "CrewAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e239",
                "source": "CraftVentures",
                "target": "CrewAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e240",
                "source": "EarlGrey",
                "target": "CrewAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e241",
                "source": "FirsthandVentures",
                "target": "CrewAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e242",
                "source": "SuperAGICompany",
                "target": "SuperAGI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e243",
                "source": "SuperAGI",
                "target": "AgentPlatform",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e244",
                "source": "Newlands",
                "target": "SuperAGICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e245",
                "source": "KeaCapital",
                "target": "SuperAGICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e246",
                "source": "Better",
                "target": "SuperAGICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e247",
                "source": "Microsoft",
                "target": "UFO",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e248",
                "source": "UFO",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e249",
                "source": "LiveKit",
                "target": "VoiceAgents",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e250",
                "source": "LiveKitCompany",
                "target": "LiveKit",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e251",
                "source": "Redpoint",
                "target": "LiveKitCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e252",
                "source": "Altimeter",
                "target": "LiveKitCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e253",
                "source": "BotpressCompany",
                "target": "botpress",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e254",
                "source": "botpress",
                "target": "AgentPlatform",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e255",
                "source": "Decibel",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e256",
                "source": "Inovia",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e257",
                "source": "PanacheVentures",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e258",
                "source": "RealVentures",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e259",
                "source": "HikeVentures",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e260",
                "source": "OneWay",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e261",
                "source": "FondsInnovexport",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e262",
                "source": "BoxOne",
                "target": "BotpressCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e263",
                "source": "llm_agents",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e264",
                "source": "FoundryLabs",
                "target": "e2b",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e265",
                "source": "e2b",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e266",
                "source": "DustCompany",
                "target": "dust",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e267",
                "source": "Sequoia",
                "target": "DustCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e268",
                "source": "XYZ",
                "target": "DustCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e269",
                "source": "ConnectVentures",
                "target": "DustCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e270",
                "source": "MetaGPTCompany",
                "target": "MetaGPT",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e271",
                "source": "AgentFlow",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-meta-llama",
                "source": "MetaCompany",
                "target": "llama-stack-apps",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-pythagora-gpt",
                "source": "PythagoraCompany",
                "target": "GPTPilot",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-stition-devika",
                "source": "StitionAI",
                "target": "Devika",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-pipecat-pipe",
                "source": "PipecatAI",
                "target": "Pipecat",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-portia-portia",
                "source": "PortiaAICompany",
                "target": "PortiaAI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-giselle-giselle",
                "source": "GiselleAI",
                "target": "Giselle",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-memgpt-memgpt",
                "source": "MemGPTCompany",
                "target": "Memgpt",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openbmb-agentverse",
                "source": "OpenBMB",
                "target": "AgentVerse",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openbmb-repoagent",
                "source": "OpenBMB",
                "target": "RepoAgent",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openbmb-xagent",
                "source": "OpenBMB",
                "target": "XAgent",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-minedojo-voyager",
                "source": "MineDojo",
                "target": "Voyager",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openai-swarm",
                "source": "openai",
                "target": "Swarm",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-llama-agent",
                "source": "llama-stack",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-agentverse-agent",
                "source": "AgentVerse",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-maestro-agent",
                "source": "MaestroFramework",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-upsonic-agent",
                "source": "Upsonic",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-mastra-agent",
                "source": "Mastra",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-portia-agent",
                "source": "PortiaAI",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-swarm-agent",
                "source": "Swarm",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-gptpilot-code",
                "source": "GPTPilot",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-devika-code",
                "source": "Devika",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-repoagent-code",
                "source": "RepoAgent",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-codel-code",
                "source": "Codel",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-microagent-code",
                "source": "MicroAgent",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-agentrun-code",
                "source": "AgentRun",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-claudeeng-code",
                "source": "ClaudeEngineer",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-blockagi-research",
                "source": "BlockAGI",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-llocal-research",
                "source": "LLocalSearch",
                "target": "Research",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-rasagpt-gen",
                "source": "RasaGPT",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-babyagi-gen",
                "source": "BabyAGI-UI",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-ix-gen",
                "source": "ix",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-duetgpt-gen",
                "source": "DuetGPT",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-memgpt-gen",
                "source": "Memgpt",
                "target": "GenPurposeAgent",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-camel-game",
                "source": "CamelAutoGPT",
                "target": "GameSimulation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-skyagi-game",
                "source": "SkyAGI",
                "target": "GameSimulation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-voyager-game",
                "source": "Voyager",
                "target": "GameSimulation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-privategpt-km",
                "source": "PrivateGPT",
                "target": "KnowledgeManagement",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-localgpt-km",
                "source": "LocalGPT",
                "target": "KnowledgeManagement",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-secondbrain-km",
                "source": "SecondBrainAgent",
                "target": "KnowledgeManagement",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-restgpt-auto",
                "source": "RestGPT",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-xagent-auto",
                "source": "XAgent",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-llamaagents-auto",
                "source": "llama-agents",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-agentk-auto",
                "source": "AgentK",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-adas-auto",
                "source": "ADAS",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-giselle-auto",
                "source": "Giselle",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-pipecat-multi",
                "source": "Pipecat",
                "target": "MultimodalAgents",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-voicelab-test",
                "source": "VoiceLab",
                "target": "TestingEvaluation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-openrag-test",
                "source": "OpenRAGEval",
                "target": "TestingEvaluation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-upsonic-mcp",
                "source": "Upsonic",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-codex-ai-devel",
                "source": "Codex",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-codex-openai",
                "source": "openai",
                "target": "Codex",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openai-agents-framework",
                "source": "openai-agents",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-openai-openai-agents-sdk",
                "source": "openai",
                "target": "openai-agents",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openai-agents-sdk-mcp",
                "source": "openai-agents",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-litellm-model-serving",
                "source": "LiteLLM",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-litellm-company-litellm",
                "source": "LiteLLMCompany",
                "target": "LiteLLM",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-ycombinator-litellm",
                "source": "YCombinator",
                "target": "LiteLLMCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-gravity-litellm",
                "source": "GravityFund",
                "target": "LiteLLMCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-pioneer-litellm",
                "source": "PioneerFund",
                "target": "LiteLLMCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-meta-llama-stack",
                "source": "MetaCompany",
                "target": "llama-stack",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-meta-purple-llama",
                "source": "MetaCompany",
                "target": "PurpleLlama",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-purple-llama-security",
                "source": "PurpleLlama",
                "target": "LLMSecurity",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-mistral-agents-api",
                "source": "MistralAI",
                "target": "MistralAgentsAPI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-mistral-agents-api-use-case",
                "source": "MistralAgentsAPI",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-mistral-le-chat",
                "source": "MistralAI",
                "target": "LeChat",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-mistral-mistral-code",
                "source": "MistralAI",
                "target": "MistralCode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-mistral-code-use-case",
                "source": "MistralCode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-mistral-mistral-api",
                "source": "MistralAI",
                "target": "MistralAPI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-mistral-use-case",
                "source": "MistralAPI",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-openai-api",
                "source": "openai",
                "target": "OpenAI-API",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-anthropic-api",
                "source": "Anthropic",
                "target": "AnthropicAPI",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-openai-api-use-case",
                "source": "OpenAI-API",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-anthropic-api-use-case",
                "source": "AnthropicAPI",
                "target": "ModelServing",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-glean-company-glean",
                "source": "GleanCompany",
                "target": "Glean",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-glean-use-case",
                "source": "Glean",
                "target": "KnowledgeManagement",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-glean-use-case-2",
                "source": "Glean",
                "target": "Automation",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-sequoia-glean",
                "source": "Sequoia",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-altimeter-glean",
                "source": "Altimeter",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-kleiner-glean",
                "source": "KleinerPerkins",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-general-catalyst-glean",
                "source": "GeneralCatalyst",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-WellingtonManagement-glean",
                "source": "WellingtonManagement",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-KhoslaVentures-glean",
                "source": "KhoslaVentures",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-BicycleCapital-glean",
                "source": "BicycleCapital",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-GeodesicCapital-glean",
                "source": "GeodesicCapital",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-ArchermanCapital-glean",
                "source": "ArchermanCapital",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-CapitalOneVentures-glean",
                "source": "CapitalOneVentures",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-CitiVentures-glean",
                "source": "CitiVentures",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-Coatue-glean",
                "source": "Coatue",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-DSTGlobal-glean",
                "source": "DSTGlobal",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-Iconiq-glean",
                "source": "Iconiq",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-IVP-glean",
                "source": "IVP",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-LatitudeCapital-glean",
                "source": "LatitudeCapital",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-Lightspeed-glean",
                "source": "Lightspeed",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-SapphireVentures-glean",
                "source": "SapphireVentures",
                "target": "GleanCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-vectara-framework",
                "source": "vectara-agentic",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-chatgpt-llm-client",
                "source": "ChatGPT",
                "target": "LLMClient",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-chatgpt-MCP",
                "source": "ChatGPT",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-microsoft-openai",
                "source": "Microsoft",
                "target": "openai",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-perplexity-product",
                "source": "PerplexityAI",
                "target": "Perplexity",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-perplexity-use-case",
                "source": "Perplexity",
                "target": "AISearch",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-liner-use-case",
                "source": "Liner",
                "target": "AISearch",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-google-ai-search-use-case",
                "source": "GoogleAIMode",
                "target": "AISearch",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-google-ai-search",
                "source": "Google",
                "target": "GoogleAIMode",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-liner-company-product",
                "source": "LinerCompany",
                "target": "Liner",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-chatdev-openbmb",
                "source": "OpenBMB",
                "target": "ChatDev",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-athenic-company",
                "source": "AthenicAICompany",
                "target": "Athenic",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-athenic-use-case",
                "source": "Athenic",
                "target": "DataAnalysis",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-bmw-athenic",
                "source": "BMWiVentures",
                "target": "AthenicAICompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-OpenMCP-MCP",
                "source": "OpenMCP",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "e-MetaMCP-MCP",
                "source": "MetaMCP",
                "target": "MCP",
                "label": "PROXY"
            }
        },
        {
            "data": {
                "id": "e-Waystation-MCP",
                "source": "Waystation",
                "target": "MCP",
                "label": "PROXY"
            }
        },
        {
            "data": {
                "id": "e-mcp-access-point-MCP",
                "source": "mcp-access-point",
                "target": "MCP",
                "label": "PROXY"
            }
        },
        {
            "data": {
                "id": "e-MindsDBCompany",
                "source": "MindsDBCompany",
                "target": "mindsdb",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-mindsdb-mcp",
                "source": "mindsdb",
                "target": "MCP",
                "label": "PROXY"
            }
        },
        {
            "data": {
                "id": "e-pipedream-company-mcp",
                "source": "PipedreamCompany",
                "target": "pipedream-mcp",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-pipedream-company-connect",
                "source": "PipedreamCompany",
                "target": "pipedream-connect",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-pipedream-mcp",
                "source": "pipedream-mcp",
                "target": "MCP",
                "label": "PROXY"
            }
        },
        {
            "data": {
                "id": "e-zep-company-graphiti",
                "source": "ZepCompany",
                "target": "Graphiti",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-YCombinator-ZepCompany",
                "source": "YCombinator",
                "target": "ZepCompany",
                "label": "INVESTED_IN"
            }
        },
        {
            "data": {
                "id": "e-graphiti-use-case",
                "source": "Graphiti",
                "target": "AgentInfrastructure",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-langchain-open-agent",
                "source": "LangChainCompany",
                "target": "OpenAgentPlatform",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-open-agent-mcp",
                "source": "OpenAgentPlatform",
                "target": "MCP",
                "label": "CLIENT"
            }
        },
        {
            "data": {
                "id": "e-open-agent-use-case",
                "source": "OpenAgentPlatform",
                "target": "AgentPlatform",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-langtrace-observability",
                "source": "Langtrace",
                "target": "Observability",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-langtrace-company",
                "source": "LangtraceAICompany",
                "target": "Langtrace",
                "label": "DEVELOPED"
            }
        },
        {
            "data": {
                "id": "e-pinecone-use-case",
                "source": "pinecone",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-milvus-use-case",
                "source": "milvus",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-weaviate-use-case",
                "source": "weaviate",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-qdrant-use-case",
                "source": "qdrant",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-chroma-use-case",
                "source": "chroma",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-faiss-use-case",
                "source": "faiss",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-vespa-use-case",
                "source": "vespa",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-pgvector-use-case",
                "source": "pgvector",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-elasticsearch-use-case",
                "source": "elasticsearch",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-opensearch-use-case",
                "source": "opensearch",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-vald-use-case",
                "source": "vald",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-marqo-use-case",
                "source": "marqo",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-redis-use-case",
                "source": "redis",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-typesense-use-case",
                "source": "typesense",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-vectordb-use-case",
                "source": "vectorchord",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-lance-use-case",
                "source": "lance",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-annoy-use-case",
                "source": "annoy",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-nmslib-use-case",
                "source": "nmslib",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-hnsw-use-case",
                "source": "hnsw",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-docarray-use-case",
                "source": "docarray",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-vectorize-use-case",
                "source": "vectorize",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-zilliz-use-case",
                "source": "zilliz",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-singlestore-use-case",
                "source": "singlestore",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-clickhouse-use-case",
                "source": "clickhouse",
                "target": "VectorDB",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "e-pydanticai-use-case",
                "source": "PydanticAI",
                "target": "AgentFramework",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-julien040-anyquery-to-mcp",
                "source": "julien040-anyquery",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-metatool-ai-metatool-app-to-mcp",
                "source": "metatool-ai-metatool-app",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-mindsdb-mindsdb-to-mcp",
                "source": "mindsdb-mindsdb",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-glenngillen-mcpmcp-server-to-mcp",
                "source": "glenngillen-mcpmcp-server",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-wegotdocs-open-mcp-to-mcp",
                "source": "wegotdocs-open-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-pipedreamhq-pipedream-to-mcp",
                "source": "pipedreamhq-pipedream",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-veritenik-pluggedin-mcp-proxy-to-mcp",
                "source": "veritenik-pluggedin-mcp-proxy",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-tigranbs-mcgravity-to-mcp",
                "source": "tigranbs-mcgravity",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-waystation-ai-mcp-to-mcp",
                "source": "waystation-ai-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-sxhxliang-mcp-access-point-to-mcp",
                "source": "sxhxliang-mcp-access-point",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-hamflx-imagen3-mcp-to-mcp",
                "source": "hamflx-imagen3-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-surescaleai-openai-gpt-image-mcp-to-mcp",
                "source": "surescaleai-openai-gpt-image-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-xspadex-bilibili-mcp-to-mcp",
                "source": "xspadex-bilibili-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-34892002-bilibili-mcp-js-to-mcp",
                "source": "34892002-bilibili-mcp-js",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-aircodelabs-grasp-to-mcp",
                "source": "aircodelabs-grasp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-automatalabs-mcp-server-playwright-to-mcp",
                "source": "automatalabs-mcp-server-playwright",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-blackwhite084-playwright-plus-python-mcp-to-mcp",
                "source": "blackwhite084-playwright-plus-python-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-browserbase-mcp-server-browserbase-to-mcp",
                "source": "browserbase-mcp-server-browserbase",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-browsermcp-mcp-to-mcp",
                "source": "browsermcp-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-co-browser-browser-use-mcp-server-to-mcp",
                "source": "co-browser-browser-use-mcp-server",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-executeautomation-playwright-mcp-server-to-mcp",
                "source": "executeautomation-playwright-mcp-server",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-eyalzh-browser-control-mcp-to-mcp",
                "source": "eyalzh-browser-control-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-fradser-mcp-server-apple-reminders-to-mcp",
                "source": "fradser-mcp-server-apple-reminders",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-getrupt-ashra-mcp-to-mcp",
                "source": "getrupt-ashra-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-kimtaeyoon83-mcp-server-youtube-transcript-to-mcp",
                "source": "kimtaeyoon83-mcp-server-youtube-transcript",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-kimtth-mcp-aoai-web-browsing-to-mcp",
                "source": "kimtth-mcp-aoai-web-browsing",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-microsoft-playwright-mcp-to-mcp",
                "source": "microsoft-playwright-mcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-modelcontextprotocol-server-puppeteer-to-mcp",
                "source": "modelcontextprotocol-server-puppeteer",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-ndthanhdev-mcp-browser-kit-to-mcp",
                "source": "ndthanhdev-mcp-browser-kit",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-pskill9-web-search-to-mcp",
                "source": "pskill9-web-search",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-recursechat-mcp-server-apple-shortcuts-to-mcp",
                "source": "recursechat-mcp-server-apple-shortcuts",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-xspadex-bilibili-mcp-to-computeruse",
                "source": "xspadex-bilibili-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-34892002-bilibili-mcp-js-to-computeruse",
                "source": "34892002-bilibili-mcp-js",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-aircodelabs-grasp-to-computeruse",
                "source": "aircodelabs-grasp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-automatalabs-mcp-server-playwright-to-computeruse",
                "source": "automatalabs-mcp-server-playwright",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-blackwhite084-playwright-plus-python-mcp-to-computeruse",
                "source": "blackwhite084-playwright-plus-python-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-browserbase-mcp-server-browserbase-to-computeruse",
                "source": "browserbase-mcp-server-browserbase",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-browsermcp-mcp-to-computeruse",
                "source": "browsermcp-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-co-browser-browser-use-mcp-server-to-computeruse",
                "source": "co-browser-browser-use-mcp-server",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-executeautomation-playwright-mcp-server-to-computeruse",
                "source": "executeautomation-playwright-mcp-server",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-eyalzh-browser-control-mcp-to-computeruse",
                "source": "eyalzh-browser-control-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-fradser-mcp-server-apple-reminders-to-computeruse",
                "source": "fradser-mcp-server-apple-reminders",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-getrupt-ashra-mcp-to-computeruse",
                "source": "getrupt-ashra-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-kimtaeyoon83-mcp-server-youtube-transcript-to-computeruse",
                "source": "kimtaeyoon83-mcp-server-youtube-transcript",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-kimtth-mcp-aoai-web-browsing-to-computeruse",
                "source": "kimtth-mcp-aoai-web-browsing",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-microsoft-playwright-mcp-to-computeruse",
                "source": "microsoft-playwright-mcp",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-modelcontextprotocol-server-puppeteer-to-computeruse",
                "source": "modelcontextprotocol-server-puppeteer",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-ndthanhdev-mcp-browser-kit-to-computeruse",
                "source": "ndthanhdev-mcp-browser-kit",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-pskill9-web-search-to-computeruse",
                "source": "pskill9-web-search",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-recursechat-mcp-server-apple-shortcuts-to-computeruse",
                "source": "recursechat-mcp-server-apple-shortcuts",
                "target": "ComputerUse",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-oraios-serena-to-mcp",
                "source": "oraios-serena",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-ezyang-codemcp-to-mcp",
                "source": "ezyang-codemcp",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-doggybee-mcp-server-leetcode-to-mcp",
                "source": "doggybee-mcp-server-leetcode",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-jinzcdev-leetcode-mcp-server-to-mcp",
                "source": "jinzcdev-leetcode-mcp-server",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-juehang-vscode-mcp-server-to-mcp",
                "source": "juehang-vscode-mcp-server",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-micl2e2-code-to-tree-to-mcp",
                "source": "micl2e2-code-to-tree",
                "target": "MCP",
                "label": "SERVER"
            }
        },
        {
            "data": {
                "id": "edge-oraios-serena-to-aicoding",
                "source": "oraios-serena",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-ezyang-codemcp-to-aicoding",
                "source": "ezyang-codemcp",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-doggybee-mcp-server-leetcode-to-aicoding",
                "source": "doggybee-mcp-server-leetcode",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-jinzcdev-leetcode-mcp-server-to-aicoding",
                "source": "jinzcdev-leetcode-mcp-server",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-juehang-vscode-mcp-server-to-aicoding",
                "source": "juehang-vscode-mcp-server",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        },
        {
            "data": {
                "id": "edge-micl2e2-code-to-tree-to-aicoding",
                "source": "micl2e2-code-to-tree",
                "target": "AICoding",
                "label": "IN_AREA"
            }
        }
    ]
}